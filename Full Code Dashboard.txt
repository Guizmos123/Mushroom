title: ''
views:
  - path: default_view
    title: Home
    type: custom:vertical-layout
    badges: []
    cards:
      - type: custom:stack-in-card
        cards:
          - type: custom:swipe-card
            cards:
              - type: horizontal-stack
                cards:
                  - type: custom:mushroom-template-card
                    secondary: ''
                    icon: mdi:home
                    layout: vertical
                    icon_color: green
                    tap_action:
                      action: fire-dom-event
                      local_conditional_card:
                        action: set
                        ids:
                          - home: toggle
                          - light: hide
                          - portail: hide
                          - camera: hide
                          - media: hide
                          - divers: hide
                          - monitoring: hide
                          - device: hide
                          - serveur: hide
                          - net: hide
                          - meteo: hide
                          - plan: hide
                          - search: hide
                    card_mod:
                      style: |
                        ha-card {
                          width: 50px;
                          --spacing: 5px;
                          background: var(--card-background-color) !important;
                          box-shadow: var(--ha-card-box-shadow) !important;
                          border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                          margin-top: 2px;
                          margin-bottom: 2px;
                          margin-left: auto;
                          margin-right: auto;
                          transition: all 0.5s;
                        }
                        ha-card:hover {
                          background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                          z-index: 1;
                          transform: scale(1.0);
                          transition: all 0.1s;
                          box-shadow: 0 0 5px !important;
                        }
                  - type: custom:mushroom-template-card
                    secondary: ''
                    icon: mdi:lightbulb
                    layout: vertical
                    icon_color: |-
                      {% if is_state('group.lumiere_2', 'on') %}
                        yellow
                      {% else %}
                        grey
                      {% endif %}
                    badge_icon: none
                    badge_color: disable
                    entity: group.lumiere_2
                    tap_action:
                      action: fire-dom-event
                      local_conditional_card:
                        action: set
                        ids:
                          - home: hide
                          - light: toggle
                          - portail: hide
                          - camera: hide
                          - media: hide
                          - divers: hide
                          - monitoring: hide
                          - device: hide
                          - serveur: hide
                          - net: hide
                          - meteo: hide
                          - plan: hide
                          - search: hide
                    card_mod:
                      style:
                        mushroom-shape-icon$: |
                          ha-icon {
                            {% set media_type = states(config.entity) %}
                            {% if media_type == 'off' %}
                              --card-mod-icon: mdi:lightbulb;
                            {% else %}
                              --card-mod-icon: mdi:lightbulb;
                              --icon-animation: boing 4s infinite;
                              transform-origin: 50% 90%;
                            {% endif %}
                            {{ 'animation: none;' if not is_state('group.lumiere_2', 'on') }}
                          }
                          @keyframes boing {
                            0% { transform: scale3d(1, 1, 1); }
                            7% { transform: scale3d(1.25, 0.75, 1); }
                            10% { transform: scale3d(0.75, 1.25, 1); }
                            12% { transform: scale3d(1.15, 0.85, 1); }
                            16% { transform: scale3d(0.95, 1.05, 1); }
                            19% { transform: scale3d(1.05, 0.95, 1); }
                            25% { transform: scale3d(1, 1, 1); }
                          }
                        style: |
                          ha-card {
                            width: 50px;
                            --spacing: 5px;
                            background: var(--card-background-color) !important;
                            box-shadow: var(--ha-card-box-shadow) !important;
                            border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                            margin-top: 2px;
                            margin-left: auto;
                            margin-right: auto;
                            transition: all 0.5s;
                          }
                          ha-card:hover {
                            background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                            z-index: 1;
                            transform: scale(1.0);
                            box-shadow: 0 0 5px !important;
                            transition: all 0.1s;
                          }
                          mushroom-badge-icon:after {
                            {% if is_state('group.lumiere_2', 'on') %}
                              content: "{{ expand(states.group.lumiere_2) | selectattr( 'state', 'eq', 'on') | list | count }}";
                              position: absolute;
                              display: flex;
                              justify-content: center;
                              align-items: center;
                              background: rgb(var(--rgb-amber));
                              color: var(--card-background-color);
                              font-weight: bolder;
                              border-radius: 50%;
                              top: 0;
                              width: 100%;
                              height: 100%;
                              font-size: 0.7em;
                            {% else %}
                            {% endif %}
                          }
                  - type: custom:mushroom-template-card
                    primary: ''
                    secondary: ''
                    icon: mdi:gate
                    icon_color: |2-
                        {% if is_state('binary_sensor.portail', 'on') %}
                          red
                        {% else %}
                          green
                        {% endif %}
                    layout: vertical
                    entity: binary_sensor.portail
                    tap_action:
                      action: fire-dom-event
                      local_conditional_card:
                        action: set
                        ids:
                          - home: hide
                          - light: hide
                          - portail: toggle
                          - camera: hide
                          - media: hide
                          - divers: hide
                          - monitoring: hide
                          - device: hide
                          - serveur: hide
                          - net: hide
                          - meteo: hide
                          - meteo_menu: hide
                          - plan: hide
                          - search: hide
                    card_mod:
                      style:
                        mushroom-shape-icon$: |
                          .shape {
                            {% set gate = states(config.entity) %}
                            {% if gate == 'on' %}
                              --shape-animation: ping 1s infinite;
                            {% endif %}
                            {{ 'animation: none;' if not is_state('binary_sensor.portail', 'off') }}
                          }
                          @keyframes ping {
                            0% { box-shadow: 0 0 1px 1px rgba(var(--rgb-red), 0.9); }
                            100% { box-shadow: 0 0 5px 10px transparent; }
                          }
                        style: |
                          ha-card {
                            width: 50px;
                            --spacing: 5px;
                            background: var(--card-background-color) !important;
                            box-shadow: var(--ha-card-box-shadow) !important;
                            border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                            margin-top: 2px;
                            margin-left: auto;
                            margin-right: auto;
                            transition: all 0.5s;
                          }
                          ha-card:hover {
                            background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                            z-index: 1;
                            transform: scale(1.0);
                            transition: all 0.1s;
                            box-shadow: 0 0 5px !important;
                          }
                  - type: custom:mushroom-template-card
                    primary: ''
                    secondary: ''
                    icon: none
                    entity: group.grp_motion
                    layout: vertical
                    icon_color: |-
                      {% if is_state('group.grp_motion', 'on') %}
                        red
                      {% else %}
                        blue
                      {% endif %}
                    tap_action:
                      action: fire-dom-event
                      local_conditional_card:
                        action: set
                        ids:
                          - home: hide
                          - light: hide
                          - portail: hide
                          - camera: toggle
                          - media: hide
                          - divers: hide
                          - monitoring: hide
                          - device: hide
                          - serveur: hide
                          - net: hide
                          - meteo: hide
                          - plan: hide
                          - search: hide
                    card_mod:
                      style:
                        mushroom-shape-icon$: |
                          ha-icon {
                            {% set detection = states('group.grp_motion') %}
                            {% if detection == 'on' %}
                              --icon-animation: clip 2s linear infinite;
                              --shape-animation: motion 2s linear infinite;
                              --card-mod-icon: mdi:motion-sensor;
                              transform-origin: 90% 80%
                            {% else %}
                              --card-mod-icon: mdi:cctv-off;
                            {% endif %}
                            {{ 'animation: none;' if not is_state('group.grp_motion', 'on') }}
                          }
                          .shape {
                            {% set detection = states('group.grp_motion') %}
                            {% if detection == 'on' %}
                              --shape-animation: motion 2s linear infinite;
                            {% endif %}
                            {{ 'animation: none;' if not is_state('group.grp_motion', 'on') }}
                          }
                          @keyframes clip {
                            50% { clip-path: polygon(0 0, 55% 0, 100% 100%, 0 100%); }
                          }
                          @keyframes motion {
                            0%, 100% { --shape-color: rgba(var(--rgb-red), 0.4); }
                            50% { --shape-color: rgba(var(--rgb-red), 0.25); }
                          }
                        style: |
                          ha-card {
                            width: 50px;
                            --spacing: 5px;
                            background: var(--card-background-color) !important;
                            box-shadow: var(--ha-card-box-shadow) !important;
                            border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                            margin-top: 2px;
                            margin-left: auto;
                            margin-right: auto;
                            transition: all 0.5s;
                          }
                          ha-card:hover {
                            background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                            z-index: 1;
                            transform: scale(1.0);
                            transition: all 0.1s;
                            box-shadow: 0 0 5px !important;
                          }
                  - type: custom:mushroom-template-card
                    secondary: ''
                    entity: media_player.currently_playing
                    layout: vertical
                    icon: none
                    icon_color: |2-
                        {% if is_state('media_player.currently_playing', 'playing') %}
                          cyan
                        {% elif is_state('media_player.currently_playing', 'paused') %}
                          orange
                        {% else %}
                          green
                        {% endif %}
                    tap_action:
                      action: fire-dom-event
                      local_conditional_card:
                        action: set
                        ids:
                          - home: hide
                          - light: hide
                          - portail: hide
                          - camera: hide
                          - media: toggle
                          - divers: hide
                          - monitoring: hide
                          - device: hide
                          - serveur: hide
                          - net: hide
                          - meteo: hide
                          - plan: hide
                          - search: hide
                    card_mod:
                      style: |
                        ha-card {
                          width: 50px;
                          --spacing: 5px;
                          background: var(--card-background-color) !important;
                          box-shadow: var(--ha-card-box-shadow) !important;
                          border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                          margin-top: 2px;
                          margin-left: auto;
                          margin-right: auto;
                          transition: all 0.5s;
                        }
                        ha-card:hover {
                          background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                          z-index: 1;
                          transform: scale(1.0);
                          transition: all 0.1s;
                          box-shadow: 0 0 5px !important;
                        }
                        mushroom-shape-icon {
                          display: flex;
                          {% set media_type = state_attr(config.entity, 'media_content_type') %}
                          {% if media_type == 'tvshow' %}
                            --card-mod-icon: mdi:television-classic;
                            animation: flicker 1s linear infinite alternate;
                          {% elif media_type == 'movie' %}
                            --card-mod-icon: mdi:movie-roll;
                            --icon-animation: spin 1.5s linear infinite;
                          {% elif media_type == 'music' %}
                            --card-mod-icon: mdi:music;
                            animation: beat 1.3s ease-out infinite both;
                          {% elif media_type == 'playlist' %}
                            --card-mod-icon: mdi:music;
                            animation: beat 1.3s ease-out infinite both;
                          {% else %}
                            --card-mod-icon: mdi:multimedia;
                          {% endif %}
                          {{ 'animation: none;' if not is_state(config.entity, 'playing') }}
                        }
                        @keyframes flicker {
                          0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--rgb-cyan), 1); }
                          32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--rgb-cyan), 0.3); }
                        }
                        @keyframes beat {
                          0%, 60% { --icon-symbol-size: 21px; }
                          5%, 17%, 57% { --icon-symbol-size: 22px; }
                          10%, 20%, 51% { --icon-symbol-size: 23px; }
                          25%, 45% { --icon-symbol-size: 24px; }
                          30%, 39% { --icon-symbol-size: 25px; }
                          33% { --icon-symbol-size: 26px; }
                        }
              - type: horizontal-stack
                cards:
                  - type: custom:mushroom-template-card
                    secondary: ''
                    icon: mdi:dots-hexagon
                    layout: vertical
                    icon_color: blue
                    tap_action:
                      action: fire-dom-event
                      local_conditional_card:
                        action: set
                        ids:
                          - home: hide
                          - light: hide
                          - portail: hide
                          - camera: hide
                          - media: hide
                          - divers: toggle
                          - monitoring: hide
                          - device: hide
                          - serveur: hide
                          - net: hide
                          - meteo: hide
                          - plan: hide
                          - search: hide
                    card_mod:
                      style: |
                        ha-card {
                          width: 50px;
                          --spacing: 5px;
                          background: var(--card-background-color) !important;
                          box-shadow: var(--ha-card-box-shadow) !important;
                          border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                          margin-top: 2px;
                          margin-left: auto;
                          margin-right: auto;
                          transition: all 0.5s;
                        }
                        ha-card:hover {
                          background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                          z-index: 1;
                          transform: scale(1.0);
                          transition: all 0.1s;
                          box-shadow: 0 0 5px !important;
                        }
                  - type: custom:mushroom-template-card
                    secondary: ''
                    icon: mdi:chart-bar
                    layout: vertical
                    icon_color: yellow
                    tap_action:
                      action: fire-dom-event
                      local_conditional_card:
                        action: set
                        ids:
                          - home: hide
                          - light: hide
                          - portail: hide
                          - camera: hide
                          - media: hide
                          - divers: hide
                          - monitoring: toggle
                          - device: hide
                          - serveur: hide
                          - net: hide
                          - meteo: hide
                          - plan: hide
                          - search: hide
                    card_mod:
                      style: |
                        ha-card {
                          width: 50px;
                          --spacing: 5px;
                          background: var(--card-background-color) !important;
                          box-shadow: var(--ha-card-box-shadow) !important;
                          border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                          margin-top: 2px;
                          margin-left: auto;
                          margin-right: auto;
                          transition: all 0.5s;
                        }
                        ha-card:hover {
                          background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                          z-index: 1;
                          transform: scale(1.0);
                          transition: all 0.1s;
                          box-shadow: 0 0 5px !important;
                        }
                  - type: custom:mushroom-template-card
                    secondary: ''
                    icon: mdi:devices
                    layout: vertical
                    icon_color: cyan
                    tap_action:
                      action: fire-dom-event
                      local_conditional_card:
                        action: set
                        ids:
                          - home: hide
                          - light: hide
                          - portail: hide
                          - camera: hide
                          - media: hide
                          - divers: hide
                          - monitoring: hide
                          - device: toggle
                          - serveur: hide
                          - net: hide
                          - meteo: hide
                          - plan: hide
                          - search: hide
                    card_mod:
                      style: |
                        ha-card {
                          width: 50px;
                          --spacing: 5px;
                          background: var(--card-background-color) !important;
                          box-shadow: var(--ha-card-box-shadow) !important;
                          border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                          margin-top: 2px;
                          margin-left: auto;
                          margin-right: auto;
                          transition: all 0.5s;
                        }
                        ha-card:hover {
                          background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                          z-index: 1;
                          transform: scale(1.0);
                          transition: all 0.1s;
                          box-shadow: 0 0 5px !important;
                        }
                  - type: custom:mushroom-template-card
                    primary: ''
                    secondary: ''
                    icon: mdi:server-network
                    layout: vertical
                    icon_color: |2-
                        {% if is_state('device_tracker.dalg_udm', 'home') %}
                          green
                        {% else %}
                          red
                        {% endif %}
                    tap_action:
                      action: fire-dom-event
                      local_conditional_card:
                        action: set
                        ids:
                          - home: hide
                          - light: hide
                          - portail: hide
                          - camera: hide
                          - media: hide
                          - divers: hide
                          - monitoring: hide
                          - device: hide
                          - serveur: toggle
                          - net: hide
                          - meteo: hide
                          - plan: hide
                          - search: hide
                    card_mod:
                      style:
                        mushroom-shape-icon$: |
                          .shape {
                            {% set net = states('device_tracker.dalg_udm') %}
                            {% if net == 'not_home' %}
                              --shape-animation: ping 2s infinite;
                            {% endif %}
                            {{ 'animation: none;' if not is_state('device_tracker.dalg_udm', 'home') }}
                          }
                          @keyframes ping {
                            0% { box-shadow: 0 0 1px 1px rgba(var(--rgb-red), 0.7); }
                            100% { box-shadow: 0 0 5px 15px transparent; }
                          }
                        style: |
                          ha-card {
                            width: 50px;
                            --spacing: 5px;
                            background: var(--card-background-color) !important;
                            box-shadow: var(--ha-card-box-shadow) !important;
                            border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                            margin-top: 2px;
                            margin-left: auto;
                            margin-right: auto;
                            transition: all 0.5s;
                          }
                          ha-card:hover {
                            background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                            z-index: 1;
                            transform: scale(1.0);
                            transition: all 0.1s;
                            box-shadow: 0 0 5px !important;
                          }
                  - type: custom:mushroom-template-card
                    secondary: ''
                    icon: mdi:update
                    layout: vertical
                    icon_color: |-
                      {% if is_state('group.grp_update_all', 'on') %}
                        red
                      {% elif not is_state('sensor.hacs', '0') %}
                        red
                      {% else %}
                        green
                      {% endif %}
                    badge_icon: none
                    badge_color: |-
                      {% if is_state('group.grp_update_all', 'on') %}
                        red
                      {% elif not is_state('sensor.hacs', '0') %}
                        red
                      {% else %}
                        disable
                      {% endif %}
                    tap_action:
                      action: fire-dom-event
                      haptic: heavy
                      browser_mod:
                        service: browser_mod.popup
                        data:
                          style: '--popup-background-color: transparent;'
                          size: normal
                          content:
                            type: custom:stack-in-card
                            cards:
                              - type: custom:auto-entities
                                card:
                                  square: false
                                  type: grid
                                  columns: 1
                                card_param: cards
                                filter:
                                  include:
                                    - entity_id: update.home*
                                      options:
                                        type: custom:mushroom-entity-card
                                  exclude:
                                    - entity_id: update.*
                                      state: 'off'
                                sort:
                                  method: friendly_name
                                  reverse: false
                                  numeric: false
                                  ignore_case: true
                              - type: custom:auto-entities
                                card:
                                  square: false
                                  type: grid
                                  columns: 1
                                card_param: cards
                                filter:
                                  include:
                                    - entity_id: update.*
                                      options:
                                        type: custom:mushroom-entity-card
                                  exclude:
                                    - entity_id: update.*
                                      state: 'off'
                                    - entity_id: update.dalg*
                                    - entity_id: update.home*
                                sort:
                                  method: friendly_name
                                  reverse: false
                                  numeric: false
                                  ignore_case: true
                              - type: custom:auto-entities
                                card:
                                  square: false
                                  type: grid
                                  columns: 1
                                card_param: cards
                                filter:
                                  include:
                                    - entity_id: update.*
                                      options:
                                        type: custom:mushroom-entity-card
                                  exclude:
                                    - entity_id: update.*
                                      state: 'off'
                                    - entity_id: update.dalg_ap*
                                    - entity_id: update.dalg_lte
                                    - entity_id: update.dalg_switch*
                                    - entity_id: update.dalg_udm
                                    - entity_id: update.home*
                                    - entity_id: update.file_editor_update
                                    - entity_id: update.influxdb_update
                                    - entity_id: update.let_s_encrypt_update
                                    - entity_id: update.mosquitto_broker_update
                                    - entity_id: update.myelectricaldata_update
                                    - entity_id: update.node_red_update
                                    - entity_id: update.samba_share_update
                                    - entity_id: update.sqlite_web_update
                                    - entity_id: update.terminal_ssh_update
                                    - entity_id: update.z_wave_js_update
                                    - entity_id: update.zigbee2mqtt_edge_update
                                sort:
                                  method: friendly_name
                                  reverse: false
                                  numeric: false
                                  ignore_case: true
                              - type: custom:auto-entities
                                card:
                                  square: false
                                  type: grid
                                  columns: 1
                                card_param: cards
                                filter:
                                  include:
                                    - entity_id: update.*
                                      options:
                                        type: custom:mushroom-entity-card
                                  exclude:
                                    - entity_id: update.*
                                      state: 'off'
                                    - entity_id: update.dalg_nas_dsm_update
                                    - entity_id: update.dalg_ups
                                    - entity_id: update.home*
                                    - entity_id: update.file_editor_update
                                    - entity_id: update.influxdb_update
                                    - entity_id: update.let_s_encrypt_update
                                    - entity_id: update.mosquitto_broker_update
                                    - entity_id: update.myelectricaldata_update
                                    - entity_id: update.node_red_update
                                    - entity_id: update.samba_share_update
                                    - entity_id: update.sqlite_web_update
                                    - entity_id: update.terminal_ssh_update
                                    - entity_id: update.z_wave_js_update
                                    - entity_id: update.zigbee2mqtt_edge_update
                                sort:
                                  method: friendly_name
                                  reverse: false
                                  numeric: false
                                  ignore_case: true
                              - type: custom:auto-entities
                                card:
                                  square: false
                                  type: grid
                                  columns: 1
                                card_param: cards
                                filter:
                                  include:
                                    - entity_id: sensor.hacs
                                      options:
                                        type: custom:mushroom-entity-card
                                  exclude:
                                    - entity_id: sensor.hacs
                                      state: '0'
                                sort:
                                  method: friendly_name
                                  reverse: false
                                  numeric: false
                                  ignore_case: true
                    card_mod:
                      mushroom-shape-icon$: |
                        ha-icon {
                          {% set state = states(config.entity) %}
                          {% if state == 'on' %}
                            --icon-animation: fade-out 1.5s infinite;
                          {% endif %}
                        }
                        @keyframes fade-out {
                          0% { opacity:1; }
                          50% { opacity:0; }
                          100% { opacity:1; }
                        }
                      style: |
                        ha-card {
                          width: 50px;
                          --spacing: 5px;
                          background: var(--card-background-color) !important;
                          box-shadow: var(--ha-card-box-shadow) !important;
                          border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                          margin-top: 2px;
                          margin-left: auto;
                          margin-right: auto;
                          transition: all 0.5s;
                        }
                        /* Add subtle color on hover */
                        ha-card:hover {
                          transform: scale(1.0);
                          transition: all 0.1s;
                          box-shadow: 0 0 5px !important;
                          background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                        }
                        mushroom-badge-icon:after {
                          {% if is_state('group.grp_update_all', 'on') %}
                            content: "{{ expand(states.group.grp_update_all) | selectattr( 'state', 'eq', 'on') | list | count + states('sensor.hacs') |float |int }}";
                            position: absolute;
                            display: flex;
                            justify-content: center;
                            align-items: center;
                            background: rgb(var(--rgb-red));
                            color: var(--card-background-color);
                            font-weight: bolder;
                            border-radius: 50%;
                            top: 0;
                            width: 100%;
                            height: 100%;
                            font-size: 0.7em;
                          {% elif not is_state('sensor.hacs', '0') %}
                            content: "{{ expand(states.group.grp_update_all) | selectattr( 'state', 'eq', 'on') | list | count + states('sensor.hacs') |float |int }}";
                            position: absolute;
                            display: flex;
                            justify-content: center;
                            align-items: center;
                            background: rgb(var(--rgb-red));
                            color: var(--card-background-color);
                            font-weight: bolder;
                            border-radius: 50%;
                            top: 0;
                            width: 100%;
                            height: 100%;
                            font-size: 0.7em;
                          {% endif %}
                        }
              - type: horizontal-stack
                cards:
                  - type: custom:mushroom-template-card
                    primary: Search...
                    secondary: ''
                    icon: mdi:search-web
                    icon_color: white
                    entity: input_select.plex_recently
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        service: browser_mod.popup
                        data:
                          title: ChatGPT
                          content:
                            type: custom:stack-in-card
                            cards:
                              - type: entities
                                entities:
                                  - entity: input_text.gpt_prompt
                              - type: markdown
                                content: >-
                                  {{
                                  state_attr('sensor.hassio_mindsdb_response',
                                  'response_text') }}
                                title: Réponse
                    card_mod:
                      style: |
                        ha-card {
                          {% if is_state('media_player.currently_playing', ['idle','off']) %}
                            background: var(--card-background-color) !important;
                            box-shadow: var(--ha-card-box-shadow) !important;
                            width: 100%;
                            --spacing: 5px;
                            margin-bottom: 2px;
                            margin-top: 2px;
                            border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                            margin-left: 0px;
                            margin-right: auto;
                          {% else %}
                            width: 50px;
                            --spacing: 5px;
                            background: var(--card-background-color) !important;
                            box-shadow: var(--ha-card-box-shadow) !important;
                            border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                            margin-top: 2px;
                            margin-bottom: 2px;
                            margin-left: 1%;
                            transition: all 0.5s;
                          {% endif %} 
                        }
                        ha-card:hover {
                          background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                          transition: all 0.1s;
                        }
                  - type: conditional
                    conditions:
                      - entity: media_player.currently_playing
                        state_not: 'off'
                      - entity: media_player.currently_playing
                        state_not: idle
                    card:
                      type: custom:stack-in-card
                      mode: horizontal
                      cards:
                        - type: custom:mushroom-media-player-card
                          entity: media_player.currently_playing
                          layout: horizontal
                          show_volume_level: true
                          use_media_info: true
                          tap_action:
                            action: fire-dom-event
                            browser_mod:
                              service: browser_mod.popup
                              data:
                                title: En cours
                                content:
                                  type: custom:stack-in-card
                                  cards:
                                    - type: custom:mushroom-media-player-card
                                      entity: media_player.currently_playing
                                      icon_type: none
                                      layout: vertical
                                      media_controls:
                                        - previous
                                        - play_pause_stop
                                        - next
                                      volume_controls:
                                        - volume_set
                                        - volume_buttons
                                      show_volume_level: false
                                      use_media_info: true
                                      collapsible_controls: false
                                      card_mod:
                                        style:
                                          mushroom-state-info$: >
                                            /* CSS for Mushroom Popup Media Player
                                            */

                                            .secondary:before {

                                              /* Add album name between song title and artist name */
                                              {% if state_attr(config.entity, 'media_album_name') != none %}
                                                content: "{{ state_attr(config.entity, 'media_album_name')}}\A";
                                              {% endif %}

                                              /* Format title to fit on seperate line */
                                              white-space: pre;
                                              text-overflow: ellipsis;
                                            }
                                          .: |
                                            ha-card {

                                              /* Remove border from media player */
                                              --ha-card-border-width: 0;

                                              /* Apply album art color to media player icon & volume bar */
                                              --rgb-state-media-player: var(--album-art-color);

                                              /* Disable transitions */
                                              transition: all 0.5s;
                                            }
                                            .actions {

                                              /* Apply album art color to media player controls */
                                              --rgb-primary-text-color: var(--album-art-color);
                                              --primary-text-color: rgb(var(--album-art-color));

                                              /* Move volume button to seperate row */
                                              display: block !important;
                                            }
                                            ha-card:before {
                                              content: "";

                                              /* Show album art above media player when active and default image when idle */
                                              {% if is_state(config.entity, ['playing', 'paused']) %}
                                                background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                              {% else %}
                                                background: url('/local/idle_art.png') center no-repeat;
                                              {% endif %}

                                              /* Add padding around album art */
                                              margin: 0px 4px 16px;

                                              /* Add drop shadow to album art */
                                              filter: drop-shadow(4px 4px 6px rgba(var(--album-art-color), 0.3));

                                              /* Round borders of album art */
                                              border-radius: var(--control-border-radius);

                                              /* Adjust the album art aspect ratio based on media type */
                                              {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                              {% if media_type == 'tvshow' %}
                                                aspect-ratio: 16 / 9;
                                              {% elif media_type == 'movie' %}
                                                aspect-ratio: 2 / 3;
                                              {% else %}
                                                aspect-ratio: 1 / 1;
                                              {% endif %}

                                              /* Stretch album art to fit box. Fix for if album art is not sized correctly */
                                              background-size: 100% 100%;
                                            }
                                            mushroom-button {

                                              /* Size volume button to match other controls and center */
                                              display: flex;
                                              width: calc((100% / 3) - (var(--spacing) / 3) * 2);
                                              margin: auto;
                                            }
                                            mushroom-media-player-media-control,
                                            mushroom-media-player-volume-control {

                                              /* Correct margins for volume button on second row */
                                              display: flex;
                                              margin-right: 0px !important;
                                              
                                              /* Check if PLAY|STOP are supported and adjust margin accordingly */
                                              {% if state_attr(config.entity, 'supported_features') | int | bitwise_and(20480) > 0 %}
                                                margin-bottom: var(--spacing) !important;
                                              {% endif %}
                                            }
                                    - entity: media_player.currently_playing
                                      hide:
                                        icon: true
                                        name: true
                                        runtime: true
                                        source: true
                                        power: true
                                        state_label: true
                                        volume: true
                                        info: true
                                        progress: false
                                        controls: true
                                      more_info: false
                                      type: custom:mini-media-player
                                      toggle_power: false
                                      group: true
                                      card_mod:
                                        style:
                                          mmp-progress$: |
                                            paper-progress {

                                              /* Apply album art color to progress bar when paused */
                                              --paper-progress-container-color: rgba(var(--album-art-color), 0.2) !important;
                                              
                                              /* Apply album art color to progress bar when playing */
                                              --paper-progress-active-color: rgb(var(--album-art-color)) !important;
                                            }
                                          .: |
                                            ha-card {

                                              /* Move progress bar up into gap. Check if PLAY|STOP are supported */
                                              --base-offset: calc(4 * var(--mush-spacing, 12px)
                                                                  + 1.33 * var(--mush-spacing, 12px)
                                                                  + var(--mush-card-primary-line-height, 1.5) * var(--mush-card-primary-font-size, 14px)
                                                                  + var(--mush-card-secondary-line-height, 1.5) * var(--mush-card-secondary-font-size, 12px)
                                                                  + var(--mush-control-height, 42px));

                                              /* Check if Play (16385) or Stop (4096) are supported and add control button height if they are */
                                              {% if state_attr(config.entity, 'supported_features') | int | bitwise_and(20480) > 0 %}
                                                --control-offset: calc(var(--mush-spacing, 12px) + var(--mush-control-height, 42px));
                                              {% else %}
                                                --control-offset: 0px;
                                              {% endif %}

                                              /* Check if album name is present and add to height if it is */
                                              {% set album_name = state_attr(config.entity, 'media_album_name') %}
                                              {% if album_name == None or album_name == "" %}
                                                --album-offset: 0px;
                                              {% else %}
                                                --album-offset: calc(var(--mush-card-secondary-line-height, 1.5) * var(--mush-card-secondary-font-size, 12px));
                                              {% endif %}

                                              bottom: calc(var(--base-offset) + var(--control-offset) + var(--album-offset));

                                              /* Correct margins for progress bar */
                                              margin: 0px 28px -12px;

                                              /* Set height of card to match pregress bar height */
                                              height: var(--mmp-progress-height);

                                              /* Remove border outline */
                                              --ha-card-border-width: 0;

                                              /* Round corners of progress bar */
                                              --mmp-border-radius: var(--control-border-radius, 12px) !important;

                                              /* Set height of progress bar */
                                              --mmp-progress-height: 12px !important;

                                              /* Remove transitions to prevent progress bar floating in */
                                              transition: all 0.5s;
                                            }
                                  card_mod:
                                    style: |
                                      :host {

                                        /* Assign album art color to variable used in popup */
                                        --album-art-color:      
                                        {% if is_state('media_player.currently_playing', ['playing', 'paused']) %}
                                          {{ states('sensor.muted_color') }}
                                        {% else %}
                                          141, 117, 238
                                        {% endif %};

                                        /* Remove background because it is applied to popup */
                                        --ha-card-background: none;

                                        
                                      }
                                card_mod:
                                  style:
                                    ha-dialog$: |
                                      .mdc-dialog__surface {

                                        /* Apply gradient background to popup using album art colors. Set to default colors when idle */
                                        {% if is_state('media_player.currently_playing', ['playing', 'paused']) %}
                                          background: linear-gradient(305deg, transparent 50%, rgba({{ states('sensor.dark_vibrant_color') }}, 0.4)), 
                                                      linear-gradient(55deg, transparent 50%, rgba({{ states('sensor.vibrant_color') }}, 0.2)),  
                                                      linear-gradient(180deg, transparent 40%, rgba({{ states('sensor.dark_muted_color') }}, 0.3));
                                        {% else %}
                                          background: linear-gradient(0deg, transparent 40%, rgba(192, 127, 190, 0.3)), 
                                                      linear-gradient(240deg, transparent 40%, rgba(143, 119, 237, 0.3)),  
                                                      linear-gradient(120deg, transparent 40%, rgba(122, 181, 239, 0.3));
                                        {% endif %}
                                      }
                                    ha-header-bar$: |
                                      .mdc-top-app-bar {

                                        /* Remove header background so that popup background is visible */
                                        --mdc-theme-primary: none;

                                        /* Reduced the gap between header and album art */
                                        margin-bottom: -16px;
                                      }
                                    .: |
                                      :host {

                                        /* Set width of popup */
                                        --popup-min-width: 450px;
                                      }
                          card_mod:
                            style: |
                              mushroom-shape-icon {
                                display: flex;
                                {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                {% if media_type == 'tvshow' %}
                                  --card-mod-icon: mdi:television-classic;
                                  animation: flicker 1s linear infinite alternate;
                                {% elif media_type == 'movie' %}
                                  --card-mod-icon: mdi:movie-roll;
                                  --icon-animation: spin 2s linear infinite reverse;
                                {% elif media_type == 'music' %}
                                  --card-mod-icon: mdi:music;
                                  animation: beat 1.3s ease-out infinite both;
                                {% elif media_type == 'playlist' %}
                                  --card-mod-icon: mdi:music;
                                  animation: beat 1.3s ease-out infinite both;
                                {% else %}
                                  --card-mod-icon: mdi:play;
                                {% endif %}
                              }
                              @keyframes flicker {
                                0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--rgb-indigo), 1); }
                                32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--rgb-indigo), 0.6); }
                              }
                              @keyframes beat {
                                0%, 60% { --icon-symbol-size: 21px; }
                                5%, 17%, 57% { --icon-symbol-size: 22px; }
                                10%, 20%, 51% { --icon-symbol-size: 23px; }
                                25%, 45% { --icon-symbol-size: 24px; }
                                30%, 39% { --icon-symbol-size: 25px; }
                                33% { --icon-symbol-size: 26px; }
                              }
                              ha-card {
                                {% if not is_state(config.entity, 'off') %}
                                  background: rgba(var(--rgb-card-background-color), 0.6) url( '{{ state_attr(config.entity, "entity_picture") }}' ) center no-repeat;
                                  background-size: cover;
                                  background-blend-mode: overlay;
                                {% endif %} 
                                border-radius: 35px 35px 35px 35px !important;
                                height: 55px !important;
                                margin-left: -8px;
                              }
                      card_mod:
                        style: |
                          ha-card {
                            {% if is_state('media_player.currently_playing', ['playing','paused']) %}
                              background-image: url( '{{ state_attr( "media_player.currently_playing", "entity_picture" ) }}' );
                              background-position: center;
                              background-repeat: no-repeat;
                              background-size: cover;
                              background-color: rgba(var(--rgb-card-background-color), 0.8);
                              background-blend-mode: overlay;
                              position: relative;
                              margin-left: -72%;
                              width: 170%;
                              border-radius: 35px 35px 35px 35px !important;
                              transition: all 0.5s;
                            {% else %}
                              width: 50px;
                              --spacing: 5px;
                              background: var(--card-background-color) !important;
                              box-shadow: var(--ha-card-box-shadow) !important;
                              border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                              margin-top: 2px;
                              margin-left: auto;
                              margin-right: -64%;
                              transition: all 0.5s;
                            {% endif %} 
                          }
              - type: horizontal-stack
                cards:
                  - type: custom:mushroom-template-card
                    secondary: ''
                    icon: mdi:plus
                    layout: vertical
                    icon_color: black
                    tap_action:
                      action: fire-dom-event
                      local_conditional_card:
                        action: set
                        ids:
                          - menu: toggle
                    card_mod:
                      style: |
                        ha-card {
                          width: 50px;
                          --spacing: 5px;
                          background: var(--card-background-color) !important;
                          box-shadow: var(--ha-card-box-shadow) !important;
                          border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                          margin-top: 2px;
                          margin-bottom: 2px;
                          margin-left: auto;
                          margin-right: auto;
                          transition: all 0.5s;
                        }
                        ha-card:hover {
                          background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                          z-index: 1;
                          transform: scale(1.0);
                          transition: all 0.1s;
                          box-shadow: 0 0 5px !important;
                        }
        card_mod:
          style: |
            ha-card {
              overflow: visible !important;
              margin-top: calc(-1 * var(--mush-chip-spacing, 8px));
              box-shadow: none;
              border: none;
              background: none;
              padding: var(--mush-chip-spacing, 8px);
              transition: all 0.5s;
              {% if is_state('binary_sensor.ping_dalg_pc', 'on') %}
              {% elif is_state('binary_sensor.ping_dalg_dell', 'on') %}
              {% elif is_state('input_boolean.notifications', 'on') %}
              {% elif not is_state('sensor.devices_with_low_battery', '0') %}
              {% elif is_state('input_boolean.bal', 'on') %}
              {% elif is_state('calendar.anniversaire', 'on') %}
              {% elif is_state('group.grp_update_all', 'on') %}
                margin-bottom: 0px !important;
              {% else %}
                margin-bottom: 30px !important;
              {% endif %}
            }
            :host {
              position: sticky !important;
              z-index: 4 !important;
              top: var(--header-height) !important;
            }
            ha-card:before {
              content: "";
              position: absolute;
              top: 0px;
              left: 0px;
              height: 100%;
              width: calc(100% - 2 * var(--ha-card-border-width, 1px));
              z-index: -1;
              backdrop-filter: blur(12px);
              -webkit-backdrop-filter: blur(12px);
              border-radius: 35px;
              box-shadow: var(--ha-card-box-shadow);
              border: var(--ha-card-border-width, 1px) solid var(--ha-card-border-color, var(--divider-color, #e0e0e0));
              {% if is_state('media_player.currently_playing', ['playing', 'paused']) %}
                background: linear-gradient(135deg, rgba({{ states('sensor.dark_vibrant_color') }}, 0.85), rgba({{ states('sensor.dark_muted_color') }}, 0.75));
              {% else %}
                background: rgba(var(--rgb-card-background-color), 0.20);
              {% endif %}
            }
      - type: custom:stack-in-card
        cards:
          - type: custom:mushroom-chips-card
            alignment: justify
            chips:
              - type: conditional
                conditions:
                  - entity: binary_sensor.ping_dalg_pc
                    state: 'on'
                chip:
                  type: template
                  entity: binary_sensor.ping_dalg_pc
                  tap_action:
                    action: fire-dom-event
                    local_conditional_card:
                      action: set
                      ids:
                        - home: hide
                        - light: hide
                        - portail: hide
                        - camera: hide
                        - media: hide
                        - divers: hide
                        - monitoring: hide
                        - device: toggle
                        - serveur: hide
                        - net: hide
                        - meteo: hide
                        - plan: hide
                  icon: |-
                    {% if is_state('binary_sensor.ping_dalg_pc', 'off') %}
                      mdi:desktop-tower-monitor
                    {% else %}
                      mdi:desktop-tower-monitor
                    {% endif %}
                  content: Dell 3080
                  icon_color: |-
                    {% if is_state('binary_sensor.ping_dalg_pc', 'off') %}
                      red
                    {% else %}
                      green
                    {% endif %}
                  card_mod:
                    style: |
                      /* Notification indicator */
                      ha-card {
                        margin: 0px 0px 0px;
                      }
              - type: conditional
                conditions:
                  - entity: binary_sensor.ping_dalg_dell
                    state: 'on'
                chip:
                  type: template
                  entity: binary_sensor.ping_dalg_dell
                  tap_action:
                    action: fire-dom-event
                    local_conditional_card:
                      action: set
                      ids:
                        - home: hide
                        - light: hide
                        - portail: hide
                        - camera: hide
                        - media: hide
                        - divers: hide
                        - monitoring: hide
                        - device: toggle
                        - serveur: hide
                        - net: hide
                        - meteo: hide
                        - plan: hide
                  icon: |-
                    {% if is_state('binary_sensor.ping_dalg_dell', 'off') %}
                      mdi:desktop-tower-monitor
                    {% else %}
                      mdi:desktop-tower-monitor
                    {% endif %}
                  content: Dell SFP+
                  icon_color: |-
                    {% if is_state('binary_sensor.ping_dalg_dell', 'off') %}
                      red
                    {% else %}
                      green
                    {% endif %}
                  card_mod:
                    style: |
                      /* Notification indicator */
                      ha-card {
                        margin: 0px 0px 0px;
                      }
              - type: conditional
                conditions:
                  - entity: calendar.anniversaire
                    state: 'on'
                chip:
                  type: template
                  content: >-
                    🎂{% if is_state('calendar.anniversaire', 'on') %} {{
                    state_attr('calendar.anniversaire', "message") }} {% else %}
                    '' {% endif %}
                  entity: calendar.anniversaire
                  double_tap_action:
                    action: none
                  tap_action:
                    action: none
                  hold_action:
                    action: none
              - type: conditional
                conditions:
                  - entity: input_boolean.bal
                    state: 'on'
                chip:
                  type: template
                  entity: input_boolean.bal
                  icon_color: red
                  icon: mdi:mailbox-outline
                  content: 'Boîte aux lettres : {{ states(''sensor.bal_name'') }}'
                  tap_action:
                    action: toggle
                  card_mod:
                    style: |
                      ha-card { 
                        --chip-border-width: 0;
                        --chip-box-shadow: {{ "0px 0px 30px red" if is_state('input_boolean.bal', 'on') }};
                       }
                  double_tap_action:
                    action: none
                  hold_action:
                    action: none
              - type: spacer
              - type: conditional
                conditions:
                  - entity: sensor.devices_with_low_battery
                    state_not: '0'
                chip:
                  type: template
                  entity: sensor.devices_with_low_battery
                  icon_color: red
                  icon: mdi:battery-alert
                  content: '{{ states(entity) }}'
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        style: |-
                          --popup-background-color: transparent;
                          --popup-border-color: transparent;
                        content:
                          type: custom:auto-entities
                          filter:
                            include:
                              - attributes:
                                  device_class: battery
                                state: < 21
                                options:
                                  type: custom:mushroom-template-card
                                  primary: >-
                                    {{ state_attr(entity, 'friendly_name') |
                                    title }}
                                  secondary: '{{ states(entity) }}%'
                                  icon: >
                                    {% set battery_level = (states(entity) | int
                                    / 10) | round(0) | int * 10 %} {% if
                                    battery_level == 100 %}
                                      mdi:battery
                                    {% elif battery_level > 0 %}
                                      mdi:battery-{{ battery_level }}
                                    {% else %}
                                      mdi:battery-outline
                                    {% endif %}
                                  icon_color: >-
                                    {% set battery_level = states(entity) | int
                                    %}

                                    {% if battery_level > 90 %} 
                                      green
                                    {% elif battery_level > 60 %}
                                      light-green
                                    {% elif battery_level > 50 %}
                                      lime
                                    {% elif battery_level > 40 %}
                                      yellow
                                    {% elif battery_level > 30 %}
                                      amber
                                    {% elif battery_level > 20 %}
                                      orange
                                    {% elif battery_level > 10 %}
                                      deep-orange
                                    {% else %}
                                      red
                                    {% endif %} 
                                  layout: horizontal
                                  tap_action:
                                    action: none
                                  badge_icon: >-
                                    {% set battery_level = states(entity) | int
                                    %}

                                    {% if battery_level < 20 %} 
                                      mdi:exclamation-thick
                                    {% endif %}
                                  badge_color: red
                                  card_mod:
                                    style: |
                                      ha-card {
                                        padding: 4px 12px !important;
                                      }
                                      :host {
                                        --mush-icon-size: 60px;
                                      }
                            exclude: null
                          show_empty: false
                          card:
                            type: custom:layout-card
                            cards: []
                            layout_type: masonry
                          sort:
                            method: friendly_name
              - type: conditional
                conditions:
                  - entity: group.grp_update_all
                    state: 'on'
                chip:
                  type: template
                  entity: input_boolean.notifications
                  icon: mdi:bell
                  tap_action:
                    action: fire-dom-event
                    haptic: heavy
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        style: '--popup-background-color: transparent;'
                        size: normal
                        content:
                          type: custom:stack-in-card
                          cards:
                            - type: custom:auto-entities
                              card:
                                square: false
                                type: grid
                                columns: 1
                              card_param: cards
                              filter:
                                include:
                                  - entity_id: update.home*
                                    options:
                                      type: custom:mushroom-entity-card
                                exclude:
                                  - entity_id: update.*
                                    state: 'off'
                              sort:
                                method: friendly_name
                                reverse: false
                                numeric: false
                                ignore_case: true
                            - type: custom:auto-entities
                              card:
                                square: false
                                type: grid
                                columns: 1
                              card_param: cards
                              filter:
                                include:
                                  - entity_id: update.*
                                    options:
                                      type: custom:mushroom-entity-card
                                exclude:
                                  - entity_id: update.*
                                    state: 'off'
                                  - entity_id: update.dalg*
                                  - entity_id: update.home*
                              sort:
                                method: friendly_name
                                reverse: false
                                numeric: false
                                ignore_case: true
                            - type: custom:auto-entities
                              card:
                                square: false
                                type: grid
                                columns: 1
                              card_param: cards
                              filter:
                                include:
                                  - entity_id: update.*
                                    options:
                                      type: custom:mushroom-entity-card
                                exclude:
                                  - entity_id: update.*
                                    state: 'off'
                                  - entity_id: update.dalg_ap*
                                  - entity_id: update.dalg_lte
                                  - entity_id: update.dalg_switch*
                                  - entity_id: update.dalg_udm
                                  - entity_id: update.home*
                                  - entity_id: update.file_editor_update
                                  - entity_id: update.influxdb_update
                                  - entity_id: update.let_s_encrypt_update
                                  - entity_id: update.mosquitto_broker_update
                                  - entity_id: update.myelectricaldata_update
                                  - entity_id: update.node_red_update
                                  - entity_id: update.samba_share_update
                                  - entity_id: update.sqlite_web_update
                                  - entity_id: update.terminal_ssh_update
                                  - entity_id: update.z_wave_js_update
                                  - entity_id: update.zigbee2mqtt_edge_update
                              sort:
                                method: friendly_name
                                reverse: false
                                numeric: false
                                ignore_case: true
                            - type: custom:auto-entities
                              card:
                                square: false
                                type: grid
                                columns: 1
                              card_param: cards
                              filter:
                                include:
                                  - entity_id: update.*
                                    options:
                                      type: custom:mushroom-entity-card
                                exclude:
                                  - entity_id: update.*
                                    state: 'off'
                                  - entity_id: update.dalg_nas_dsm_update
                                  - entity_id: update.dalg_ups
                                  - entity_id: update.home*
                                  - entity_id: update.file_editor_update
                                  - entity_id: update.influxdb_update
                                  - entity_id: update.let_s_encrypt_update
                                  - entity_id: update.mosquitto_broker_update
                                  - entity_id: update.myelectricaldata_update
                                  - entity_id: update.node_red_update
                                  - entity_id: update.samba_share_update
                                  - entity_id: update.sqlite_web_update
                                  - entity_id: update.terminal_ssh_update
                                  - entity_id: update.z_wave_js_update
                                  - entity_id: update.zigbee2mqtt_edge_update
                              sort:
                                method: friendly_name
                                reverse: false
                                numeric: false
                                ignore_case: true
                  hold_action:
                    action: none
                  card_mod:
                    style: |
                      ha-card {
                        --chip-border-width: 0;
                        --chip-box-shadow: {{ "0px 0px 30px red" if is_state('group.grp_update_all', 'on') }};
                      }
                      /* Notification indicator */
                      ha-card:after {
                        /* Turn on indicator if there is a notification */
                        {% set notifications = (expand(states.group.grp_update_all) | selectattr('state', 'eq', 'on') | list | count) %}
                        {% if notifications > 0 %}
                          content: "{{ expand(states.group.grp_update_all) | selectattr( 'state', 'eq', 'on') | list | count }}";
                          position: absolute;
                          display: flex;
                          justify-content: center;
                          align-items: center;
                          background: rgb(var(--rgb-red));
                          color: var(--card-background-color);
                          font-weight: bolder;
                          border-radius: 50%;
                          top: 0;
                          width: 100%;
                          height: 100%;
                          font-size: 0.3em;
                        {% endif %}

                        /* Position & style notification */
                        position: absolute;
                        background: rgb(var(--rgb-red));
                        border-radius: 50%;
                        top: -3px;
                        right: -3px;
                        width: 15px;
                        height: 15px;
                      }
                      .content {
                        animation: fade-out 1.5s infinite;
                        transform-origin: 50% 90%;
                      }
                      @keyframes fade-out {
                        0% { opacity:1; }
                        50% { opacity:0; }
                        100% { opacity:1; }
                      }
              - type: conditional
                conditions:
                  - entity: sensor.hacs
                    state_not: '0'
                chip:
                  type: template
                  entity: input_boolean.notifications
                  icon: mdi:store
                  tap_action:
                    action: fire-dom-event
                    haptic: heavy
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        style: '--popup-background-color: transparent;'
                        size: normal
                        content:
                          type: custom:mushroom-template-card
                          entity: ''
                          icon: mdi:store
                          icon_color: |-
                            {% if states('sensor.hacs') == "0" %}
                            green
                            {% else %}
                            orange
                            {% endif %}
                          primary: HACS
                          secondary: >-
                            {% if states('sensor.hacs') == "0" %}

                            Up-to-date

                            {% else %}

                            {% for item in state_attr('sensor.hacs',
                            'repositories') -%}

                            {%- if loop.first %}{{states('sensor.hacs')}}
                            update(s): 

                            {% elif loop.last %} et {% else %}, {% endif -%}

                            '{{ item.display_name | lower }}'

                            {%- endfor %}

                            {% endif %}
                          multiline_secondary: true
                          fill_container: false
                          tap_action:
                            action: navigate
                            navigation_path: ../hacs/entry
                  hold_action:
                    action: none
                  card_mod:
                    style: |
                      ha-card {
                        --chip-border-width: 0;
                        --chip-box-shadow: {{ "0px 0px 30px red" if is_state('input_boolean.update', 'on') }};
                      }
                      /* Notification indicator */
                      ha-card:after {
                        {% if states('sensor.hacs', ['1','2','3','4','5','6','7','8','9','10']) %}
                          content: "{{ states('sensor.hacs') |float |int }}";
                          position: absolute;
                          display: flex;
                          justify-content: center;
                          align-items: center;
                          background: rgb(var(--rgb-red));
                          color: var(--card-background-color);
                          font-weight: bolder;
                          border-radius: 50%;
                          top: 0;
                          width: 100%;
                          height: 100%;
                          font-size: 0.3em;
                        {% endif %}
                        /* Position & style notification */
                        position: absolute;
                        background: rgb(var(--rgb-red));
                        border-radius: 50%;
                        top: -3px;
                        right: -3px;
                        width: 15px;
                        height: 15px;
                      } 
                      .content {
                        animation: boing 3s ease infinite;
                        transform-origin: 50% 90%;
                      }
                      @keyframes boing {
                        0% { transform: scale3d(1, 1, 1); }
                        7% { transform: scale3d(1.25, 0.75, 1); }
                        10% { transform: scale3d(0.75, 1.25, 1); }
                        12% { transform: scale3d(1.15, 0.85, 1); }
                        16% { transform: scale3d(0.95, 1.05, 1); }
                        19% { transform: scale3d(1.05, 0.95, 1); }
                        25% { transform: scale3d(1, 1, 1); }
                      }
        card_mod:
          style: |
            /* Remove styling from top card with chips */
            ha-card {
              /* Allow pseudo elements to display outside card */
              overflow: visible !important;

              /* Remove gap at top of card */
              /* margin-top: calc(-1 * var(--mush-chip-spacing, 8px));

              /* Remove styling from card */
              box-shadow: none;
              border: none;
              background: none;
              padding: var(--mush-chip-spacing, 8px);
              transition: all 0s;
            }
            /* Make card sticky at top of page */
            :host {
              position: sticky !important;
              z-index: 4 !important;
              top: 135px;
              
              /* Add background to host to prevent transparent card */
              border-radius: var(--ha-card-border-radius, 12px);

              /* Assign album art color to variable used in sticky media player */
              {% if is_state('binary_sensor.ping_dalg_pc', 'on') %}
              {% elif is_state('binary_sensor.ping_dalg_dell', 'on') %}
              {% elif is_state('input_boolean.notifications', 'on') %}
              {% elif not is_state('sensor.devices_with_low_battery', '0') %}
              {% elif is_state('input_boolean.bal', 'on') %}
              {% elif is_state('calendar.anniversaire', 'on') %}
              {% elif is_state('group.grp_update_all', 'on') %}
              {% else %}
                /* Hide the sticky media player when it is idle */
                display: none !important;
              {% endif %}
            }
            /* Pseudo element to hide card styling when at top */
            ha-card:after {
              content: "";
              top: 0px;
              position: fixed;

              /* Center element on page */
              left: 50%;
              transform: translateX(-50%);

              /* Position between chips and background pseudo elemnt */
              z-index: -1;

              /* Match background to main card */
              /* background: color-mix(in srgb, var(--card-background-color) 40%, var(--primary-background-color));
              /* border-radius: 0px 0px var(--ha-card-border-radius, 12px) var(--ha-card-border-radius, 12px);

              /* Adjust opacity of card */
              background: rgba(var(--rgb-card-background-color), 0.3);

              /* Set styling of card */
              border-radius: var(--ha-card-border-radius, 12px);
              box-shadow: var(--ha-card-box-shadow);
              border: var(--ha-card-border-width, 1px) solid var(--ha-card-border-color, var(--divider-color, #e0e0e0));
            }
            /* Pseudo element for background & other card styling */
            ha-card:before {
              content: "";

              /* Position & size card behind chips */
              position: absolute;
              top: 0px;
              left: 0px;
              height: 100%;

              /* Adjust width to account for border */
              width: calc(100% - 2 * var(--ha-card-border-width, 1px));

              /* Blur content behind card */
              backdrop-filter: blur(12px);
              -webkit-backdrop-filter: blur(12px);

              /* Adjust opacity of card */
              /* background: rgba(var(--rgb-card-background-color), 0.3);

              /* Set styling of card */
              /* border-radius: var(--ha-card-border-radius, 12px);
              /* box-shadow: var(--ha-card-box-shadow);
              /* border: var(--ha-card-border-width, 1px) solid var(--ha-card-border-color, var(--divider-color, #e0e0e0));

              /* Adjust opacity of card */
              background: transparent;

              /* Set styling of card */
              border-radius: var(--ha-card-border-radius, 12px);
              box-shadow: none;
              border: none;
            }
      - type: custom:local-conditional-card
        default: show
        id: home
        card:
          type: horizontal-stack
          cards:
            - square: false
              columns: 3
              type: grid
              cards:
                - type: custom:mushroom-template-card
                  primary: Alarme
                  secondary: >-
                    {% if is_state('alarm_control_panel.alarmo', 'disarmed') %}
                      Désactivé
                    {% elif is_state('alarm_control_panel.alarmo', 'armed_home')
                    %}
                      Activé
                    {% endif %}
                  icon: mdi:shield-home
                  icon_color: |-
                    {% if is_state('alarm_control_panel.alarmo', 'disarmed') %}
                      red
                    {% else %}
                      green
                    {% endif %}
                  layout: vertical
                  entity: alarm_control_panel.alarmo
                  tap_action:
                    action: fire-dom-event
                    haptic: heavy
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        style: |-
                          --popup-header-background-color: black;
                          --popup-background-color: transperant;
                          --popup-border-radius: 15px;
                          --popup-border-color: transparent;
                          --popup-padding-x: 5px;
                        size: normal
                        content:
                          type: custom:mushroom-alarm-control-panel-card
                          entity: alarm_control_panel.alarmo
                          states:
                            - armed_home
                          name: Alarme
                          show_keypad: true
                - type: custom:mushroom-template-card
                  primary: |-
                    {% if is_state('group.grp_motion', 'on') %}
                      .
                    {% else %}
                      Caméra
                    {% endif %}
                  secondary: UI
                  icon: |-
                    {% if is_state('group.grp_motion', 'on') %}
                      disable
                    {% else %}
                      mdi:cctv
                    {% endif %}
                  icon_color: |-
                    {% if is_state('group.grp_motion', 'on') %}
                      disable
                    {% else %}
                      orange
                    {% endif %}
                  layout: vertical
                  entity: group.grp_motion
                  tap_action:
                    action: fire-dom-event
                    local_conditional_card:
                      action: set
                      ids:
                        - home: hide
                        - light: hide
                        - portail: hide
                        - camera: toggle
                        - media: hide
                        - divers: hide
                        - monitoring: hide
                        - device: hide
                        - serveur: hide
                        - net: hide
                        - plan: hide
                  card_mod:
                    style: |
                      ha-card {
                        {% if is_state( 'binary_sensor.dalg_cam1_motion', 'on') %}
                          background-image: url( '{{ state_attr( 'camera.dalg_cam1_high', "entity_picture" ) }}' );
                          background-position: center;
                          background-repeat: no-repeat;
                          background-size: cover;
                          background-color: rgba(var(--rgb-card-background-color),0.5);
                          background-blend-mode: overlay;
                          --primary-text-color: transparent;
                          --secondary-text-color: transparent;
                        {% elif is_state( 'binary_sensor.dalg_cam2_motion', 'on') %}
                          background-image: url( '{{ state_attr( 'camera.dalg_cam2_high', "entity_picture" ) }}' );
                          background-position: center;
                          background-repeat: no-repeat;
                          background-size: cover;
                          background-color: rgba(var(--rgb-card-background-color),0.5);
                          background-blend-mode: overlay;
                          --primary-text-color: transparent;
                          --secondary-text-color: transparent;
                        {% elif is_state( 'binary_sensor.dalg_cam3_motion', 'on') %}
                          background-image: url( '{{ state_attr( 'camera.dalg_cam3_high', "entity_picture" ) }}' );
                          background-position: center;
                          background-repeat: no-repeat;
                          background-size: cover;
                          background-color: rgba(var(--rgb-card-background-color),0.5);
                          background-blend-mode: overlay;
                          --primary-text-color: transparent;
                          --secondary-text-color: transparent;
                        {% elif is_state( 'binary_sensor.dalg_cam4_motion', 'on') %}
                          background-image: url( '{{ state_attr( 'camera.dalg_cam4_high', "entity_picture" ) }}' );
                          background-position: center;
                          background-repeat: no-repeat;
                          background-size: cover;
                          background-color: rgba(var(--rgb-card-background-color),0.5);
                          background-blend-mode: overlay;
                          --primary-text-color: transparent;
                          --secondary-text-color: transparent;
                        {% elif is_state( 'binary_sensor.dalg_cam5_motion', 'on') %}
                          background-image: url( '{{ state_attr( 'camera.dalg_cam5_high', "entity_picture" ) }}' );
                          background-position: center;
                          background-repeat: no-repeat;
                          background-size: cover;
                          background-color: rgba(var(--rgb-card-background-color),0.5);
                          background-blend-mode: overlay;
                          --primary-text-color: transparent;
                          --secondary-text-color: transparent;
                        {% elif is_state( 'binary_sensor.dalg_cam6_motion', 'on') %}
                          background-image: url( '{{ state_attr( 'camera.dalg_cam6_high', "entity_picture" ) }}' );
                          background-position: center;
                          background-repeat: no-repeat;
                          background-size: cover;
                          background-color: rgba(var(--rgb-card-background-color),0.5);
                          background-blend-mode: overlay;
                          --primary-text-color: transparent;
                          --secondary-text-color: transparent;
                        {% elif is_state( 'binary_sensor.dalg_cam7_motion', 'on') %}
                          background-image: url( '{{ state_attr( 'camera.dalg_cam7_high', "entity_picture" ) }}' );
                          background-position: center;
                          background-repeat: no-repeat;
                          background-size: cover;
                          background-color: rgba(var(--rgb-card-background-color),0.5);
                          background-blend-mode: overlay;
                          --primary-text-color: transparent;
                          --secondary-text-color: transparent;
                        {% elif is_state( 'binary_sensor.dalg_cam8_motion', 'on') %}
                          background-image: url( '{{ state_attr( 'camera.dalg_cam8_high', "entity_picture" ) }}' );
                          background-position: center;
                          background-repeat: no-repeat;
                          background-size: cover;
                          background-color: rgba(var(--rgb-card-background-color),0.5);
                          background-blend-mode: overlay;
                          --primary-text-color: transparent;
                          --secondary-text-color: transparent;
                        {% elif is_state( 'binary_sensor.dalg_doorbell_motion', 'on') %}
                          background-image: url( '{{ state_attr( 'camera.dalg_doorbell_high', "entity_picture" ) }}' );
                          background-position: center;
                          background-repeat: no-repeat;
                          background-size: cover;
                          background-color: rgba(var(--rgb-card-background-color),0.5);
                          background-blend-mode: overlay;
                          --primary-text-color: transparent;
                          --secondary-text-color: transparent;
                        {% endif %}  
                        --rgb-state-media-player: var(--rgb-teal);
                        }
                - type: custom:mushroom-template-card
                  primary: Feed
                  secondary: Maison
                  icon: |2-
                      {% if is_state('group.lumiere_2', 'on') %}
                        mdi:format-list-bulleted
                      {% else %}
                        mdi:format-list-bulleted
                      {% endif %}
                  layout: vertical
                  icon_color: |2-
                      {% if is_state('group.lumiere_2', 'on') %}
                        grey
                      {% else %}
                        grey
                      {% endif %}
                  badge_icon: ''
                  badge_color: ''
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        content:
                          type: custom:home-feed-card
                          entities:
                            - entity: light.lumiere_abris
                              name: Lumière Abris
                              content_template: '{{display_name}} - {{state}}'
                              state_map:
                                'on': Allumé
                                'off': Eteinte
                            - entity: light.lumiere_buanderie
                              name: Lumière Buanderie
                              content_template: '{{display_name}} - {{state}}'
                              state_map:
                                'on': Allumé
                                'off': Eteinte
                            - entity: light.lumiere_chambre_louis
                              name: Lumière Louis
                              content_template: '{{display_name}} - {{state}}'
                              state_map:
                                'on': Allumé
                                'off': Eteinte
                            - entity: light.lumiere_chambre_parentale
                              name: Lumière Parent
                              content_template: '{{display_name}} - {{state}}'
                              state_map:
                                'on': Allumé
                                'off': Eteinte
                            - entity: light.lumiere_chambre_samuel
                              name: Lumière Samuel
                              content_template: '{{display_name}} - {{state}}'
                              state_map:
                                'on': Allumé
                                'off': Eteinte
                            - entity: light.lumiere_dressing
                              name: Lumière Dressing
                              content_template: '{{display_name}} - {{state}}'
                              state_map:
                                'on': Allumé
                                'off': Eteinte
                            - entity: light.lumiere_ext_cote
                              name: Lumière Ext. Côté
                              content_template: '{{display_name}} - {{state}}'
                              state_map:
                                'on': Allumé
                                'off': Eteinte
                            - entity: light.lumiere_ext_garage
                              name: Lumière Ext. Garage
                              content_template: '{{display_name}} - {{state}}'
                              state_map:
                                'on': Allumé
                                'off': Eteinte
                            - entity: light.lumiere_ext_terrasse
                              name: Lumière Ext. Terrasse
                              content_template: '{{display_name}} - {{state}}'
                              state_map:
                                'on': Allumé
                                'off': Eteinte
                            - entity: light.lumiere_garage
                              name: Lumière Garage
                              content_template: '{{display_name}} - {{state}}'
                              state_map:
                                'on': Allumé
                                'off': Eteinte
                            - entity: light.lumiere_salle_a_manger
                              name: Lumière Salle à Manger
                              content_template: '{{display_name}} - {{state}}'
                              state_map:
                                'on': Allumé
                                'off': Eteinte
                            - entity: light.lumiere_salle_de_bain
                              name: Lumière Salle de Bain
                              content_template: '{{display_name}} - {{state}}'
                              state_map:
                                'on': Allumé
                                'off': Eteinte
                            - entity: light.lumiere_wc
                              name: Lumière WC
                              content_template: '{{display_name}} - {{state}}'
                              state_map:
                                'on': Allumé
                                'off': Eteinte
                            - entity: binary_sensor.porte_abris
                              name: Porte Abris
                              content_template: '{{display_name}} - {{state}}'
                              state_map:
                                'on': Ouverte
                                'off': Fermée
                            - entity: binary_sensor.porte_baie_droite
                              name: Porte Baie Droite
                              content_template: '{{display_name}} - {{state}}'
                              state_map:
                                'on': Ouverte
                                'off': Fermée
                            - entity: binary_sensor.porte_baie_gauche
                              name: Porte Baie GAuche
                              content_template: '{{display_name}} - {{state}}'
                              state_map:
                                'on': Ouverte
                                'off': Fermée
                            - entity: binary_sensor.porte_bal
                              name: Porte BAL
                              content_template: '{{display_name}} - {{state}}'
                              state_map:
                                'on': Ouverte
                                'off': Fermée
                            - entity: binary_sensor.porte_cuisine
                              name: Porte Cuisine
                              content_template: '{{display_name}} - {{state}}'
                              state_map:
                                'on': Ouverte
                                'off': Fermée
                            - entity: binary_sensor.porte_entree
                              name: Porte Entrée
                              content_template: '{{display_name}} - {{state}}'
                              state_map:
                                'on': Ouverte
                                'off': Fermée
                            - entity: binary_sensor.porte_garage
                              name: Porte Garage
                              content_template: '{{display_name}} - {{state}}'
                              state_map:
                                'on': Ouverte
                                'off': Fermée
                            - entity: binary_sensor.fenetre_buanderie
                              name: Fenêtre Buanderie
                              content_template: '{{display_name}} - {{state}}'
                              state_map:
                                'on': Ouverte
                                'off': Fermée
                            - entity: binary_sensor.fenetre_chambre_louis
                              name: Fenêtre Louis
                              content_template: '{{display_name}} - {{state}}'
                              state_map:
                                'on': Ouverte
                                'off': Fermée
                            - entity: binary_sensor.fenetre_chambre_parentale
                              name: Fenêtre Parents
                              content_template: '{{display_name}} - {{state}}'
                              state_map:
                                'on': Ouverte
                                'off': Fermée
                            - entity: binary_sensor.fenetre_chambre_samuel
                              name: Fenêtre Samuel
                              content_template: '{{display_name}} - {{state}}'
                              state_map:
                                'on': Ouverte
                                'off': Fermée
                            - entity: binary_sensor.fenetre_cuisine
                              name: Fenêtre Cuisine
                              content_template: '{{display_name}} - {{state}}'
                              state_map:
                                'on': Ouverte
                                'off': Fermée
                            - entity: binary_sensor.fenetre_garage
                              name: Fenêtre Garage
                              content_template: '{{display_name}} - {{state}}'
                              state_map:
                                'on': Ouverte
                                'off': Fermée
                            - entity: binary_sensor.fenetre_sdb
                              name: Fenêtre Salle de Bain
                              content_template: '{{display_name}} - {{state}}'
                              state_map:
                                'on': Ouverte
                                'off': Fermée
                            - entity: switch.portillon
                              name: Portillon
                              content_template: '{{display_name}} - {{state}}'
                              state_map:
                                'on': Ouverte
                                'off': Fermée
                          max_height: 50vh
                          show_empty: true
                          scrollbars_enabled: true
                          title: Home Feed
                - type: custom:mushroom-template-card
                  primary: Portes
                  secondary: |
                    {% if is_state('group.porte', 'off') %}
                      Fermées
                    {% else %}
                      {{ expand(states.group.porte) | selectattr( 'state', 'eq', 'on') | list | count }}
                    {% endif %}
                  icon: mdi:door
                  icon_color: |
                    {% if is_state('group.porte', 'off') %}
                      green
                    {% else %}
                      red
                    {% endif %}
                  layout: vertical
                  entity: group.porte
                  tap_action:
                    action: fire-dom-event
                    haptic: heavy
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        style: |-
                          --popup-background-color: transparent;
                          --popup-border-radius: 15px;
                          --popup-border-color: transparent;
                        content:
                          type: vertical-stack
                          cards:
                            - type: custom:auto-entities
                              card:
                                type: entities
                              filter:
                                include:
                                  - group: group.porte
                                exclude:
                                  - state: 'off'
                                  - state: unavailable
                              sort:
                                method: state
                  card_mod:
                    style:
                      mushroom-shape-icon$: |
                        ha-icon {
                          {% set state = states(config.entity) %}
                          {% if state == 'on' %}
                            --icon-animation: open 6s ease-in-out infinite;
                          transform-origin: 30%;
                          {% endif %}
                        }
                        @keyframes open {
                          0%, 66% { transform: rotateY(0deg); }
                          33% { transform: rotateY(-120deg); }
                        }
                        .shape {
                          perspective: 45px;
                        }
                - type: custom:mushroom-template-card
                  primary: Fenêtres
                  secondary: |
                    {% if is_state('group.fenetre', 'off') %}
                      Fermées
                    {% else %}
                      {{ expand(states.group.fenetre) | selectattr( 'state', 'eq', 'on') | list | count }}
                    {% endif %}
                  icon: mdi:window-closed-variant
                  icon_color: |
                    {% if is_state('group.fenetre', 'off') %}
                      green
                    {% else %}
                      red
                    {% endif %}
                  layout: vertical
                  entity: group.fenetre
                  tap_action:
                    action: fire-dom-event
                    haptic: heavy
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        style: |-
                          --popup-background-color: transparent;
                          --popup-border-radius: 15px;
                          --popup-border-color: transparent;
                        content:
                          type: vertical-stack
                          cards:
                            - type: custom:auto-entities
                              card:
                                type: entities
                              filter:
                                include:
                                  - group: group.fenetre
                                exclude:
                                  - state: 'off'
                                  - state: unavailable
                              sort:
                                method: state
                  card_mod:
                    style:
                      mushroom-shape-icon$: |
                        ha-icon {
                          {% set window = states(config.entity) %}
                          {% if window == 'off' %}
                            --card-mod-icon: mdi:window-closed-variant;
                          {% else %}
                            --card-mod-icon: mdi:window-open-variant;
                            --icon-animation: boing 4s infinite;
                            transform-origin: 50% 90%;
                          {% endif %}
                          {{ 'animation: none;' if not is_state('group.fenetre', 'on') }}
                        }
                        @keyframes boing {
                          0% { transform: scale3d(1, 1, 1); }
                          7% { transform: scale3d(1.25, 0.75, 1); }
                          10% { transform: scale3d(0.75, 1.25, 1); }
                          12% { transform: scale3d(1.15, 0.85, 1); }
                          16% { transform: scale3d(0.95, 1.05, 1); }
                          19% { transform: scale3d(1.05, 0.95, 1); }
                          25% { transform: scale3d(1, 1, 1); }
                        }
                - type: custom:mushroom-template-card
                  primary: Plan
                  secondary: Maison
                  icon: mdi:floor-plan
                  icon_color: blue-grey
                  layout: vertical
                  entity: alarm_control_panel.alarmo
                  tap_action:
                    action: fire-dom-event
                    haptic: heavy
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        size: normal
                        content:
                          type: picture-elements
                          image: /local/Floorplan/iphone/v2/Maison_off.png
                          card_mod:
                            style: |
                              ha-card {
                                border-radius: 15px;
                              :host {
                                position: sticky;
                                z-index: 10;
                              }
                          elements:
                            - type: conditional
                              conditions:
                                - entity: switch.lumiere_salon
                                  state: 'on'
                              elements:
                                - type: image
                                  tap_action:
                                    action: none
                                  style:
                                    top: 50%
                                    left: 50%
                                    width: 100%
                                  image: /local/Floorplan/iphone/v2/Maison_salon.png
                            - type: conditional
                              conditions:
                                - entity: switch.lampe_guirlande
                                  state: 'on'
                              elements:
                                - type: image
                                  tap_action:
                                    action: none
                                  style:
                                    top: 50%
                                    left: 50%
                                    width: 100%
                                  image: >-
                                    /local/Floorplan/iphone/v2/Maison_guirlande.png
                            - type: conditional
                              conditions:
                                - entity: switch.lampe_led
                                  state: 'on'
                              elements:
                                - type: image
                                  tap_action:
                                    action: none
                                  style:
                                    top: 50%
                                    left: 50%
                                    width: 100%
                                  image: /local/Floorplan/iphone/v2/Maison_led.png
                            - type: conditional
                              conditions:
                                - entity: switch.lampe_caoutchouc
                                  state: 'on'
                              elements:
                                - type: image
                                  tap_action:
                                    action: none
                                  style:
                                    top: 50%
                                    left: 50%
                                    width: 100%
                                  image: >-
                                    /local/Floorplan/iphone/v2/Maison_caoutchouc.png
                            - type: conditional
                              conditions:
                                - entity: light.lampe_canape
                                  state: 'on'
                              elements:
                                - type: image
                                  tap_action:
                                    action: none
                                  style:
                                    top: 50%
                                    left: 50%
                                    width: 100%
                                  image: /local/Floorplan/iphone/v2/Maison_canape.png
                            - type: conditional
                              conditions:
                                - entity: switch.lumiere_salle_a_manger
                                  state: 'on'
                              elements:
                                - type: image
                                  tap_action:
                                    action: none
                                  style:
                                    top: 50%
                                    left: 50%
                                    width: 100%
                                  image: >-
                                    /local/Floorplan/iphone/v2/Maison_salleamanger.png
                            - type: conditional
                              conditions:
                                - entity: light.lumiere_buanderie
                                  state: 'on'
                              elements:
                                - type: image
                                  tap_action:
                                    action: none
                                  style:
                                    top: 50%
                                    left: 50%
                                    width: 100%
                                  image: >-
                                    /local/Floorplan/iphone/v2/Maison_buanderie.png
                            - type: conditional
                              conditions:
                                - entity: light.lumiere_couloir
                                  state: 'on'
                              elements:
                                - type: image
                                  tap_action:
                                    action: none
                                  style:
                                    top: 50%
                                    left: 50%
                                    width: 100%
                                  image: >-
                                    /local/Floorplan/iphone/v2/Maison_couloir.png
                            - type: conditional
                              conditions:
                                - entity: light.lumiere_garage
                                  state: 'on'
                              elements:
                                - type: image
                                  tap_action:
                                    action: none
                                  style:
                                    top: 50%
                                    left: 50%
                                    width: 100%
                                  image: /local/Floorplan/iphone/v2/Maison_garage.png
                            - type: conditional
                              conditions:
                                - entity: light.lumiere_chambre_louis
                                  state: 'on'
                              elements:
                                - type: image
                                  tap_action:
                                    action: none
                                  style:
                                    top: 50%
                                    left: 50%
                                    width: 100%
                                  image: /local/Floorplan/iphone/v2/Maison_louis.png
                            - type: conditional
                              conditions:
                                - entity: light.lumiere_wc
                                  state: 'on'
                              elements:
                                - type: image
                                  tap_action:
                                    action: none
                                  style:
                                    top: 50%
                                    left: 50%
                                    width: 100%
                                  image: /local/Floorplan/iphone/v2/Maison_wc.png
                            - type: conditional
                              conditions:
                                - entity: light.lumiere_salle_de_bain
                                  state: 'on'
                              elements:
                                - type: image
                                  tap_action:
                                    action: none
                                  style:
                                    top: 50%
                                    left: 50%
                                    width: 100%
                                  image: /local/Floorplan/iphone/v2/Maison_sdb.png
                            - type: conditional
                              conditions:
                                - entity: light.lumiere_chambre_parentale
                                  state: 'on'
                              elements:
                                - type: image
                                  tap_action:
                                    action: none
                                  style:
                                    top: 50%
                                    left: 50%
                                    width: 100%
                                  image: /local/Floorplan/iphone/v2/Maison_parent.png
                            - type: conditional
                              conditions:
                                - entity: light.lumiere_dressing
                                  state: 'on'
                              elements:
                                - type: image
                                  tap_action:
                                    action: none
                                  style:
                                    top: 50%
                                    left: 50%
                                    width: 100%
                                  image: >-
                                    /local/Floorplan/iphone/v2/Maison_dressing.png
                            - type: conditional
                              conditions:
                                - entity: light.lumiere_chambre_samuel
                                  state: 'on'
                              elements:
                                - type: image
                                  tap_action:
                                    action: none
                                  style:
                                    top: 50%
                                    left: 50%
                                    width: 100%
                                  image: /local/Floorplan/iphone/v2/Maison_samuel.png
                            - type: conditional
                              conditions:
                                - entity: light.lumiere_ext_cote
                                  state: 'on'
                              elements:
                                - type: image
                                  tap_action:
                                    action: none
                                  style:
                                    top: 50%
                                    left: 50%
                                    width: 100%
                                  image: >-
                                    /local/Floorplan/iphone/v2/Maison_ext_nord.png
                            - type: conditional
                              conditions:
                                - entity: light.lumiere_cuisine
                                  state: 'on'
                              elements:
                                - type: image
                                  tap_action:
                                    action: none
                                  style:
                                    top: 50%
                                    left: 50%
                                    width: 100%
                                  image: >-
                                    /local/Floorplan/iphone/v2/Maison_cuisine.png
                            - type: conditional
                              conditions:
                                - entity: light.lumiere_ext_terrasse
                                  state: 'on'
                              elements:
                                - type: image
                                  tap_action:
                                    action: none
                                  style:
                                    top: 50%
                                    left: 50%
                                    width: 100%
                                  image: >-
                                    /local/Floorplan/iphone/v2/Maison_ext_terrasse.png
                            - type: conditional
                              conditions:
                                - entity: light.lumiere_ext_garage
                                  state: 'on'
                              elements:
                                - type: image
                                  tap_action:
                                    action: none
                                  style:
                                    top: 50%
                                    left: 50%
                                    width: 100%
                                  image: >-
                                    /local/Floorplan/iphone/v2/Maison_ext_garage.png
                - type: custom:mushroom-entity-card
                  entity: weather.ozan
                  layout: vertical
                  name: Météo
                  tap_action:
                    action: fire-dom-event
                    local_conditional_card:
                      action: set
                      ids:
                        - home: hide
                        - light: hide
                        - portail: hide
                        - camera: hide
                        - media: hide
                        - divers: hide
                        - monitoring: hide
                        - device: hide
                        - serveur: hide
                        - net: hide
                        - meteo: toggle
                        - meteo_menu: toggle
                    icon_color: cyan
                - type: custom:mushroom-template-card
                  primary: Température
                  secondary: '{{ states(''sensor.temperature_salon'')}}°C'
                  icon: mdi:thermometer
                  entity: sensor.temperature_salon
                  icon_color: |-
                    {% set temp = states('sensor.temperature_salon') |float %}
                    {% if temp < 10 %}
                      cyan
                    {% elif temp < 15 %}
                      blue
                    {% elif temp < 20 %}
                      teal
                    {% elif temp < 25 %}
                      light-green
                    {% elif temp < 30 %}
                      orange
                    {% else %}
                      red
                    {% endif %}
                  layout: vertical
                  tap_action:
                    action: fire-dom-event
                    haptic: heavy
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        style: |-
                          --popup-background-color: transparant;
                          --popup-border-radius: 15px;
                          --popup-border-color: transparent;
                          --popup-padding-x: 5px;
                        size: normal
                        content:
                          type: custom:vertical-stack-in-card
                          cards:
                            - type: custom:button-card
                              show_entity_picture: false
                              entity: template
                              name: Température
                              show_icon: false
                              show_name: true
                              tap_action:
                                action: none
                              styles:
                                card:
                                  - margin-bottom: 0px
                                  - background-color: transparent
                                  - border-color: transparent
                                  - '--mdc-ripple-press-opacity': 0
                                name:
                                  - font-size: 45px
                                  - font-weight: lighter
                                  - justify-self: center
                                  - color: white
                            - type: vertical-stack
                              cards:
                                - square: false
                                  columns: 2
                                  type: grid
                                  cards:
                                    - type: custom:mini-graph-card
                                      name: Salon
                                      icon: none
                                      entities:
                                        - entity: sensor.temperature_salon
                                          name: Température
                                          show_state: true
                                      points_per_hour: 2
                                      hours_to_show: 48
                                      hour24: true
                                      line_width: 2
                                      more_info: true
                                      show:
                                        legend: false
                                        extrema: false
                                      color_thresholds:
                                        - value: 30
                                          color: '#ef1d0f'
                                        - value: 26
                                          color: '#ef5a0f'
                                        - value: 21
                                          color: '#f0da11'
                                        - value: 18
                                          color: '#11f13a'
                                        - value: 15
                                          color: '#1da4f2'
                                      card_mod:
                                        style: |
                                          ha-card {
                                           box-shadow: true;
                                           border-style: solid !important;
                                           border-radius: 20px;
                                           border-width: 1px !important;
                                           margin: 0px 0px 5px 5px;
                                          }
                                      tap_action:
                                        action: fire-dom-event
                                        browser_mod:
                                          service: browser_mod.popup
                                          data:
                                            size: normal
                                            style: |-
                                              --popup-header-background-color: black;
                                              --popup-background-color: transparent;
                                              --popup-border-radius: 15px;
                                              --popup-border-color: transparent;
                                            content:
                                              type: custom:mini-graph-card
                                              name: Salon
                                              entities:
                                                - entity: sensor.temperature_salon
                                                  name: Température
                                                  show_state: true
                                              points_per_hour: 2
                                              hours_to_show: 48
                                              hour24: true
                                              line_width: 2
                                              height: 200
                                              more_info: true
                                              show:
                                                legend: false
                                                extrema: true
                                              color_thresholds:
                                                - value: 30
                                                  color: '#ef1d0f'
                                                - value: 26
                                                  color: '#ef5a0f'
                                                - value: 21
                                                  color: '#f0da11'
                                                - value: 18
                                                  color: '#11f13a'
                                                - value: 15
                                                  color: '#1da4f2'
                                              card_mod:
                                                style: >
                                                  .info.flex div.info__item:nth-child(2)
                                                  .info__item__value {
                                                    color: red;
                                                  } .info.flex div.info__item:nth-child(1)
                                                  .info__item__value {
                                                    color: rgba(39, 170, 245, 0.8);
                                                  } .header.flex .name.flex {
                                                    font-size: 22px;
                                                  } ha-card { box-shadow: none !important;
                                                  border-style: solid !important;
                                                  border-width: 0px !important;
                                                  border-color: transparent; font-size:
                                                  16px !important;
                                    - type: custom:mini-graph-card
                                      name: Buanderie
                                      icon: none
                                      entities:
                                        - entity: sensor.temperature_buanderie
                                          name: Température
                                          show_state: true
                                      points_per_hour: 2
                                      hours_to_show: 48
                                      hour24: true
                                      line_width: 2
                                      more_info: true
                                      show:
                                        legend: false
                                        extrema: false
                                      color_thresholds:
                                        - value: 30
                                          color: '#ef1d0f'
                                        - value: 26
                                          color: '#ef5a0f'
                                        - value: 21
                                          color: '#f0da11'
                                        - value: 18
                                          color: '#11f13a'
                                        - value: 15
                                          color: '#1da4f2'
                                      card_mod:
                                        style: |
                                          ha-card {
                                           box-shadow: true;
                                           border-style: solid !important;
                                           border-radius: 20px;
                                           border-width: 1px !important;
                                           margin: 0px 5px 5px 0px;
                                          }
                                      tap_action:
                                        action: fire-dom-event
                                        browser_mod:
                                          service: browser_mod.popup
                                          data:
                                            size: normal
                                            style: |-
                                              --popup-header-background-color: black;
                                              --popup-background-color: transparent;
                                              --popup-border-radius: 15px;
                                              --popup-border-color: transparent;
                                            content:
                                              type: custom:mini-graph-card
                                              name: Buanderie
                                              entities:
                                                - entity: sensor.temperature_buanderie
                                                  name: Température
                                                  show_state: true
                                              points_per_hour: 2
                                              hours_to_show: 48
                                              hour24: true
                                              line_width: 2
                                              height: 200
                                              more_info: true
                                              show:
                                                legend: false
                                                extrema: true
                                              color_thresholds:
                                                - value: 30
                                                  color: '#ef1d0f'
                                                - value: 26
                                                  color: '#ef5a0f'
                                                - value: 21
                                                  color: '#f0da11'
                                                - value: 18
                                                  color: '#11f13a'
                                                - value: 15
                                                  color: '#1da4f2'
                                              card_mod:
                                                style: >
                                                  .info.flex div.info__item:nth-child(2)
                                                  .info__item__value {
                                                    color: red;
                                                  } .info.flex div.info__item:nth-child(1)
                                                  .info__item__value {
                                                    color: rgba(39, 170, 245, 0.8);
                                                  } .header.flex .name.flex {
                                                    font-size: 22px;
                                                  } ha-card { box-shadow: none !important;
                                                  border-style: solid !important;
                                                  border-width: 0px !important;
                                                  border-color: transparent; font-size:
                                                  16px !important;
                                    - type: custom:mini-graph-card
                                      name: SdB
                                      icon: none
                                      entities:
                                        - entity: sensor.temperature_sdb
                                          name: Température
                                          show_state: true
                                      points_per_hour: 2
                                      hours_to_show: 48
                                      hour24: true
                                      line_width: 2
                                      more_info: true
                                      show:
                                        legend: false
                                        extrema: false
                                      color_thresholds:
                                        - value: 30
                                          color: '#ef1d0f'
                                        - value: 26
                                          color: '#ef5a0f'
                                        - value: 21
                                          color: '#f0da11'
                                        - value: 18
                                          color: '#11f13a'
                                        - value: 15
                                          color: '#1da4f2'
                                      card_mod:
                                        style: |
                                          ha-card {
                                           box-shadow: true;
                                           border-style: solid !important;
                                           border-radius: 20px;
                                           border-width: 1px !important;
                                           margin: 0px 0px 5px 5px;
                                          }
                                      tap_action:
                                        action: fire-dom-event
                                        browser_mod:
                                          service: browser_mod.popup
                                          data:
                                            size: normal
                                            style: |-
                                              --popup-header-background-color: black;
                                              --popup-background-color: transparent;
                                              --popup-border-radius: 15px;
                                              --popup-border-color: transparent;
                                            content:
                                              type: custom:mini-graph-card
                                              name: SDB
                                              entities:
                                                - entity: sensor.temperature_sdb
                                                  name: Température
                                                  show_state: true
                                              points_per_hour: 2
                                              hours_to_show: 48
                                              hour24: true
                                              line_width: 2
                                              height: 200
                                              more_info: true
                                              show:
                                                legend: false
                                                extrema: true
                                              color_thresholds:
                                                - value: 30
                                                  color: '#ef1d0f'
                                                - value: 26
                                                  color: '#ef5a0f'
                                                - value: 21
                                                  color: '#f0da11'
                                                - value: 18
                                                  color: '#11f13a'
                                                - value: 15
                                                  color: '#1da4f2'
                                              card_mod:
                                                style: >
                                                  .info.flex div.info__item:nth-child(2)
                                                  .info__item__value {
                                                    color: red;
                                                  } .info.flex div.info__item:nth-child(1)
                                                  .info__item__value {
                                                    color: rgba(39, 170, 245, 0.8);
                                                  } .header.flex .name.flex {
                                                    font-size: 22px;
                                                  } ha-card { box-shadow: none !important;
                                                  border-style: solid !important;
                                                  border-width: 0px !important;
                                                  border-color: transparent; font-size:
                                                  16px !important;
                                    - type: custom:mini-graph-card
                                      name: Parents
                                      icon: none
                                      entities:
                                        - entity: sensor.temperature_chambre_parentale
                                          name: Température
                                          show_state: true
                                      points_per_hour: 2
                                      hours_to_show: 48
                                      hour24: true
                                      line_width: 2
                                      more_info: true
                                      show:
                                        legend: false
                                        extrema: false
                                      color_thresholds:
                                        - value: 30
                                          color: '#ef1d0f'
                                        - value: 26
                                          color: '#ef5a0f'
                                        - value: 21
                                          color: '#f0da11'
                                        - value: 18
                                          color: '#11f13a'
                                        - value: 15
                                          color: '#1da4f2'
                                      card_mod:
                                        style: |
                                          ha-card {
                                           box-shadow: true;
                                           border-style: solid !important;
                                           border-radius: 20px;
                                           border-width: 1px !important;
                                           margin: 0px 5px 5px 0px;
                                          }
                                      tap_action:
                                        action: fire-dom-event
                                        browser_mod:
                                          service: browser_mod.popup
                                          data:
                                            size: normal
                                            style: |-
                                              --popup-header-background-color: black;
                                              --popup-background-color: transparent;
                                              --popup-border-radius: 15px;
                                              --popup-border-color: transparent;
                                            content:
                                              type: custom:mini-graph-card
                                              name: Parents
                                              entities:
                                                - entity: sensor.temperature_chambre_parentale
                                                  name: Température
                                                  show_state: true
                                              points_per_hour: 2
                                              hours_to_show: 48
                                              hour24: true
                                              line_width: 2
                                              height: 200
                                              more_info: true
                                              show:
                                                legend: false
                                                extrema: true
                                              color_thresholds:
                                                - value: 30
                                                  color: '#ef1d0f'
                                                - value: 26
                                                  color: '#ef5a0f'
                                                - value: 21
                                                  color: '#f0da11'
                                                - value: 18
                                                  color: '#11f13a'
                                                - value: 15
                                                  color: '#1da4f2'
                                              card_mod:
                                                style: >
                                                  .info.flex div.info__item:nth-child(2)
                                                  .info__item__value {
                                                    color: red;
                                                  } .info.flex div.info__item:nth-child(1)
                                                  .info__item__value {
                                                    color: rgba(39, 170, 245, 0.8);
                                                  } .header.flex .name.flex {
                                                    font-size: 22px;
                                                  } ha-card { box-shadow: none !important;
                                                  border-style: solid !important;
                                                  border-width: 0px !important;
                                                  border-color: transparent; font-size:
                                                  16px !important;
                                    - type: custom:mini-graph-card
                                      name: Louis
                                      icon: none
                                      entities:
                                        - entity: sensor.temperature_louis
                                          name: Température
                                          show_state: true
                                      points_per_hour: 2
                                      hours_to_show: 48
                                      hour24: true
                                      line_width: 2
                                      more_info: true
                                      show:
                                        legend: false
                                        extrema: false
                                      color_thresholds:
                                        - value: 30
                                          color: '#ef1d0f'
                                        - value: 26
                                          color: '#ef5a0f'
                                        - value: 21
                                          color: '#f0da11'
                                        - value: 18
                                          color: '#11f13a'
                                        - value: 15
                                          color: '#1da4f2'
                                      card_mod:
                                        style: |
                                          ha-card {
                                           box-shadow: true;
                                           border-style: solid !important;
                                           border-radius: 20px;
                                           border-width: 1px !important;
                                           margin: 0px 0px 15px 5px !important;
                                          }
                                      tap_action:
                                        action: fire-dom-event
                                        browser_mod:
                                          service: browser_mod.popup
                                          data:
                                            size: normal
                                            style: |-
                                              --popup-header-background-color: black;
                                              --popup-background-color: transparent;
                                              --popup-border-radius: 15px;
                                              --popup-border-color: transparent;
                                            content:
                                              type: custom:mini-graph-card
                                              name: Louis
                                              entities:
                                                - entity: sensor.temperature_louis
                                                  name: Température
                                                  show_state: true
                                              points_per_hour: 2
                                              hours_to_show: 48
                                              hour24: true
                                              line_width: 2
                                              height: 200
                                              more_info: true
                                              show:
                                                legend: false
                                                extrema: true
                                              color_thresholds:
                                                - value: 30
                                                  color: '#ef1d0f'
                                                - value: 26
                                                  color: '#ef5a0f'
                                                - value: 21
                                                  color: '#f0da11'
                                                - value: 18
                                                  color: '#11f13a'
                                                - value: 15
                                                  color: '#1da4f2'
                                              card_mod:
                                                style: >
                                                  .info.flex div.info__item:nth-child(2)
                                                  .info__item__value {
                                                    color: red;
                                                  } .info.flex div.info__item:nth-child(1)
                                                  .info__item__value {
                                                    color: rgba(39, 170, 245, 0.8);
                                                  } .header.flex .name.flex {
                                                    font-size: 22px;
                                                  } ha-card { box-shadow: none !important;
                                                  border-style: solid !important;
                                                  border-width: 0px !important;
                                                  border-color: transparent; font-size:
                                                  16px !important;
                                    - type: custom:mini-graph-card
                                      name: Samuel
                                      icon: none
                                      entities:
                                        - entity: sensor.temperature_samuel
                                          name: Température
                                          show_state: true
                                      points_per_hour: 2
                                      hours_to_show: 48
                                      hour24: true
                                      line_width: 2
                                      more_info: true
                                      show:
                                        legend: false
                                        extrema: false
                                      color_thresholds:
                                        - value: 30
                                          color: '#ef1d0f'
                                        - value: 26
                                          color: '#ef5a0f'
                                        - value: 21
                                          color: '#f0da11'
                                        - value: 18
                                          color: '#11f13a'
                                        - value: 15
                                          color: '#1da4f2'
                                      card_mod:
                                        style: |
                                          ha-card {
                                           box-shadow: true;
                                           border-style: solid !important;
                                           border-radius: 20px;
                                           border-width: 1px !important;
                                           margin: 0px 5px 15px 0px !important;
                                          }
                                      tap_action:
                                        action: fire-dom-event
                                        browser_mod:
                                          service: browser_mod.popup
                                          data:
                                            size: normal
                                            style: |-
                                              --popup-header-background-color: black;
                                              --popup-background-color: transparent;
                                              --popup-border-radius: 15px;
                                              --popup-border-color: transparent;
                                            content:
                                              type: custom:mini-graph-card
                                              name: Samuel
                                              entities:
                                                - entity: sensor.temperature_samuel
                                                  name: Température
                                                  show_state: true
                                              points_per_hour: 2
                                              hours_to_show: 48
                                              hour24: true
                                              line_width: 2
                                              height: 200
                                              more_info: true
                                              show:
                                                legend: false
                                                extrema: true
                                              color_thresholds:
                                                - value: 30
                                                  color: '#ef1d0f'
                                                - value: 26
                                                  color: '#ef5a0f'
                                                - value: 21
                                                  color: '#f0da11'
                                                - value: 18
                                                  color: '#11f13a'
                                                - value: 15
                                                  color: '#1da4f2'
                                              card_mod:
                                                style: >
                                                  .info.flex div.info__item:nth-child(2)
                                                  .info__item__value {
                                                    color: red;
                                                  }

                                                  .info.flex div.info__item:nth-child(1)
                                                  .info__item__value {
                                                    color: rgba(39, 170, 245, 0.8);
                                                  }

                                                  .header.flex .name.flex {
                                                    font-size: 22px;
                                                  }

                                                  ha-card { box-shadow: none !important;

                                                  border-style: solid !important;

                                                  border-width: 0px !important;

                                                  border-color: transparent;

                                                  font-size: 16px !important;
                - type: custom:mushroom-template-card
                  primary: Humidité
                  secondary: '{{ states(''sensor.humidite_salon'')}}°C'
                  icon: mdi:thermometer
                  entity: sensor.batterie_humidite_salon
                  icon_color: |-
                    {% set temp = states('sensor.humidite_salon') |float %}
                    {% if temp > 80 %}
                      red
                    {% elif temp > 70 %}
                      orange
                    {% elif temp > 60 %}
                      light-green
                    {% elif temp > 50 %}
                      blue
                    {% elif temp > 40 %}
                      teal
                    {% else %}
                      cyan
                    {% endif %}
                  layout: vertical
                  tap_action:
                    action: fire-dom-event
                    haptic: heavy
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        style: |-
                          --popup-background-color: transparant;
                          --popup-border-radius: 15px;
                          --popup-border-color: transparent;
                          --popup-padding-x: 5px;
                        size: normal
                        content:
                          type: custom:vertical-stack-in-card
                          cards:
                            - type: custom:button-card
                              show_entity_picture: false
                              entity: template
                              name: Humidité
                              show_icon: false
                              show_name: true
                              tap_action:
                                action: none
                              styles:
                                card:
                                  - margin-bottom: 0px
                                  - background-color: transparent
                                  - border-color: transparent
                                  - '--mdc-ripple-press-opacity': 0
                                name:
                                  - font-size: 45px
                                  - font-weight: lighter
                                  - justify-self: center
                                  - color: white
                            - type: vertical-stack
                              cards:
                                - square: false
                                  columns: 2
                                  type: grid
                                  cards:
                                    - type: custom:mini-graph-card
                                      name: Salon
                                      icon: none
                                      entities:
                                        - entity: sensor.humidite_salon
                                          name: Humidité
                                          show_state: true
                                      points_per_hour: 2
                                      hours_to_show: 48
                                      hour24: true
                                      line_width: 2
                                      more_info: true
                                      show:
                                        legend: false
                                        extrema: false
                                      color_thresholds:
                                        - value: 30
                                          color: '#ef1d0f'
                                        - value: 40
                                          color: '#ef5a0f'
                                        - value: 50
                                          color: '#f0da11'
                                        - value: 60
                                          color: '#11f13a'
                                        - value: 70
                                          color: '#1da4f2'
                                      card_mod:
                                        style: |
                                          ha-card {
                                           box-shadow: true;
                                           border-style: solid !important;
                                           border-radius: 20px;
                                           border-width: 1px !important;
                                           margin: 0px 0px 5px 5px;
                                          }
                                      tap_action:
                                        action: fire-dom-event
                                        browser_mod:
                                          service: browser_mod.popup
                                          data:
                                            size: normal
                                            style: |-
                                              --popup-header-background-color: black;
                                              --popup-background-color: transparent;
                                              --popup-border-radius: 15px;
                                              --popup-border-color: transparent;
                                            content:
                                              type: custom:mini-graph-card
                                              name: Salon
                                              entities:
                                                - entity: sensor.humidite_salon
                                                  name: Humidité
                                                  show_state: true
                                              points_per_hour: 2
                                              hours_to_show: 48
                                              hour24: true
                                              line_width: 2
                                              height: 200
                                              more_info: true
                                              show:
                                                legend: false
                                                extrema: true
                                              color_thresholds:
                                                - value: 30
                                                  color: '#ef1d0f'
                                                - value: 40
                                                  color: '#ef5a0f'
                                                - value: 50
                                                  color: '#f0da11'
                                                - value: 60
                                                  color: '#11f13a'
                                                - value: 70
                                                  color: '#1da4f2'
                                              card_mod:
                                                style: >
                                                  .info.flex div.info__item:nth-child(2)
                                                  .info__item__value {
                                                    color: red;
                                                  } .info.flex div.info__item:nth-child(1)
                                                  .info__item__value {
                                                    color: rgba(39, 170, 245, 0.8);
                                                  } .header.flex .name.flex {
                                                    font-size: 22px;
                                                  } ha-card { box-shadow: none !important;
                                                  border-style: solid !important;
                                                  border-width: 0px !important;
                                                  border-color: transparent; font-size:
                                                  16px !important;
                                    - type: custom:mini-graph-card
                                      name: Buanderie
                                      icon: none
                                      entities:
                                        - entity: sensor.humidite_buanderie
                                          name: Humidité
                                          show_state: true
                                      points_per_hour: 2
                                      hours_to_show: 48
                                      hour24: true
                                      line_width: 2
                                      more_info: true
                                      show:
                                        legend: false
                                        extrema: false
                                      color_thresholds:
                                        - value: 30
                                          color: '#ef1d0f'
                                        - value: 40
                                          color: '#ef5a0f'
                                        - value: 50
                                          color: '#f0da11'
                                        - value: 60
                                          color: '#11f13a'
                                        - value: 70
                                          color: '#1da4f2'
                                      card_mod:
                                        style: |
                                          ha-card {
                                           box-shadow: true;
                                           border-style: solid !important;
                                           border-radius: 20px;
                                           border-width: 1px !important;
                                           margin: 0px 5px 5px 0px;
                                          }
                                      tap_action:
                                        action: fire-dom-event
                                        browser_mod:
                                          service: browser_mod.popup
                                          data:
                                            size: normal
                                            style: |-
                                              --popup-header-background-color: black;
                                              --popup-background-color: transparent;
                                              --popup-border-radius: 15px;
                                              --popup-border-color: transparent;
                                            content:
                                              type: custom:mini-graph-card
                                              name: Buanderie
                                              entities:
                                                - entity: sensor.humidite_buanderie
                                                  name: Humidité
                                                  show_state: true
                                              points_per_hour: 2
                                              hours_to_show: 48
                                              hour24: true
                                              line_width: 2
                                              height: 200
                                              more_info: true
                                              show:
                                                legend: false
                                                extrema: true
                                              color_thresholds:
                                                - value: 30
                                                  color: '#ef1d0f'
                                                - value: 40
                                                  color: '#ef5a0f'
                                                - value: 50
                                                  color: '#f0da11'
                                                - value: 60
                                                  color: '#11f13a'
                                                - value: 70
                                                  color: '#1da4f2'
                                              card_mod:
                                                style: >
                                                  .info.flex div.info__item:nth-child(2)
                                                  .info__item__value {
                                                    color: red;
                                                  } .info.flex div.info__item:nth-child(1)
                                                  .info__item__value {
                                                    color: rgba(39, 170, 245, 0.8);
                                                  } .header.flex .name.flex {
                                                    font-size: 22px;
                                                  } ha-card { box-shadow: none !important;
                                                  border-style: solid !important;
                                                  border-width: 0px !important;
                                                  border-color: transparent; font-size:
                                                  16px !important;
                                    - type: custom:mini-graph-card
                                      name: SdB
                                      icon: none
                                      entities:
                                        - entity: sensor.humidite_sdb
                                          name: Humidité
                                          show_state: true
                                      points_per_hour: 2
                                      hours_to_show: 48
                                      hour24: true
                                      line_width: 2
                                      more_info: true
                                      show:
                                        legend: false
                                        extrema: false
                                      color_thresholds:
                                        - value: 30
                                          color: '#ef1d0f'
                                        - value: 40
                                          color: '#ef5a0f'
                                        - value: 50
                                          color: '#f0da11'
                                        - value: 60
                                          color: '#11f13a'
                                        - value: 70
                                          color: '#1da4f2'
                                      card_mod:
                                        style: |
                                          ha-card {
                                           box-shadow: true;
                                           border-style: solid !important;
                                           border-radius: 20px;
                                           border-width: 1px !important;
                                           margin: 0px 0px 5px 5px;
                                          }
                                      tap_action:
                                        action: fire-dom-event
                                        browser_mod:
                                          service: browser_mod.popup
                                          data:
                                            size: normal
                                            style: |-
                                              --popup-header-background-color: black;
                                              --popup-background-color: transparent;
                                              --popup-border-radius: 15px;
                                              --popup-border-color: transparent;
                                            content:
                                              type: custom:mini-graph-card
                                              name: SDB
                                              entities:
                                                - entity: sensor.humidite_sdb
                                                  name: Humidité
                                                  show_state: true
                                              points_per_hour: 2
                                              hours_to_show: 48
                                              hour24: true
                                              line_width: 2
                                              height: 200
                                              more_info: true
                                              show:
                                                legend: false
                                                extrema: true
                                              color_thresholds:
                                                - value: 30
                                                  color: '#ef1d0f'
                                                - value: 40
                                                  color: '#ef5a0f'
                                                - value: 50
                                                  color: '#f0da11'
                                                - value: 60
                                                  color: '#11f13a'
                                                - value: 70
                                                  color: '#1da4f2'
                                              card_mod:
                                                style: >
                                                  .info.flex div.info__item:nth-child(2)
                                                  .info__item__value {
                                                    color: red;
                                                  } .info.flex div.info__item:nth-child(1)
                                                  .info__item__value {
                                                    color: rgba(39, 170, 245, 0.8);
                                                  } .header.flex .name.flex {
                                                    font-size: 22px;
                                                  } ha-card { box-shadow: none !important;
                                                  border-style: solid !important;
                                                  border-width: 0px !important;
                                                  border-color: transparent; font-size:
                                                  16px !important;
                                    - type: custom:mini-graph-card
                                      name: Parents
                                      icon: none
                                      entities:
                                        - entity: sensor.humidite_chambre_parentale
                                          name: Humidité
                                          show_state: true
                                      points_per_hour: 2
                                      hours_to_show: 48
                                      hour24: true
                                      line_width: 2
                                      more_info: true
                                      show:
                                        legend: false
                                        extrema: false
                                      color_thresholds:
                                        - value: 30
                                          color: '#ef1d0f'
                                        - value: 40
                                          color: '#ef5a0f'
                                        - value: 50
                                          color: '#f0da11'
                                        - value: 60
                                          color: '#11f13a'
                                        - value: 70
                                          color: '#1da4f2'
                                      card_mod:
                                        style: |
                                          ha-card {
                                           box-shadow: true;
                                           border-style: solid !important;
                                           border-radius: 20px;
                                           border-width: 1px !important;
                                           margin: 0px 5px 5px 0px;
                                          }
                                      tap_action:
                                        action: fire-dom-event
                                        browser_mod:
                                          service: browser_mod.popup
                                          data:
                                            size: normal
                                            style: |-
                                              --popup-header-background-color: black;
                                              --popup-background-color: transparent;
                                              --popup-border-radius: 15px;
                                              --popup-border-color: transparent;
                                            content:
                                              type: custom:mini-graph-card
                                              name: Parents
                                              entities:
                                                - entity: sensor.humidite_chambre_parentale
                                                  name: Humidité
                                                  show_state: true
                                              points_per_hour: 2
                                              hours_to_show: 48
                                              hour24: true
                                              line_width: 2
                                              height: 200
                                              more_info: true
                                              show:
                                                legend: false
                                                extrema: true
                                              color_thresholds:
                                                - value: 30
                                                  color: '#ef1d0f'
                                                - value: 40
                                                  color: '#ef5a0f'
                                                - value: 50
                                                  color: '#f0da11'
                                                - value: 60
                                                  color: '#11f13a'
                                                - value: 70
                                                  color: '#1da4f2'
                                              card_mod:
                                                style: >
                                                  .info.flex div.info__item:nth-child(2)
                                                  .info__item__value {
                                                    color: red;
                                                  } .info.flex div.info__item:nth-child(1)
                                                  .info__item__value {
                                                    color: rgba(39, 170, 245, 0.8);
                                                  } .header.flex .name.flex {
                                                    font-size: 22px;
                                                  } ha-card { box-shadow: none !important;
                                                  border-style: solid !important;
                                                  border-width: 0px !important;
                                                  border-color: transparent; font-size:
                                                  16px !important;
                                    - type: custom:mini-graph-card
                                      name: Louis
                                      icon: none
                                      entities:
                                        - entity: sensor.humidite_louis
                                          name: Humidité
                                          show_state: true
                                      points_per_hour: 2
                                      hours_to_show: 48
                                      hour24: true
                                      line_width: 2
                                      more_info: true
                                      show:
                                        legend: false
                                        extrema: false
                                      color_thresholds:
                                        - value: 30
                                          color: '#ef1d0f'
                                        - value: 40
                                          color: '#ef5a0f'
                                        - value: 50
                                          color: '#f0da11'
                                        - value: 60
                                          color: '#11f13a'
                                        - value: 70
                                          color: '#1da4f2'
                                      card_mod:
                                        style: |
                                          ha-card {
                                           box-shadow: true;
                                           border-style: solid !important;
                                           border-radius: 20px;
                                           border-width: 1px !important;
                                           margin: 0px 0px 15px 5px !important;
                                          }
                                      tap_action:
                                        action: fire-dom-event
                                        browser_mod:
                                          service: browser_mod.popup
                                          data:
                                            size: normal
                                            style: |-
                                              --popup-header-background-color: black;
                                              --popup-background-color: transparent;
                                              --popup-border-radius: 15px;
                                              --popup-border-color: transparent;
                                            content:
                                              type: custom:mini-graph-card
                                              name: Louis
                                              entities:
                                                - entity: sensor.humidite_louis
                                                  name: Humidité
                                                  show_state: true
                                              points_per_hour: 2
                                              hours_to_show: 48
                                              hour24: true
                                              line_width: 2
                                              height: 200
                                              more_info: true
                                              show:
                                                legend: false
                                                extrema: true
                                              color_thresholds:
                                                - value: 30
                                                  color: '#ef1d0f'
                                                - value: 40
                                                  color: '#ef5a0f'
                                                - value: 50
                                                  color: '#f0da11'
                                                - value: 60
                                                  color: '#11f13a'
                                                - value: 70
                                                  color: '#1da4f2'
                                              card_mod:
                                                style: >
                                                  .info.flex div.info__item:nth-child(2)
                                                  .info__item__value {
                                                    color: red;
                                                  } .info.flex div.info__item:nth-child(1)
                                                  .info__item__value {
                                                    color: rgba(39, 170, 245, 0.8);
                                                  } .header.flex .name.flex {
                                                    font-size: 22px;
                                                  } ha-card { box-shadow: none !important;
                                                  border-style: solid !important;
                                                  border-width: 0px !important;
                                                  border-color: transparent; font-size:
                                                  16px !important;
                                    - type: custom:mini-graph-card
                                      name: Samuel
                                      icon: none
                                      entities:
                                        - entity: sensor.humidite_samuel
                                          name: Humidité
                                          show_state: true
                                      points_per_hour: 2
                                      hours_to_show: 48
                                      hour24: true
                                      line_width: 2
                                      more_info: true
                                      show:
                                        legend: false
                                        extrema: false
                                      color_thresholds:
                                        - value: 30
                                          color: '#ef1d0f'
                                        - value: 40
                                          color: '#ef5a0f'
                                        - value: 50
                                          color: '#f0da11'
                                        - value: 60
                                          color: '#11f13a'
                                        - value: 70
                                          color: '#1da4f2'
                                      card_mod:
                                        style: |
                                          ha-card {
                                           box-shadow: true;
                                           border-style: solid !important;
                                           border-radius: 20px;
                                           border-width: 1px !important;
                                           margin: 0px 5px 15px 0px !important;
                                          }
                                      tap_action:
                                        action: fire-dom-event
                                        browser_mod:
                                          service: browser_mod.popup
                                          data:
                                            size: normal
                                            style: |-
                                              --popup-header-background-color: black;
                                              --popup-background-color: transparent;
                                              --popup-border-radius: 15px;
                                              --popup-border-color: transparent;
                                            content:
                                              type: custom:mini-graph-card
                                              name: Samuel
                                              entities:
                                                - entity: sensor.humidite_samuel
                                                  name: Humidité
                                                  show_state: true
                                              points_per_hour: 2
                                              hours_to_show: 48
                                              hour24: true
                                              line_width: 2
                                              height: 200
                                              more_info: true
                                              show:
                                                legend: false
                                                extrema: true
                                              color_thresholds:
                                                - value: 30
                                                  color: '#ef1d0f'
                                                - value: 40
                                                  color: '#ef5a0f'
                                                - value: 50
                                                  color: '#f0da11'
                                                - value: 60
                                                  color: '#11f13a'
                                                - value: 70
                                                  color: '#1da4f2'
                                              card_mod:
                                                style: >
                                                  .info.flex div.info__item:nth-child(2)
                                                  .info__item__value {
                                                    color: red;
                                                  }

                                                  .info.flex div.info__item:nth-child(1)
                                                  .info__item__value {
                                                    color: rgba(39, 170, 245, 0.8);
                                                  }

                                                  .header.flex .name.flex {
                                                    font-size: 22px;
                                                  }

                                                  ha-card { box-shadow: none !important;

                                                  border-style: solid !important;

                                                  border-width: 0px !important;

                                                  border-color: transparent;

                                                  font-size: 16px !important;
        persist_state: false
      - type: custom:local-conditional-card
        default: hide
        id: net
        card:
          type: horizontal-stack
          cards:
            - type: custom:mushroom-template-card
              entity: device_tracker.dalg_udm
              primary: ''
              secondary: UDP-PRO
              layout: vertical
              icon_color: blue-grey
              icon: phu:unifi
              hold_action:
                action: none
              double_tap_action:
                action: none
              tap_action:
                action: fire-dom-event
                local_conditional_card:
                  action: set
                  ids:
                    - udm: toggle
                    - speedtest: hide
                    - capteurs: hide
                    - devices: hide
              card_mod:
                style: |
                  ha-card:active {
                    background: rgba(var(--rgb-disabled), 0.9);
                    transform: scale(0.915);
                    transition: 0s;
                  }
                    mushroom-shape-icon {
                      --icon-size: 65px;
                      display: flex;
                      margin: 0px 0px 0px 0px !important;
            - type: custom:mushroom-template-card
              entity: sensor.speedtest_cli_ping
              primary: ''
              secondary: Speedtest
              icon: mdi:speedometer
              layout: vertical
              icon_color: blue
              hold_action:
                action: none
              double_tap_action:
                action: none
              tap_action:
                action: fire-dom-event
                local_conditional_card:
                  action: set
                  ids:
                    - udm: hide
                    - speedtest: toggle
                    - capteurs: hide
                    - devices: hide
              card_mod:
                style: |
                  ha-card:active {
                    background: rgba(var(--rgb-disabled), 0.9);
                    transform: scale(0.915);
                    transition: 0s;
                  }
                    mushroom-shape-icon {
                      --icon-size: 65px;
                      display: flex;
                      margin: 0px 0px 0px 0px !important;
      - type: custom:local-conditional-card
        id: serveur
        default: hide
        card:
          type: vertical-stack
          cards:
            - type: vertical-stack
              title: ''
              cards:
                - type: horizontal-stack
                  cards:
                    - type: custom:mushroom-chips-card
                      chips:
                        - type: template
                          icon: mdi:web-cancel
                          icon_color: >-
                            {% if is_state('switch.adguard_home_filtering',
                            'on') %}
                              green
                            {% else %}
                              red
                            {% endif %}
                          content: ADGuard
                          card_mod:
                            style: |
                              ha-card {
                                justify-content: center;
                              }
                          tap_action:
                            action: fire-dom-event
                            browser_mod:
                              service: browser_mod.popup
                              data:
                                title: ADGuard
                                content:
                                  type: custom:vertical-stack-in-card
                                  cards:
                                    - type: custom:mushroom-template-card
                                      primary: ADGuard
                                      secondary: |2-
                                          {% if is_state('switch.adguard_home_filtering', 'on') %}
                                            Activé
                                          {% else %}
                                            Désactivé
                                          {% endif %}
                                      icon: mdi:security
                                      layout: vertical
                                      badge_color: ''
                                      icon_color: |2-
                                          {% if is_state('switch.adguard_home_filtering', 'on') %}
                                            green
                                          {% else %}
                                            red
                                          {% endif %}
                                      entity: switch.adguard_home_filtering
                                      tap_action:
                                        action: none
                                      card_mod:
                                        style: |
                                          ha-card { 
                                            border-radius: 20px !important;
                                            margin: 5px 5px 5px 5px;
                                          }
                                    - type: custom:mushroom-chips-card
                                      chips:
                                        - type: conditional
                                          conditions:
                                            - entity: switch.adguard_home_filtering
                                              state: 'off'
                                          chip:
                                            type: template
                                            entity: switch.adguard_home_filtering
                                            icon: mdi:certificate
                                            icon_color: green
                                            content: 'On'
                                            tap_action:
                                              action: call-service
                                              service: switch.turn_on
                                              data: {}
                                              target:
                                                entity_id: switch.adguard_home_filtering
                                            card_mod:
                                              style: |
                                                ha-card {
                                                  --chip-border-width: 0;
                                        - type: conditional
                                          conditions:
                                            - entity: switch.adguard_home_filtering
                                              state: 'on'
                                          chip:
                                            type: template
                                            entity: switch.adguard_home_filtering
                                            icon: mdi:security
                                            icon_color: red
                                            content: 'Off'
                                            tap_action:
                                              action: call-service
                                              service: switch.turn_off
                                              data: {}
                                              target:
                                                entity_id: switch.adguard_home_filtering
                                            card_mod:
                                              style: |
                                                ha-card {
                                                  --chip-border-width: 0;
                                      alignment: center
                                      card_mod:
                                        style:
                                          style: |
                                            ha-card {
                                              margin: 10px 0px 12px;
                                              --chip-background: rgba(var(--rgb-disabled), 0.15);
                                              --ha-card-box-shadow: none;
                                              --chip-border-radius: 12px;
                                              --chip-height: 40px;
                                              --chip-padding: 30px;
                                              --chip-spacing: 0px;
                                            }
                      alignment: center
                      card_mod:
                        style: |
                          .chip-container * {
                            width: 70%;
                            margin-right: 0px !important;
                            margin-bottom: 20px !important;
                          }
            - type: vertical-stack
              cards:
                - type: horizontal-stack
                  cards:
                    - type: custom:mushroom-chips-card
                      chips:
                        - type: template
                          icon: mdi:certificate
                          icon_color: red
                          content: Certificats
                          card_mod:
                            style: |
                              ha-card {
                                justify-content: center;
                                {% set state = states('sensor.cert_expiry_delay') %}
                                {% if state < '15' %}
                                  --chip-border-width: 0;
                                  --chip-box-shadow: 0px 0px 30px red;
                                {% endif %}
                              }
                          tap_action:
                            action: fire-dom-event
                            browser_mod:
                              service: browser_mod.popup
                              data:
                                title: Certificats
                                content:
                                  type: custom:vertical-stack-in-card
                                  cards:
                                    - type: custom:mushroom-template-card
                                      entity: sensor.cert_expiry_timestamp_dalg_ovh
                                      primary: Certificat
                                      secondary: >-
                                        {% if
                                        state_attr('sensor.cert_expiry_timestamp_dalg_ovh','is_valid')
                                        != 'true' %}
                                          {{ states.sensor.cert_expiry_delay.state }} jours restants
                                        {% else %}
                                          Non valide
                                        {% endif %}
                                      icon: mdi:certificate-outline
                                      layout: vertical
                                      badge_color: ''
                                      icon_color: >-
                                        {% set days =
                                        states('sensor.cert_expiry_delay') | int
                                        %}  {% if days < 15 %} 
                                          red
                                        {% elif days > 15 %}
                                          green
                                        {% else %}
                                          red
                                        {% endif %} 
                                      tap_action:
                                        action: none
                                      card_mod:
                                        style:
                                          mushroom-shape-icon$: |
                                            ha-icon {
                                              {% set state = states(config.entity) %}
                                              {% if state < '15' %}
                                                --icon-animation: fade-out 1.5s infinite;
                                              {% endif %}
                                             }
                                             @keyframes fade-out {
                                               0% { opacity:1; }
                                               50% { opacity:0; }
                                               100% { opacity:1; }
                                             }
                                          style: |
                                            ha-card { 
                                              border-radius: 20px !important;
                                              margin: 5px 5px 5px 5px;
                                            }
                                    - type: custom:mushroom-chips-card
                                      chips:
                                        - type: conditional
                                          conditions:
                                            - entity: input_boolean.certificat
                                              state: 'on'
                                          chip:
                                            type: template
                                            entity: input_boolean.certificat
                                            icon: mdi:certificate
                                            icon_color: green
                                            content: Renew
                                            tap_action:
                                              action: call-service
                                              service: automation.trigger
                                              data: {}
                                              target:
                                                entity_id: >-
                                                  automation.renew_let_s_encrypt_certificate_2
                                            card_mod:
                                              style: |
                                                ha-card {
                                                  --chip-border-width: 0;
                                                  --chip-box-shadow: {{ "0px 0px 30px red" if is_state('input_boolean.certificat', 'on') }};
                                                }
                                        - type: conditional
                                          conditions:
                                            - entity: input_boolean.certificat
                                              state: 'off'
                                          chip:
                                            type: template
                                            entity: sensor.adguard_docker
                                            icon: mdi:certificate
                                            icon_color: red
                                            content: ''
                                            tap_action:
                                              action: none
                                            card_mod:
                                              style: |
                                                ha-card {
                                                  --chip-border-width: 0;
                                      alignment: center
                                      card_mod:
                                        style:
                                          style: |
                                            ha-card {
                                              margin: 10px 0px 12px;
                                              --chip-background: rgba(var(--rgb-disabled), 0.15);
                                              --ha-card-box-shadow: none;
                                              --chip-border-radius: 12px;
                                              --chip-height: 40px;
                                              --chip-padding: 30px;
                                              --chip-spacing: 0px;
                                            }
                                  card_mod:
                                    style: |
                                      ha-card { 
                                        border-radius: 20px !important;
                                      }
                      alignment: center
                      card_mod:
                        style: |
                          .chip-container * {
                            width: 70%;
                            margin-right: 0px !important;
                            margin-bottom: 20px !important;
                          }
            - type: vertical-stack
              cards:
                - type: horizontal-stack
                  cards:
                    - type: custom:mushroom-chips-card
                      chips:
                        - type: template
                          icon: mdi:zigbee
                          icon_color: red
                          content: Zigbee
                          card_mod:
                            style: |
                              ha-card {
                                justify-content: center;
                              }
                          tap_action:
                            action: fire-dom-event
                            browser_mod:
                              service: browser_mod.popup
                              data:
                                title: Zigbee
                                content:
                                  type: horizontal-stack
                                  cards:
                                    - type: custom:mushroom-template-card
                                      primary: Batterie
                                      secondary: Sensor
                                      icon: mdi:battery-50
                                      entity: group.capteurs
                                      layout: vertical
                                      icon_color: green
                                      badge_color: ''
                                      tap_action:
                                        action: fire-dom-event
                                        browser_mod:
                                          service: browser_mod.popup
                                          data:
                                            title: Batteries
                                            content:
                                              type: custom:battery-state-card
                                              sort_by_level: asc
                                              color_gradient:
                                                - '#ff0000'
                                                - '#ffff00'
                                                - '#00ff00'
                                              entities:
                                                - entity: sensor.batterie_fenetre_cuisine
                                                  name: Fenêtre Cuisine
                                                - entity: sensor.batterie_fenetre_chambre_samuel
                                                  name: Fenêtre Chambre Samuel
                                                - entity: sensor.batterie_fenetre_chambre_louis
                                                  name: Fenêtre Chambre Louis
                                                - entity: >-
                                                    sensor.batterie_fenetre_chambre_parentale
                                                  name: Fenêtre Chambre Parentale
                                                - entity: sensor.batterie_fenetre_garage
                                                  name: Fenêtre Garage
                                                - entity: sensor.batterie_fenetre_buanderie
                                                  name: Fenêtre Buanderie
                                                - entity: sensor.batterie_fenetre_sdb
                                                  name: Fenêtre Salle de Bain
                                                - entity: sensor.batterie_temperature_salon
                                                  name: Température Salon
                                                - entity: sensor.batterie_temperature_buanderie
                                                  name: Température Buanderie
                                                - entity: sensor.batterie_temperature_louis
                                                  name: Température Louis
                                                - entity: >-
                                                    sensor.batterie_temperature_chambre_parentale
                                                  name: Température Chambre Parentale
                                                - entity: sensor.batterie_capteur_lumiere_salon
                                                  name: Lumière Salon
                                                - entity: sensor.batterie_capteur_lumiere_dressing
                                                  name: Lumière Dressing
                                                - entity: sensor.batterie_capteur_presence_wc
                                                  name: Présence WC
                                                - entity: sensor.batterie_cube
                                                  name: Cube
                                                - entity: sensor.batterie_porte_baie_droite
                                                  name: Porte Baie Droite
                                                - entity: sensor.batterie_porte_baie_gauche
                                                  name: Porte Baie Gauche
                                                - entity: sensor.batterie_porte_cuisine
                                                  name: Porte Cuisine
                                                - entity: sensor.batterie_porte_entree
                                                  name: Porte Entrée
                                                - entity: sensor.batterie_porte_garage
                                                  name: Porte Garage
                                                - entity: sensor.batterie_porte_bal
                                                  name: Boite aux Lettres
                                                - entity: sensor.batterie_temperature_samuel
                                                  name: Température Samuel
                                                - entity: sensor.batterie_temperature_sdb
                                                  name: Température SdB
                                                - entity: sensor.batterie_bouton_tablette
                                                  name: Bouton MI
                                                - entity: sensor.batterie_bouton_portillon
                                                  name: Bouton Portillon
                                                - entity: sensor.batterie_porte_abris
                                                  name: Porte Abris
                                      card_mod:
                                        style: |
                                          ha-card { 
                                            border-radius: 20px !important;
                                          }
                                    - type: custom:mushroom-template-card
                                      primary: LQI
                                      secondary: Atténuation
                                      icon: mdi:zigbee
                                      layout: vertical
                                      badge_color: ''
                                      icon_color: |2-
                                          {% if is_state('group.lqi', 'unknown') %}
                                            red
                                          {% else %}
                                            blue
                                          {% endif %}
                                      tap_action:
                                        action: fire-dom-event
                                        browser_mod:
                                          service: browser_mod.popup
                                          data:
                                            title: LQI
                                            content:
                                              type: custom:auto-entities
                                              card:
                                                type: entities
                                              filter:
                                                include:
                                                  - group: group.lqi
                                                exclude: []
                                              sort:
                                                method: state
                                                reverse: false
                                                ignore_case: false
                                                numeric: true
                                      entity: group.lqi
                                      badge_icon: ''
                                      card_mod:
                                        style: |
                                          ha-card { 
                                            border-radius: 20px !important;
                                          }
                                    - type: custom:mushroom-template-card
                                      primary: RSSI
                                      secondary: Force
                                      icon: mdi:zigbee
                                      layout: vertical
                                      badge_color: ''
                                      icon_color: |2-
                                          {% if is_state('group.rssi', 'unknown') %}
                                            red
                                          {% else %}
                                            blue
                                          {% endif %}
                                      tap_action:
                                        action: fire-dom-event
                                        browser_mod:
                                          service: browser_mod.popup
                                          data:
                                            title: RSSI
                                            content:
                                              type: custom:auto-entities
                                              card:
                                                type: entities
                                              filter:
                                                include:
                                                  - group: group.rssi
                                                exclude: []
                                              sort:
                                                method: state
                                                reverse: false
                                                ignore_case: false
                                                numeric: true
                                      entity: group.rssi
                                      badge_icon: ''
                                      card_mod:
                                        style: |
                                          ha-card { 
                                            border-radius: 20px !important;
                                          }
                      alignment: center
                      card_mod:
                        style: |
                          .chip-container * {
                            width: 70%;
                            margin-right: 0px !important;
                            margin-bottom: 20px !important;
                          }
            - type: vertical-stack
              cards:
                - type: horizontal-stack
                  cards:
                    - type: custom:mushroom-chips-card
                      chips:
                        - type: template
                          icon: mdi:restart
                          icon_color: red
                          content: Redémarrage
                          card_mod:
                            style: |
                              ha-card {
                                justify-content: center;
                              }
                          tap_action:
                            action: fire-dom-event
                            browser_mod:
                              service: browser_mod.popup
                              data:
                                title: Redémarrage
                                content:
                                  type: horizontal-stack
                                  cards:
                                    - type: custom:mushroom-template-card
                                      primary: Reload
                                      secondary: Integration
                                      icon: mdi:progress-upload
                                      layout: vertical
                                      tap_action:
                                        action: call-service
                                        service: homeassistant.reload_all
                                        target: {}
                                      icon_color: green
                                    - type: custom:mushroom-template-card
                                      primary: Restart
                                      secondary: HA
                                      icon: mdi:reload
                                      layout: vertical
                                      tap_action:
                                        action: call-service
                                        service: homeassistant.restart
                                        target: {}
                                      icon_color: orange
                                    - type: custom:mushroom-template-card
                                      primary: Restart
                                      secondary: Host
                                      icon: mdi:restart
                                      layout: vertical
                                      tap_action:
                                        action: call-service
                                        service: hassio.host_reboot
                                        target: {}
                                      icon_color: red
                      alignment: center
                      card_mod:
                        style: |
                          .chip-container * {
                            width: 70%;
                            margin-right: 0px !important;
                            margin-bottom: 20px !important;
                          }
          card_mod:
            style: |

              /* Pseudo element to hide card styling when at top */
              ha-card:after {
                content: "";
                top: 0px;
                position: fixed;
                /* Center element on page */
                left: 50%;
                transform: translateX(-50%);
                /* Position between chips and background pseudo elemnt */
                z-index: -1;
                /* Match background to main card */
                background: color-mix(in srgb, var(--card-background-color) 40%, var(--primary-background-color));
                border-radius: 0px 0px var(--ha-card-border-radius, 12px) var(--ha-card-border-radius, 12px);
              }
              /* Pseudo element for background & other card styling */
              ha-card:before {
                content: "";
                /* Position & size card behind chips */
                position: absolute;
                top: 0px;
                left: 0px;
                height: 100%;
                /* Adjust width to account for border */
                width: calc(100% - 2 * var(--ha-card-border-width, 1px));
                /* Position card at back */
                z-index: -1;
                /* Blur content behind card */
                backdrop-filter: blur(12px);
                -webkit-backdrop-filter: blur(12px);
                /* Adjust opacity of card */
                background: rgba(var(--rgb-card-background-color), 0.3);
                /* Set styling of card */
                border-radius: 35px;
                box-shadow: var(--ha-card-box-shadow);
                border: var(--ha-card-border-width, 1px) solid var(--ha-card-border-color, var(--divider-color, #e0e0e0));
              }
      - type: custom:local-conditional-card
        default: hide
        card:
          type: custom:local-conditional-card
          id: udm
          default: show
          card:
            type: custom:stack-in-card
            title: null
            mode: vertical
            cards:
              - type: markdown
                content: >-
                  ![Unifi Logo](/local/ubiquiti-networks.png) <font
                  color="#03A9F4"> <ha-icon
                  icon="/local/ubiquiti-logo.svg"></ha-icon></font>
                card_mod:
                  style: |
                    ha-card {
                     border-color: transparent;
              - type: horizontal-stack
                cards:
                  - type: custom:vertical-stack-in-card
                    cards:
                      - type: custom:mushroom-template-card
                        primary: CPU
                        secondary: UDM-Pro
                        icon: phu:unifi
                        layout: vertical
                        entity: sensor.unifi_gateway_wan_cpu
                        icon_color: |2-
                                    {% set bl = states('sensor.unifi_gateway_wan_cpu') | int %}
                                    {% if bl < 10 %} green
                                    {% elif bl < 20 %} green
                                    {% elif bl < 30 %} green
                                    {% elif bl < 40 %} green
                                    {% elif bl < 50 %} orange
                                    {% elif bl < 60 %} orange
                                    {% elif bl < 70 %} red
                                    {% elif bl < 80 %} red
                                    {% elif bl < 90 %} red
                                    {% elif bl < 100 %} red
                                    {% elif bl == 100 %} red
                                    {% else %} grey
                                    {% endif %}
                        badge_color: ''
                        tap_action:
                          action: none
                        card_mod:
                          style: |
                            ha-card { 
                              background: transparent !important;
                              border-radius: 20px !important;
                              margin: 0px 5px;
                            }
                      - type: custom:mushroom-chips-card
                        chips:
                          - type: template
                            entity: none
                            icon: ''
                            icon_color: orange
                            content: '{{ states(''sensor.unifi_gateway_wan_cpu'')}} %'
                            tap_action:
                              action: none
                        alignment: center
                        card_mod:
                          style:
                            style: |
                              ha-card {
                                margin: -2px 0px 12px;
                                --chip-background: rgba(var(--rgb-disabled), 0.15);
                                --chip-border-radius: 12px;
                                --chip-height: 40px;
                                --chip-padding: 12px;
                                --chip-spacing: 0px;
                              }
                    card_mod:
                      style: |
                        ha-card { 
                          background: rgba(0,0,0,0.2) !important;
                          border-radius: 20px !important;
                          margin: 0 5px;
                        }
                  - type: custom:vertical-stack-in-card
                    cards:
                      - type: custom:mushroom-template-card
                        primary: RAM
                        secondary: UDM-Pro
                        icon: mdi:memory
                        layout: vertical
                        entity: sensor.unifi_gateway_wan_mem
                        icon_color: |2-
                                    {% set bl = states('sensor.unifi_gateway_wan_mem') | int %}
                                    {% if bl < 10 %} green
                                    {% elif bl < 20 %} green
                                    {% elif bl < 30 %} green
                                    {% elif bl < 40 %} green
                                    {% elif bl < 50 %} green
                                    {% elif bl < 60 %} green
                                    {% elif bl < 70 %} orange
                                    {% elif bl < 80 %} orange
                                    {% elif bl < 90 %} red
                                    {% elif bl < 100 %} red
                                    {% elif bl == 100 %} red
                                    {% else %} grey
                                    {% endif %}
                        badge_color: ''
                        tap_action:
                          action: none
                        card_mod:
                          style: |
                            ha-card { 
                              background: transparent !important;
                              border-radius: 20px !important;

                              margin: 0 5px;
                            }
                      - type: custom:mushroom-chips-card
                        chips:
                          - type: template
                            entity: none
                            icon: ''
                            icon_color: orange
                            content: '{{ states(''sensor.unifi_gateway_wan_mem'')}} %'
                            tap_action:
                              action: none
                            card_mod:
                              style: |
                                ha-card {
                                  --chip-border-width: 0;
                        alignment: center
                        card_mod:
                          style:
                            style: |
                              ha-card {
                                margin: -2px 0px 12px;
                                --chip-background: rgba(var(--rgb-disabled), 0.15);
                                --chip-border-radius: 12px;
                                --chip-height: 40px;
                                --chip-padding: 12px;
                                --chip-spacing: 0px;
                              }
                    card_mod:
                      style: |
                        ha-card { 
                          background: rgba(0,0,0,0.2) !important;
                          border-radius: 20px !important;
                          margin: 0 5px;
                        }
                  - type: custom:vertical-stack-in-card
                    cards:
                      - type: custom:mushroom-template-card
                        primary: Température
                        secondary: UDM-Pro
                        icon: mdi:thermometer
                        layout: vertical
                        entity: sensor.dalg_udm_cpu_temperature
                        icon_color: |2-
                                    {% set bl = states('sensor.dalg_udm_cpu_temperature') | int %}
                                    {% if bl <= 40 %} green
                                    {% elif bl <= 45 %} orange
                                    {% elif bl >= 50 %} red
                                    {% else %} grey
                                    {% endif %}
                        badge_color: ''
                        tap_action:
                          action: none
                        card_mod:
                          style: |
                            ha-card { 
                              background: transparent !important;
                              border-radius: 20px !important;
                              box-shadow: none !important;
                              margin: 0 5px;
                            }
                      - type: custom:mushroom-chips-card
                        chips:
                          - type: template
                            entity: none
                            icon: ''
                            icon_color: orange
                            content: '{{ states(''sensor.dalg_udm_cpu_temperature'')}}°C'
                            tap_action:
                              action: none
                            card_mod:
                              style: |
                                ha-card {
                                  --chip-border-width: 0;
                        alignment: center
                        card_mod:
                          style:
                            style: |
                              ha-card {
                                margin: -2px 0px 12px;
                                --chip-background: rgba(var(--rgb-disabled), 0.15);
                                --ha-card-box-shadow: none;
                                --chip-border-radius: 12px;
                                --chip-height: 40px;
                                --chip-padding: 12px;
                                --chip-spacing: 0px;
                              }
                    card_mod:
                      style: |
                        ha-card { 
                          background: rgba(0,0,0,0.2) !important;
                          border-radius: 20px !important;
                          margin: 0 5px;
                        }
              - type: markdown
                content: "<table>\n    <tbody>\n      <tr>\n        <td width=\"50\"><font color=\"#03A9F4\"><ha-icon icon=\"mdi:router-network\"></ha-icon></font></td>\n        <td width=\"300\">Switchs</td>\n        <td><center><font size=\"-2\">Devices</font><br> {{ states.sensor.unifi_gateway_lan.attributes['num_sw'] -}}</center></td>\n\t\t<td><center><font size=\"-2\">Adopted</font><br> {{ states.sensor.unifi_gateway_lan.attributes['num_adopted'] -}}</center></td>\n\t\t<td><center><font size=\"-2\">Disconnected</font><br> {{ states.sensor.unifi_gateway_lan.attributes['num_disconnected'] -}}</center></td>\n\t\t<td><center><font size=\"-2\">Pending</font><br> {{ states.sensor.unifi_gateway_lan.attributes['num_pending'] -}}</center></td>\n      </tr>\n\t  <tr>\n        <td width=\"50\"><font color=\"#03A9F4\"><ha-icon icon=\"mdi:wifi\"></ha-icon></font></td>\n        <td width=\"300\">AP</td>\n        <td><center><font size=\"-2\">Devices</font><br> {{ states.sensor.unifi_gateway_wlan.attributes['num_ap'] -}}</center></td>\n\t\t<td><center><font size=\"-2\">Adopted</font><br> {{ states.sensor.unifi_gateway_wlan.attributes['num_adopted'] -}}</center></td>\n\t\t<td><center><font size=\"-2\">Disconnected</font><br> {{ states.sensor.unifi_gateway_wlan.attributes['num_disconnected'] -}}</center></td>\n\t\t<td><center><font size=\"-2\">Pending</font><br> {{ states.sensor.unifi_gateway_wlan.attributes['num_pending'] -}}</center></td>\n      </tr>\n    </tbody>\n  </table> "
                card_mod:
                  style: |
                    ha-card { 
                      background: rgba(0,0,0,0.2) !important;
                      border-radius: 20px !important;
                      margin: 10px 5px;
                    }
              - card_mod:
                  style: |
                    ha-card {
                      --paper-item-icon-color: #03A9F4;
                    }
                type: custom:mini-graph-card
                entities:
                  - entity: sensor.unifi_gateway_wlan_num_user
                    color: '#03A9F4'
                    name: Clients WLAN
                  - entity: binary_sensor.night
                    color: '#6f7480'
                    y_axis: secondary
                    name: Nuit
                    aggregate_func: min
                    smoothing: false
                    show_state: true
                    show_line: false
                    show_points: false
                state_map:
                  - value: 'off'
                    label: Day
                  - value: 'on'
                    label: Night
                icon: mdi:account
                hours_to_show: 48
                line_width: 3
              - card_mod:
                  style: |
                    ha-card {
                      --paper-item-icon-color: #03A9F4;
                    }
                type: custom:mini-graph-card
                entities:
                  - entity: sensor.unifi_gateway_lan_num_user
                    color: '#03A9F4'
                    name: Clients LAN
                  - entity: binary_sensor.night
                    color: '#6f7480'
                    y_axis: secondary
                    name: Nuit
                    aggregate_func: min
                    smoothing: false
                    show_state: true
                    show_line: false
                    show_points: false
                state_map:
                  - value: 'off'
                    label: Day
                  - value: 'on'
                    label: Night
                icon: mdi:account
                hours_to_show: 48
                line_width: 3
            card_mod:
              style: |
                ha-card {
                  margin-bottom: 80px !important;
                }
        id: serveur
      - type: custom:local-conditional-card
        id: net
        default: hide
        card:
          type: custom:local-conditional-card
          id: speedtest
          default: hide
          card:
            type: custom:stack-in-card
            title: null
            mode: vertical
            cards:
              - type: custom:mushroom-template-card
                primary: Démarrer Speedtest
                secondary: ''
                icon: mdi:speedometer
                tap_action:
                  action: call-service
                  service: homeassistant.update_entity
                  service_data:
                    entity_id: sensor.speedtest_cli_data
                hold_action:
                  action: none
                double_tap_action:
                  action: none
                icon_color: blue
                card_mod:
                  style: |
                    ha-card { 
                      background: rgba(0,0,0,0.2) !important;
                      border-radius: 20px !important;
                      margin: 10px 10px;
                    }
              - type: custom:swipe-card
                start_card: 1
                parameters:
                  effect: coverflow
                  roundLengths: true
                  speed: 650
                  spaceBetween: 20
                  threshold: 7
                  coverflowEffect:
                    rotate: 80
                    depth: 300
                    start_card: 1
                cards:
                  - type: custom:mini-graph-card
                    entities:
                      - entity: sensor.speedtest_cli_download
                    name: Download
                    decimals: '0'
                    more_info: true
                    line_width: 2
                    hours_to_show: 24
                    points_per_hour: 2
                    show:
                      graph: line
                      extrema: true
                    color_thresholds:
                      - value: 0
                        color: '#ef1d0f'
                      - value: 2000
                        color: '#ef5a0f'
                      - value: 3000
                        color: '#f0da11'
                      - value: 4000
                        color: '#11f13a'
                      - value: 7000
                        color: '#1da4f2'
                    style: |
                      ha-card .header.flex .name.flex {
                        color: #44739e;
                        font-size: 14px;
                      }
                      .header.flex .icon {
                        --mdc-icon-size: 28px;
                      }
                      :host {
                        --card-mod-icon-color: #44739e;
                      }
                      .fill {
                        fill: white;
                        opacity: 0.2 !important;
                      }
                      ha-card {
                        box-shadow: none;
                      }
                      ha-card .states.flex::after {
                        content: "{{states('sensor.speedtest_server_name')}}";
                        white-space: pre;
                        background-color: rgba(68, 115, 158,0.4);
                        padding: 2px 2px 0px 2px;
                        border-radius: 4px;
                        font-size: 9px;
                      }
                    card_mod:
                      style: |
                        ha-card { 
                          background: rgba(0,0,0,0.2) !important;
                          border-radius: 20px !important;
                          margin: 10px 10px;
                        }
                  - type: custom:mini-graph-card
                    entities:
                      - entity: sensor.speedtest_cli_upload
                        name: Upload
                    name: Upload
                    decimals: '0'
                    more_info: true
                    line_width: 2
                    hours_to_show: 24
                    points_per_hour: 2
                    show:
                      graph: line
                      extrema: true
                    color_thresholds:
                      - value: 0
                        color: '#ef1d0f'
                      - value: 2000
                        color: '#ef5a0f'
                      - value: 3000
                        color: '#f0da11'
                      - value: 4000
                        color: '#11f13a'
                      - value: 7000
                        color: '#1da4f2'
                    style: |
                      ha-card .header.flex .name.flex {
                        color: #44739e;
                        font-size: 14px;
                      }
                      .header.flex .icon {
                        --mdc-icon-size: 28px;
                      }
                      :host {
                        --card-mod-icon-color: #44739e;
                      }
                      .fill {
                        fill: white;
                        opacity: 0.2 !important;
                      }
                      ha-card {
                        box-shadow: none;
                      }
                      ha-card .states.flex::after {
                        content: "{{states('sensor.speedtest_server_name')}}";
                        white-space: pre;
                        background-color: rgba(68, 115, 158,0.4);
                        padding: 2px 2px 0px 2px;
                        border-radius: 4px;
                        font-size: 9px;
                      }
                    card_mod:
                      style: |
                        ha-card { 
                          background: rgba(0,0,0,0.2) !important;
                          border-radius: 20px !important;
                          margin: 10px 10px;
                        }
                  - type: custom:mini-graph-card
                    entities:
                      - entity: sensor.speedtest_cli_ping
                        name: Ping
                    name: Ping
                    decimals: '0'
                    more_info: true
                    line_width: 2
                    hours_to_show: 24
                    points_per_hour: 2
                    show:
                      graph: line
                      extrema: true
                    color_thresholds:
                      - value: 0
                        color: '#ef1d0f'
                      - value: 10
                        color: '#ef5a0f'
                      - value: 15
                        color: '#f0da11'
                      - value: 20
                        color: '#11f13a'
                      - value: 25
                        color: '#1da4f2'
                    style: |
                      ha-card .header.flex .name.flex {
                        color: #44739e;
                        font-size: 14px;
                      }
                      .header.flex .icon {
                        --mdc-icon-size: 28px;
                      }
                      :host {
                        --card-mod-icon-color: #44739e;
                      }
                      .fill {
                        fill: white;
                        opacity: 0.2 !important;
                      }
                      ha-card {
                        box-shadow: none;
                      }
                      ha-card .states.flex::after {
                        content: "{{states('sensor.speedtest_server_name')}}";
                        white-space: pre;
                        background-color: rgba(68, 115, 158,0.4);
                        padding: 2px 2px 0px 2px;
                        border-radius: 4px;
                        font-size: 9px;
                      }
                    card_mod:
                      style: |
                        ha-card { 
                          background: rgba(0,0,0,0.2) !important;
                          border-radius: 20px !important;
                          margin: 10px 10px;
                        }
                  - type: vertical-stack
                    cards:
                      - type: markdown
                        content: >-
                          ![Image]({{ states('sensor.speedtest_cli_url')+ '.png'
                          }})
                        card_mod:
                          style: |
                            ha-card {
                            --ha-card-background: transparent; 
                            color: rgb(255,255,255);
                            border-color: transparent;
                            box-shadow: none;
                            } 
      - type: custom:local-conditional-card
        default: hide
        id: light
        card:
          type: vertical-stack
          title: ''
          cards:
            - square: false
              columns: 3
              type: grid
              cards:
                - type: custom:mushroom-light-card
                  layout: vertical
                  secondary_info: none
                  name: Salon
                  entity: switch.lumiere_salon
                  card_mod:
                    style: |
                      ha-card {
                        {% if is_state(config.entity, 'on') %}
                          background-color: rgba(255,214,10,0.9);

                        {% else %} 
                          background-color: rgba(var(--rgb-card-background-color));
                        {% endif %}
                      }
                - type: custom:mushroom-light-card
                  entity: switch.lumiere_salle_a_manger
                  use_light_color: true
                  layout: vertical
                  secondary_info: none
                  name: Salle Manger
                  card_mod:
                    style: |
                      ha-card {
                        {% if is_state(config.entity, 'on') %}
                          background-color: rgba(255,214,10,0.9);
                        {% else %} 
                          background-color: rgba(var(--rgb-card-background-color));
                        {% endif %}
                      }
                - type: custom:mushroom-light-card
                  entity: light.lumiere_buanderie
                  layout: vertical
                  secondary_info: none
                  name: Buanderie
                  card_mod:
                    style: |
                      ha-card {
                        {% if is_state(config.entity, 'on') %}
                          background-color: rgba(255,214,10,0.9);
                        {% else %} 
                          background-color: rgba(var(--rgb-card-background-color));
                        {% endif %}
                      }
                - type: custom:mushroom-light-card
                  layout: vertical
                  secondary_info: none
                  name: Couloir
                  entity: light.lumiere_couloir
                  card_mod:
                    style: |
                      ha-card {
                        {% if is_state(config.entity, 'on') %}
                          background-color: rgba(255,214,10,0.9);

                        {% else %} 
                          background-color: rgba(var(--rgb-card-background-color));
                        {% endif %}
                      }
                - type: custom:mushroom-light-card
                  entity: light.lumiere_salle_de_bain
                  name: SdB
                  layout: vertical
                  secondary_info: none
                  card_mod:
                    style: |
                      ha-card {
                        {% if is_state(config.entity, 'on') %}
                          background-color: rgba(255,214,10,0.9);
                        {% else %} 
                          background-color: rgba(var(--rgb-card-background-color));
                        {% endif %}
                      }
                - type: custom:mushroom-light-card
                  entity: light.lumiere_wc
                  layout: vertical
                  secondary_info: none
                  name: WC
                  card_mod:
                    style: |
                      ha-card {
                        {% if is_state(config.entity, 'on') %}
                          background-color: rgba(255,214,10,0.9);
                        {% else %} 
                          background-color: rgba(var(--rgb-card-background-color));
                        {% endif %}
                      }
                - type: custom:mushroom-light-card
                  entity: light.lumiere_chambre_louis
                  layout: vertical
                  secondary_info: none
                  name: Louis
                  card_mod:
                    style: |
                      ha-card {
                        {% if is_state(config.entity, 'on') %}
                          background-color: rgba(255,214,10,0.9);
                        {% else %} 
                          background-color: rgba(var(--rgb-card-background-color));
                        {% endif %}
                      }
                - type: custom:mushroom-light-card
                  entity: light.lumiere_chambre_samuel
                  layout: vertical
                  secondary_info: none
                  name: Samuel
                  card_mod:
                    style: |
                      ha-card {
                        {% if is_state(config.entity, 'on') %}
                          background-color: rgba(255,214,10,0.9);
                        {% else %} 
                          background-color: rgba(var(--rgb-card-background-color));
                        {% endif %}
                      }
                - type: custom:mushroom-light-card
                  entity: light.lumiere_chambre_parentale
                  layout: vertical
                  secondary_info: none
                  name: Parents
                  card_mod:
                    style: |
                      ha-card {
                        {% if is_state(config.entity, 'on') %}
                          background-color: rgba(255,214,10,0.9);
                        {% else %} 
                          background-color: rgba(var(--rgb-card-background-color));
                        {% endif %}
                      }
                - type: custom:mushroom-light-card
                  entity: light.lumiere_dressing
                  layout: vertical
                  secondary_info: none
                  name: Dressing
                  card_mod:
                    style: |
                      ha-card {
                        {% if is_state(config.entity, 'on') %}
                          background-color: rgba(255,214,10,0.9);
                        {% else %} 
                          background-color: rgba(var(--rgb-card-background-color));
                        {% endif %}
                      }
                - type: custom:mushroom-light-card
                  layout: vertical
                  secondary_info: none
                  name: Cuisine
                  entity: light.lumiere_cuisine
                  card_mod:
                    style: |
                      ha-card {
                        {% if is_state(config.entity, 'on') %}
                          background-color: rgba(255,214,10,0.9);

                        {% else %} 
                          background-color: rgba(var(--rgb-card-background-color));
                        {% endif %}
                      }
                - type: custom:mushroom-light-card
                  entity: light.lumiere_garage
                  layout: vertical
                  secondary_info: none
                  name: Garage
                  card_mod:
                    style: |
                      ha-card {
                        {% if is_state(config.entity, 'on') %}
                          background-color: rgba(255,214,10,0.9);
                        {% else %} 
                          background-color: rgba(var(--rgb-card-background-color));
                        {% endif %}
                      }
      - type: custom:local-conditional-card
        default: hide
        id: light
        card:
          type: vertical-stack
          title: Lampes
          cards:
            - square: false
              type: grid
              cards:
                - type: custom:mushroom-template-card
                  layout: vertical
                  primary: Led
                  secondary_info: none
                  entity: switch.lampe_led
                  icon: mdi:wall-sconce-round-variant
                  icon_color: |-
                    {% if is_state('switch.lampe_led', 'on') %}
                      black
                    {% else %}
                      grey
                    {% endif %}
                  card_mod:
                    style: |
                      ha-card {
                        {% if is_state(config.entity, 'on') %}
                          background-color: rgba(147,112,219, 1);
                        {% else %} 
                          background-color: rgba(var(--rgb-card-background-color));
                        {% endif %}
                      }
                - type: custom:mushroom-template-card
                  layout: vertical
                  primary: Caoutchouc
                  secondary_info: none
                  entity: switch.lampe_caoutchouc
                  icon: mdi:string-lights
                  icon_color: |-
                    {% if is_state('switch.lampe_caoutchouc', 'on') %}
                      black
                    {% else %}
                      grey
                    {% endif %}
                  card_mod:
                    style: |
                      ha-card {
                        {% if is_state(config.entity, 'on') %}
                          background-color: rgba(147,112,219, 1);
                        {% else %} 
                          background-color: rgba(var(--rgb-card-background-color));
                        {% endif %}
                      }
                - type: custom:mushroom-template-card
                  layout: vertical
                  primary: Guirlande
                  secondary_info: none
                  entity: switch.lampe_guirlande
                  icon: mdi:string-lights
                  icon_color: |-
                    {% if is_state('switch.lampe_guirlande', 'on') %}
                      black
                    {% else %}
                      grey
                    {% endif %}
                  card_mod:
                    style: |
                      ha-card {
                        {% if is_state(config.entity, 'on') %}
                          background-color: rgba(147,112,219, 1);
                        {% else %} 
                          background-color: rgba(var(--rgb-card-background-color));
                        {% endif %}
                      }
              columns: 3
            - square: false
              type: grid
              cards:
                - features:
                    - type: light-brightness
                  type: tile
                  entity: light.lampe_canape
                  name: Canapé
                  card_mod:
                    style: |
                      .background {
                        {% if is_state(config.entity, 'on') %}
                          background: color-mix(in srgb, var(--tile-color) 50%, var(--card-background-color));
                        {% endif %}
                      }
              columns: 1
      - type: custom:local-conditional-card
        default: hide
        id: light
        card:
          type: vertical-stack
          title: Extérieur
          cards:
            - square: false
              columns: 4
              type: grid
              cards:
                - type: custom:mushroom-template-card
                  layout: vertical
                  primary: Abris
                  secondary_info: none
                  entity: light.lumiere_abris
                  icon: mdi:lightbulb
                  icon_color: |-
                    {% if is_state('light.lumiere_abris', 'on') %}
                      black
                    {% else %}
                      grey
                    {% endif %}
                  card_mod:
                    style: "ha-card {\n  {% if is_state(config.entity, 'on') %}\n    background-color: \trgba(255,165,0, 1);\n  {% else %} \n    background-color: rgba(var(--rgb-card-background-color));\n  {% endif %}\n}\n"
                - type: custom:mushroom-template-card
                  layout: vertical
                  primary: Nord
                  secondary_info: none
                  entity: light.lumiere_ext_cote
                  icon: mdi:light-flood-down
                  icon_color: |-
                    {% if is_state('light.lumiere_ext_cote', 'on') %}
                      black
                    {% else %}
                      grey
                    {% endif %}
                  card_mod:
                    style: "ha-card {\n  {% if is_state(config.entity, 'on') %}\n    background-color: \trgba(255,165,0, 1);\n  {% else %} \n    background-color: rgba(var(--rgb-card-background-color));\n  {% endif %}\n}\n"
                - type: custom:mushroom-template-card
                  layout: vertical
                  primary: Garage
                  secondary_info: none
                  entity: light.lumiere_ext_garage
                  icon: mdi:light-flood-down
                  icon_color: |-
                    {% if is_state('light.lumiere_ext_garage', 'on') %}
                      black
                    {% else %}
                      grey
                    {% endif %}
                  card_mod:
                    style: "ha-card {\n  {% if is_state(config.entity, 'on') %}\n    background-color: \trgba(255,165,0, 1);\n  {% else %} \n    background-color: rgba(var(--rgb-card-background-color));\n  {% endif %}\n}\n"
                - type: custom:mushroom-template-card
                  layout: vertical
                  primary: Terrasse
                  secondary_info: none
                  entity: light.lumiere_ext_terrasse
                  icon: mdi:light-flood-down
                  icon_color: |-
                    {% if is_state('light.lumiere_ext_terrasse', 'on') %}
                      black
                    {% else %}
                      grey
                    {% endif %}
                  card_mod:
                    style: "ha-card {\n  {% if is_state(config.entity, 'on') %}\n    background-color: \trgba(255,165,0, 1);\n  {% else %} \n    background-color: rgba(var(--rgb-card-background-color));\n  {% endif %}\n}\n"
      - type: custom:local-conditional-card
        default: hide
        id: light
        card:
          type: vertical-stack
          title: Prises
          cards:
            - square: false
              columns: 3
              type: grid
              cards:
                - type: custom:mushroom-template-card
                  layout: vertical
                  primary: Abris
                  secondary_info: none
                  entity: switch.prise_abris
                  icon: mdi:power-socket-fr
                  icon_color: |-
                    {% if is_state('switch.prise_abris', 'on') %}
                      black
                    {% else %}
                      grey
                    {% endif %}
                  card_mod:
                    style: |
                      ha-card {
                        {% if is_state(config.entity, 'on') %}
                          background-color: rgba(255,0,0,0.75);

                        {% else %} 
                          background-color: rgba(var(--rgb-card-background-color));
                        {% endif %}
                      }
                - type: custom:mushroom-template-card
                  layout: vertical
                  primary: Chargeur
                  secondary_info: none
                  entity: switch.prise_chargeur
                  icon: mdi:power-socket-fr
                  icon_color: |-
                    {% if is_state('switch.prise_chargeur', 'on') %}
                      black
                    {% else %}
                      grey
                    {% endif %}
                  card_mod:
                    style: |
                      ha-card {
                        {% if is_state(config.entity, 'on') %}
                          background-color: rgba(255,0,0,0.75);

                        {% else %} 
                          background-color: rgba(var(--rgb-card-background-color));
                        {% endif %}
                      }
                - type: custom:mushroom-template-card
                  layout: vertical
                  primary: Salon
                  secondary_info: none
                  entity: switch.prise_salon
                  icon: mdi:power-socket-fr
                  icon_color: |-
                    {% if is_state('switch.prise_salon', 'on') %}
                      black
                    {% else %}
                      grey
                    {% endif %}
                  card_mod:
                    style: |
                      ha-card {
                        {% if is_state(config.entity, 'on') %}
                          background-color: rgba(255,0,0,0.75);
                        {% else %} 
                          background-color: rgba(var(--rgb-card-background-color));
                        {% endif %}
                      margin-bottom: 80px !important;
                      }
      - type: custom:local-conditional-card
        id: portail
        default: hide
        card:
          type: vertical-stack
          cards:
            - show_state: false
              show_name: false
              camera_view: live
              type: picture-entity
              image: camera.dalg_doorbell_high
              entity: camera.dalg_doorbell_high
              aspect_ratio: '1.34'
            - type: horizontal-stack
              cards:
                - square: false
                  columns: 2
                  type: grid
                  cards:
                    - type: custom:mushroom-template-card
                      primary: Portail
                      secondary: |-
                        {% if is_state('binary_sensor.portail', 'off') %}
                          Fermé
                        {% else %}
                          Ouvert
                        {% endif %}
                      icon: |-
                        {% if is_state('binary_sensor.portail', 'off') %}
                          mdi:gate
                        {% else %}
                          mdi:gate-open
                        {% endif %}
                      icon_color: |-
                        {% if is_state('binary_sensor.portail', 'off') %}
                          green
                        {% else %}
                          red
                        {% endif %}
                      entity: switch.portail
                      tap_action:
                        action: toggle
                      layout: vertical
                      card_mod:
                        style:
                          mushroom-shape-icon$: |
                            .shape {
                              {% set gate = states('binary_sensor.portail') %}
                              {% if gate == 'on' %}
                                --shape-animation: ping 1s infinite;
                              {% endif %}
                              {{ 'animation: none;' if not is_state('binary_sensor.portail', 'off') }}
                            }
                            @keyframes ping {
                              0% { box-shadow: 0 0 1px 1px rgba(var(--rgb-red), 0.9); }
                              100% { box-shadow: 0 0 5px 15px transparent; }
                            }
                          style: |
                            :host {
                              --mush-icon-size: 65px;
                             }
                    - type: custom:mushroom-template-card
                      primary: Portillon
                      secondary: |-
                        {% if is_state('switch.portillon', 'off') %}
                          Fermé
                        {% else %}
                          Ouvert
                        {% endif %}
                      icon: |-
                        {% if is_state('switch.portillon', 'off') %}
                          mdi:door
                        {% else %}
                          mdi:door-open
                        {% endif %}
                      icon_color: |-
                        {% if is_state('switch.portillon', 'off') %}
                          green
                        {% else %}
                          red
                        {% endif %}
                      layout: vertical
                      entity: switch.portillon
                      tap_action:
                        action: toggle
                      card_mod:
                        style: |
                          :host {
                            --mush-icon-size: 65px;
                           }
      - type: custom:local-conditional-card
        default: hide
        id: device
        card:
          type: horizontal-stack
          title: Ordinateur
          cards:
            - type: custom:vertical-stack-in-card
              cards:
                - type: custom:mushroom-template-card
                  primary: Dell
                  secondary: OptiPlex
                  icon: |-
                    {% if is_state('binary_sensor.ping_dalg_pc', 'off') %}
                      mdi:remote-desktop
                    {% else %}
                      disable
                    {% endif %}
                  icon_color: |-
                    {% if is_state('binary_sensor.ping_dalg_pc', 'off') %}
                      red
                    {% else %}
                      transparent
                    {% endif %}
                  layout: vertical
                  entity: camera.dalg_pc_screen_0
                  tap_action:
                    action: fire-dom-event
                    haptic: heavy
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        style: |-
                          --popup-border-radius: 15px;
                          --popup-border-color: transparent;
                          --popup-padding-x: 5px;
                        size: normal
                        content:
                          type: vertical-stack
                          cards:
                            - type: custom:stack-in-card
                              cards:
                                - type: custom:mushroom-media-player-card
                                  entity: camera.dalg_pc_screen_0
                                  name: Dell OptiPlex
                                  icon: mdi:play
                                  use_media_info: true
                                  use_media_artwork: false
                                  show_volume_level: false
                                  fill_container: false
                                  card_mod:
                                    style: |
                                      mushroom-shape-icon {
                                        display: flex;
                                          --card-mod-icon: mdi:remote-desktop;
                                          animation: beat 1.3s ease-out infinite both;

                                        {{ 'animation: none;' if not is_state(config.entity, 'idle') }}

                                      }
                                      @keyframes flicker {
                                        0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--rgb-indigo), 1); }
                                        32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--rgb-indigo), 0.6); }
                                      }
                                      @keyframes beat {
                                        0%, 60% { --icon-symbol-size: 21px; }
                                        5%, 17%, 57% { --icon-symbol-size: 22px; }
                                        10%, 20%, 51% { --icon-symbol-size: 23px; }
                                        25%, 45% { --icon-symbol-size: 24px; }
                                        30%, 39% { --icon-symbol-size: 25px; }
                                        33% { --icon-symbol-size: 26px; }
                                      }
                                      ha-card {
                                        --ha-card-border-width: 0;
                                      }
                                      ha-card:before {
                                        transform: translate3d(0,0,0);
                                        -webkit-transform: translate3d(0,0,0);
                                        content: "";

                                        background: url('/local/mushroom/dell.png') center no-repeat;
                                        {% if not is_state(config.entity, 'unavailable') %}
                                          background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                        {% endif %}

                                        background-size: contain;
                                        margin: 4px 4px 16px;
                                        filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
                                        border-radius: var(--control-border-radius);

                                        {% if is_state(config.entity, 'idle') %}
                                          aspect-ratio: 16 / 9;
                                        {% else %}
                                          aspect-ratio: 1 / 1;
                                        {% endif %}
                                      }
                                      }
                              card_mod:
                                style: |
                                  ha-card:before {
                                    transform: translate3d(0,0,0);
                                    -webkit-transform: translate3d(0,0,0);
                                    content: "";
                                    position: absolute;
                                    height: 100%;
                                    width: 100%;

                                    background: url('/local/mushroom/dell.png') center no-repeat;
                                    {% if not is_state('camera.dalg_pc_screen_0', 'unavailable') %}
                                      background: url( '{{ state_attr('camera.dalg_pc_screen_0', "entity_picture") }}' ) center no-repeat;
                                    {% endif %}

                                    filter: blur(150px) saturate(200%);
                                    background-size: 100% 100%;
                                  }
                                  ha-card {
                                    transform: translate3d(0,0,0);
                                    -webkit-transform: translate3d(0,0,0);
                                  }
                  card_mod:
                    style: |
                      :host {
                        --mush-icon-size: 65px;
                       }
                      ha-card {
                        {% if not is_state(config.entity, 'unavailable') %}
                          background-image: url( '{{ state_attr( config.entity, "entity_picture" ) }}' );
                          background-position: center;
                          background-repeat: no-repeat;
                          background-size: cover;
                          background-color: rgba(var(--rgb-card-background-color)0.5);
                          background-blend-mode: overlay;
                          --primary-text-color: transparent;
                          --secondary-text-color: transparent;
                        {% endif %}
                        --rgb-state-media-player: var(--rgb-teal);
                      }
                - type: custom:mushroom-chips-card
                  chips:
                    - type: conditional
                      conditions:
                        - entity: binary_sensor.ping_dalg_pc
                          state: 'off'
                      chip:
                        type: template
                        entity: script.my_computer_wake
                        icon: mdi:power
                        icon_color: green
                        content: 'On'
                        tap_action:
                          action: toggle
                        card_mod:
                          style: |
                            ha-card {
                              --chip-border-width: 0;
                    - type: conditional
                      conditions:
                        - entity: binary_sensor.ping_dalg_pc
                          state: 'on'
                      chip:
                        type: template
                        entity: script.my_computer_restart
                        icon: mdi:restart
                        icon_color: orange
                        content: ''
                        tap_action:
                          action: toggle
                        card_mod:
                          style: |
                            ha-card {
                              --chip-border-width: 0;
                    - type: conditional
                      conditions:
                        - entity: binary_sensor.ping_dalg_pc
                          state: 'on'
                      chip:
                        type: template
                        entity: script.my_computer_shutdown
                        icon: mdi:power
                        icon_color: red
                        content: ''
                        tap_action:
                          action: toggle
                        card_mod:
                          style: |
                            ha-card {
                              --chip-border-width: 0;
                  alignment: center
                  card_mod:
                    style:
                      style: |
                        ha-card {
                          margin: 10px 0px 12px;
                          --chip-background: rgba(var(--rgb-disabled), 0.15);
                          --ha-card-box-shadow: none;
                          --chip-border-radius: 12px;
                          --chip-height: 40px;
                          {% if is_state('binary_sensor.ping_dalg_pc', 'on') %}
                            --chip-padding: 25px;
                            --chip-spacing: 15px;
                          {% else %}
                            --chip-padding: 25px;
                            --chip-spacing: 0px;
                          {% endif %}
                        }
            - type: custom:vertical-stack-in-card
              cards:
                - type: custom:mushroom-template-card
                  primary: Dell
                  secondary: Precision
                  icon: |-
                    {% if is_state('binary_sensor.ping_dalg_dell', 'off') %}
                      mdi:remote-desktop
                    {% else %}
                      disable
                    {% endif %}
                  icon_color: |-
                    {% if is_state('binary_sensor.ping_dalg_dell', 'off') %}
                      red
                    {% else %}
                      transparent
                    {% endif %}
                  layout: vertical
                  entity: camera.dalg_dell_screen_0
                  tap_action:
                    action: fire-dom-event
                    haptic: heavy
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        style: |-
                          --popup-border-radius: 15px;
                          --popup-border-color: transparent;
                          --popup-padding-x: 5px;
                        size: normal
                        content:
                          type: vertical-stack
                          cards:
                            - type: custom:stack-in-card
                              cards:
                                - type: custom:mushroom-media-player-card
                                  entity: camera.dalg_dell_screen_0
                                  name: Dell Precision
                                  icon: mdi:play
                                  use_media_info: true
                                  use_media_artwork: false
                                  show_volume_level: false
                                  fill_container: false
                                  card_mod:
                                    style: |
                                      mushroom-shape-icon {
                                        display: flex;
                                          --card-mod-icon: mdi:desktop-classic;
                                          animation: beat 1.3s ease-out infinite both;
                                        {{ 'animation: none;' if not is_state(config.entity, 'idle') }}

                                      }
                                      @keyframes flicker {
                                        0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--rgb-indigo), 1); }
                                        32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--rgb-indigo), 0.6); }
                                      }
                                      @keyframes beat {
                                        0%, 60% { --icon-symbol-size: 21px; }
                                        5%, 17%, 57% { --icon-symbol-size: 22px; }
                                        10%, 20%, 51% { --icon-symbol-size: 23px; }
                                        25%, 45% { --icon-symbol-size: 24px; }
                                        30%, 39% { --icon-symbol-size: 25px; }
                                        33% { --icon-symbol-size: 26px; }
                                      }
                                      ha-card {
                                        --ha-card-border-width: 0;
                                      }
                                      ha-card:before {
                                        transform: translate3d(0,0,0);
                                        -webkit-transform: translate3d(0,0,0);
                                        content: "";

                                        background: url('/local/mushroom/dell.png') center no-repeat;
                                        {% if not is_state(config.entity, 'unavailable') %}
                                          background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                        {% endif %}

                                        background-size: contain;
                                        margin: 4px 4px 16px;
                                        filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
                                        border-radius: var(--control-border-radius);

                                        {% if is_state(config.entity, 'idle') %}
                                          aspect-ratio: 16 / 9;
                                        {% else %}
                                          aspect-ratio: 1 / 1;
                                        {% endif %}
                                      }
                                      }
                              card_mod:
                                style: |
                                  ha-card:before {
                                    transform: translate3d(0,0,0);
                                    -webkit-transform: translate3d(0,0,0);
                                    content: "";
                                    position: absolute;
                                    height: 100%;
                                    width: 100%;

                                    background: url('/local/mushroom/dell.png') center no-repeat;
                                    {% if not is_state('camera.dalg_dell_screen_0', 'unavailable') %}
                                      background: url( '{{ state_attr('camera.dalg_dell_screen_0', "entity_picture") }}' ) center no-repeat;
                                    {% endif %}

                                    filter: blur(150px) saturate(200%);
                                    background-size: 100% 100%;
                                  }
                                  ha-card {
                                    transform: translate3d(0,0,0);
                                    -webkit-transform: translate3d(0,0,0);
                                  }
                  card_mod:
                    style: |
                      :host {
                        --mush-icon-size: 65px;
                      }
                      ha-card {
                        {% if not is_state(config.entity, 'unavailable') %}
                          background-image: url( '{{ state_attr( config.entity, "entity_picture" ) }}' );
                          background-position: center;
                          background-repeat: no-repeat;
                          background-size: cover;
                          background-color: rgba(var(--rgb-card-background-color)0.5);
                          background-blend-mode: overlay;
                          --primary-text-color: transparent;
                          --secondary-text-color: transparent;
                        {% endif %}
                        --rgb-state-media-player: var(--rgb-teal);
                      }
                - type: custom:mushroom-chips-card
                  chips:
                    - type: conditional
                      conditions:
                        - entity: binary_sensor.ping_dalg_dell
                          state: 'off'
                      chip:
                        type: template
                        entity: script.my_computer_wake2
                        icon: mdi:power
                        icon_color: green
                        content: 'On'
                        tap_action:
                          action: toggle
                        card_mod:
                          style: |
                            ha-card {
                              --chip-border-width: 0;
                    - type: conditional
                      conditions:
                        - entity: binary_sensor.ping_dalg_dell
                          state: 'on'
                      chip:
                        type: template
                        entity: script.my_computer_3_reboot
                        icon: mdi:restart
                        icon_color: orange
                        content: ''
                        tap_action:
                          action: toggle
                        card_mod:
                          style: |
                            ha-card {
                              --chip-border-width: 0;
                    - type: conditional
                      conditions:
                        - entity: binary_sensor.ping_dalg_dell
                          state: 'on'
                      chip:
                        type: template
                        entity: script.my_computer_3_shutdown
                        icon: mdi:power
                        icon_color: red
                        content: ''
                        tap_action:
                          action: toggle
                        card_mod:
                          style: |
                            ha-card {
                              --chip-border-width: 0;
                  alignment: center
                  card_mod:
                    style:
                      style: |
                        ha-card {
                          margin: 10px 0px 12px;
                          --chip-background: rgba(var(--rgb-disabled), 0.15);
                          --ha-card-box-shadow: none;
                          --chip-border-radius: 12px;
                          --chip-height: 40px;
                          {% if is_state('binary_sensor.ping_dalg_dell', 'on') %}
                            --chip-padding: 25px;
                            --chip-spacing: 15px;
                          {% else %}
                            --chip-padding: 25px;
                            --chip-spacing: 0px;
                          {% endif %}
                        }
      - type: custom:local-conditional-card
        default: hide
        id: device
        card:
          type: horizontal-stack
          title: Media
          cards:
            - type: custom:vertical-stack-in-card
              cards:
                - type: custom:mushroom-template-card
                  primary: Nvidia
                  secondary: Shield
                  icon: |-
                    {% if is_state('media_player.nvidia_shield', 'off') %}
                      mdi:set-top-box
                    {% else %}
                      disable
                    {% endif %}
                  icon_color: |-
                    {% if is_state('media_player.nvidia_shield', 'off') %}
                      red
                    {% else %}
                      transparent
                    {% endif %}
                  layout: vertical
                  entity: media_player.nvidia_shield
                  tap_action:
                    action: fire-dom-event
                    haptic: heavy
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        style: |-
                          --popup-border-radius: 15px;
                          --popup-border-color: transparent;
                          --popup-padding-x: 5px;
                          --popup-background-color: transparent;
                        size: normal
                        content:
                          type: vertical-stack
                          cards:
                            - type: custom:stack-in-card
                              cards:
                                - type: custom:mushroom-media-player-card
                                  entity: media_player.plex_nvidia_shield
                                  name: Nvidia Shield
                                  icon: mdi:play
                                  use_media_info: true
                                  use_media_artwork: false
                                  show_volume_level: false
                                  fill_container: false
                                  card_mod:
                                    style: |
                                      mushroom-shape-icon {
                                        display: flex;
                                        {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                        {% if media_type == 'tvshow' %}
                                          --card-mod-icon: mdi:television-classic;
                                          animation: flicker 1s linear infinite alternate;
                                        {% elif media_type == 'movie' %}
                                          --card-mod-icon: mdi:movie-roll;
                                          animation: spin 2s linear infinite reverse;
                                        {% elif media_type == 'music' %}
                                          --card-mod-icon: mdi:music;
                                          animation: beat 1.3s ease-out infinite both;
                                        {% elif media_type == 'playlist' %}
                                          --card-mod-icon: mdi:music;
                                          animation: beat 1.3s ease-out infinite both;
                                        {% else %}
                                          --card-mod-icon: mdi:play;
                                        {% endif %}

                                        {{ 'animation: none;' if not is_state(config.entity, 'off') }}

                                      }
                                      @keyframes flicker {
                                        0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--rgb-indigo), 1); }
                                        32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--rgb-indigo), 0.6); }
                                      }
                                      @keyframes beat {
                                        0%, 60% { --icon-symbol-size: 21px; }
                                        5%, 17%, 57% { --icon-symbol-size: 22px; }
                                        10%, 20%, 51% { --icon-symbol-size: 23px; }
                                        25%, 45% { --icon-symbol-size: 24px; }
                                        30%, 39% { --icon-symbol-size: 25px; }
                                        33% { --icon-symbol-size: 26px; }
                                      }
                                      ha-card {
                                        --ha-card-border-width: 0;
                                      }
                                      ha-card:before {
                                        transform: translate3d(0,0,0);
                                        -webkit-transform: translate3d(0,0,0);
                                        content: "";

                                        background: url('/local/mushroom/nvidia.png') center no-repeat;
                                        {% if not is_state(config.entity, 'off') %}
                                          background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                        {% endif %}

                                        background-size: contain;
                                        margin: 4px 4px 16px;
                                        filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
                                        border-radius: var(--control-border-radius);

                                        {% set media_type = state_attr('media_player.plex_nvidia_shield', 'media_content_type') %}
                                        {% if media_type == 'tvshow' %}
                                          aspect-ratio: 16 / 9;
                                        {% elif media_type == 'movie' %}
                                          aspect-ratio: 2 / 3;
                                        {% else %}
                                          aspect-ratio: 1 / 1;
                                        {% endif %}
                                      }
                              card_mod:
                                style: |
                                  ha-card:before {
                                    transform: translate3d(0,0,0);
                                    -webkit-transform: translate3d(0,0,0);
                                    content: "";
                                    position: absolute;
                                    height: 100%;
                                    width: 100%;

                                    background: url('/local/mushroom/nvidia.png') center no-repeat;
                                    {% if not is_state('media_player.nvidia_shield', 'off') %}
                                      background: url( '{{ state_attr('media_player.plex_nvidia_shield', "entity_picture") }}' ) center no-repeat;
                                    {% endif %}

                                    filter: blur(150px) saturate(200%);
                                    background-size: 100% 100%;
                                  }
                                  ha-card {
                                    transform: translate3d(0,0,0);
                                    -webkit-transform: translate3d(0,0,0);
                                  }
                  card_mod:
                    style: |
                      :host {
                        --mush-icon-size: 65px;
                      }
                      ha-card {
                        {% if not is_state(config.entity, 'off') %}
                          background-image: url( '{{ state_attr('media_player.plex_nvidia_shield', "entity_picture" ) }}' );
                          background-position: center;
                          background-repeat: no-repeat;
                          background-size: cover;
                          background-color: rgba(var(--rgb-card-background-color)0.5);
                          background-blend-mode: overlay;
                          --primary-text-color: transparent;
                          --secondary-text-color: transparent;
                        {% endif %}
                        --rgb-state-media-player: var(--rgb-teal);
                      }
                - type: custom:mushroom-chips-card
                  chips:
                    - type: conditional
                      conditions:
                        - entity: media_player.nvidia_shield
                          state: 'off'
                      chip:
                        type: template
                        entity: script.nvidia_shield_on
                        icon: mdi:power
                        icon_color: green
                        content: 'On'
                        tap_action:
                          action: toggle
                        card_mod:
                          style: |
                            ha-card {
                              --chip-border-width: 0;
                    - type: conditional
                      conditions:
                        - entity: media_player.nvidia_shield
                          state_not: 'off'
                      chip:
                        type: template
                        entity: script.nvidia_shield_off
                        icon: mdi:power
                        icon_color: red
                        content: 'Off'
                        tap_action:
                          action: toggle
                        card_mod:
                          style: |
                            ha-card {
                              --chip-border-width: 0;
                  alignment: center
                  card_mod:
                    style:
                      style: |
                        ha-card {
                          margin: 10px 0px 12px;
                          --chip-background: rgba(var(--rgb-disabled), 0.15);
                          --ha-card-box-shadow: none;
                          --chip-border-radius: 12px;
                          --chip-height: 40px;
                          --chip-padding: 30px;
                          --chip-spacing: 0px;
                        }
            - type: custom:vertical-stack-in-card
              cards:
                - type: custom:mushroom-template-card
                  primary: Philips
                  secondary: |-
                    {% if is_state('media_player.55oled936_12', 'on') %}
                      {{ state_attr('media_player.55oled936_12', 'media_title') }}
                    {% elif is_state('media_player.plex_tv', 'playing') %}
                      {{ state_attr('media_player.plex_tv', 'media_title') }}
                    {% else %}
                      TV
                    {% endif %}
                  icon: |-
                    {% if is_state('media_player.philips_tv', 'off') %}
                      mdi:television
                    {% else %}
                      disable
                    {% endif %}
                  icon_color: |-
                    {% if is_state('media_player.philips_tv', 'off') %}
                      red
                    {% else %}
                      transparent
                    {% endif %}
                  layout: vertical
                  entity: media_player.plex_tv
                  tap_action:
                    action: fire-dom-event
                    haptic: heavy
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        style: |-
                          --popup-header-background-color: black;
                          --popup-background-color: transperant;
                          --popup-border-radius: 15px;
                          --popup-border-color: transparent;
                          --popup-padding-x: 5px;
                        size: normal
                        content:
                          type: vertical-stack
                          cards:
                            - type: conditional
                              conditions:
                                - entity: media_player.philips_tv
                                  state: 'off'
                              card:
                                type: picture-elements
                                card_mod:
                                  style: |
                                    ha-card:before {
                                      transform: translate3d(0,0,0);
                                      -webkit-transform: translate3d(0,0,0);
                                      content: "";
                                      position: absolute;
                                      height: 100%;
                                      width: 100%;

                                      background: url('{{ states('sensor.plex_recently_movies_poster_1') }}') center no-repeat;
                                      {% if not is_state('sensor.recently_added_movies', 'Online') %}
                                        background: url('{{ states('sensor.plex_recently_movies_poster_1') }}') center no-repeat;
                                      {% endif %}

                                      filter: blur(150px) saturate(200%);
                                      background-size: 100% 100%;
                                    }
                                    ha-card {
                                      transform: translate3d(0,0,0);
                                      -webkit-transform: translate3d(0,0,0);

                                    }
                                    }
                                elements:
                                  - type: custom:upcoming-media-card
                                    style:
                                      top: 10px
                                      left: 20%
                                      transform: translate(0%, 0%)
                                    entity: sensor.recently_added_movies
                                    image_style: poster
                                    flag: false
                                    icon: none
                                    max: 1
                                    box_shadows: false
                                    border_color: transparent
                                    accent_color: transparent
                                    title_text: $empty
                                    line1_text: $runtime
                                    line2_text: $empty
                                    line3_text: $empty
                                    line4_text: $empty
                                    title_size: large
                                    line1_size: large
                                    text_shadows: false
                                    card_mod:
                                      style: >
                                        ha-card.type-custom-upcoming-media-card
                                        {
                                          background: transparent;
                                          padding: 0px !important;
                                          box-shadow: none;
                                          overflow: visible !important;
                                        }

                                        ha-card > div {
                                          padding: 0px !important;
                                        }

                                        #main > div > div > svg {
                                          filter: none !important;
                                          border-radius: 10px !important;
                                        }

                                        #main > div > div > svg > polygon {
                                          points: 100 12.95,80 0,0,100 !important;
                                        }

                                        #main.rece_poster {
                                          margin: 0px !important;
                                          overflow: visible !important;
                                          position: absolute !important;
                                          width: 168px;
                                        }

                                        #main.rece_poster:nth-of-type(2) {
                                          left: 181px !important; ## placement will depend on size of your card and how far apart you want them spaced
                                        }

                                        .rece_poster .rece_container_poster {
                                          border-radius: 10px;
                                          box-shadow: 5px 5px 20px rgba(0, 0, 0, 0.2);
                                          margin: 0px;
                                          padding: 0px;
                                          width: 219px;
                                          height: 335px;
                                        }

                                        .rece_poster .rece_svg_poster {
                                          margin: 0px;
                                          position: absolute;
                                          top: 5px;
                                          left: 5px;
                                          width: 51px !important;
                                          height: 28px;
                                          border-radius: 20px;
                                          background-color: rgba(44, 45, 67, 0.3);
                                          backdrop-filter: blur(5px);
                                          -webkit-backdrop-filter: blur(5px);
                                          padding: 0px 0px 2px 7px;
                                        }

                                        .rece_line0_poster {
                                          font-size: 0px !important;
                                        }

                                        .rece_line1_poster {
                                          font-size: 55px !important;
                                          fill: white !important;
                                          opacity: 90%;
                                        }
                                image: /local/box.png
                            - type: conditional
                              conditions:
                                - entity: media_player.philips_tv
                                  state_not: 'off'
                              card:
                                type: custom:stack-in-card
                                cards:
                                  - type: custom:mushroom-media-player-card
                                    entity: media_player.philips_tv
                                    name: Philips TV - Plex
                                    icon: mdi:play
                                    use_media_info: true
                                    use_media_artwork: false
                                    show_volume_level: false
                                    media_controls:
                                      - play_pause_stop
                                      - previous
                                      - next
                                    volume_controls:
                                      - volume_buttons
                                      - volume_set
                                    fill_container: false
                                    card_mod:
                                      style: |
                                        mushroom-shape-icon {
                                          display: flex;
                                          {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                          {% if media_type == 'tvshow' %}
                                            --card-mod-icon: mdi:television-classic;
                                            animation: flicker 1s linear infinite alternate;
                                          {% elif media_type == 'movie' %}
                                            --card-mod-icon: mdi:movie-roll;
                                            animation: spin 2s linear infinite reverse;
                                          {% elif media_type == 'music' %}
                                            --card-mod-icon: mdi:music;
                                            animation: beat 1.3s ease-out infinite both;
                                          {% elif media_type == 'playlist' %}
                                            --card-mod-icon: mdi:music;
                                            animation: beat 1.3s ease-out infinite both;
                                          {% else %}
                                            --card-mod-icon: mdi:play;
                                          {% endif %}

                                          {{ 'animation: none;' if not is_state(config.entity, 'playing') }}

                                        }
                                        @keyframes flicker {
                                          0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--rgb-indigo), 1); }
                                          32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--rgb-indigo), 0.6); }
                                        }
                                        @keyframes beat {
                                          0%, 60% { --icon-symbol-size: 21px; }
                                          5%, 17%, 57% { --icon-symbol-size: 22px; }
                                          10%, 20%, 51% { --icon-symbol-size: 23px; }
                                          25%, 45% { --icon-symbol-size: 24px; }
                                          30%, 39% { --icon-symbol-size: 25px; }
                                          33% { --icon-symbol-size: 26px; }
                                        }
                                        ha-card {
                                          --ha-card-border-width: 0;
                                        }
                                        ha-card:before {
                                          transform: translate3d(0,0,0);
                                          -webkit-transform: translate3d(0,0,0);
                                          content: "";

                                          background: url('/local/mushroom/philips.png') center no-repeat;
                                          {% if is_state('media_player.plex_tv', 'playing') %}
                                            background: url( '{{ state_attr('media_player.plex_tv', "entity_picture") }}') center no-repeat;
                                          {% elif is_state('media_player.plex_tv', 'paused') %}
                                            background: url( '{{ state_attr('media_player.plex_tv', "entity_picture") }}') center no-repeat;
                                          {% elif is_state('media_player.plex_tv', 'idle') %}
                                            background: url( '{{ state_attr('media_player.philips_tv', "entity_picture") }}') center no-repeat;
                                          {% endif %}

                                          background-size: contain;
                                          margin: 4px 4px 16px;
                                          filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
                                          border-radius: var(--control-border-radius);

                                          {% set media_type = state_attr('media_player.plex_tv', 'media_content_type') %}
                                          {% if media_type == 'tvshow' %}
                                            aspect-ratio: 16 / 9;
                                          {% elif media_type == 'movie' %}
                                            aspect-ratio: 2 / 3;
                                          {% else %}
                                            aspect-ratio: 1 / 1;
                                          {% endif %}

                                        }
                                  - type: conditional
                                    conditions:
                                      - entity: media_player.philips_tv
                                        state_not: 'off'
                                    card:
                                      entity: media_player.philips_tv
                                      hide:
                                        icon: true
                                        name: true
                                        runtime: true
                                        source: true
                                        power: true
                                        state_label: true
                                        volume: true
                                        info: true
                                        progress: false
                                        controls: true
                                      more_info: false
                                      type: custom:mini-media-player
                                      toggle_power: false
                                      group: true
                                      card_mod:
                                        style:
                                          mmp-progress$: |
                                            paper-progress {
                                              {{ '--paper-progress-container-color: rgba(var(--rgb-indigo-color), 0.2) !important;' if is_state(config.entity, 'playing') }}
                                            }
                                          .: |
                                            ha-card {
                                              margin: 0px 12px 12px;
                                              --mmp-progress-height: 12px !important;
                                              height: var(--mmp-progress-height);
                                              --mmp-accent-color: rgb(var(--rgb-indigo-color));
                                              --mmp-border-radius: 12px !important;
                                              --ha-card-border-width: 0;
                                            }
                                card_mod:
                                  style: |
                                    ha-card:before {
                                      transform: translate3d(0,0,0);
                                      -webkit-transform: translate3d(0,0,0);

                                      content: "";
                                      position: absolute;
                                      height: 100%;
                                      width: 100%;
                                      background-size: 100% 100%;
                                      filter: blur(150px) saturate(200%);
                                      background: url('/local/mushroom/idle_art.png') center no-repeat;

                                      {% if not is_state('media_player.philips_tv', 'off') %}
                                        background: url( '{{ state_attr('media_player.plex_tv', "entity_picture") }}' ) center no-repeat;
                                        background-size: 400% 400%;
                                        animation: Gradient 30s linear infinite;
                                      {% endif %}

                                    }
                                    ha-card {
                                      transform: translate3d(0,0,0);
                                      -webkit-transform: translate3d(0,0,0);
                                      --ha-card-border-width: 0;
                                      margin-top: -4px;
                                      margin-bottom: -4px;
                                    }
                                    @keyframes Gradient {
                                      0% {
                                        background-position: 0% 50%;
                                      }
                                      25% {
                                        background-position: 50% 0%;
                                      }
                                      50% {
                                        background-position: 100% 50%;
                                      }
                                      75% {
                                        background-position: 50% 100%;
                                      }
                                      100% {
                                        background-position: 0% 50%;
                                      }
                                    }
                  card_mod:
                    style: |
                      :host {
                        --mush-icon-size: 65px;
                      }
                      ha-card {
                        {% if is_state('media_player.plex_tv', 'playing') %}
                          background-image: url( '{{ state_attr('media_player.plex_tv', "entity_picture" ) }}' );
                          background-position: center;
                          background-repeat: no-repeat;
                          background-size: cover;
                          background-color: rgba(var(--rgb-card-background-color)0.5);
                          background-blend-mode: overlay;
                          --primary-text-color: transparent;
                          --secondary-text-color: transparent;
                        {% elif is_state('media_player.plex_tv', 'paused') %}
                          background-image: url( '{{ state_attr('media_player.plex_tv', "entity_picture" ) }}' );
                          background-position: center;
                          background-repeat: no-repeat;
                          background-size: cover;
                          background-color: rgba(var(--rgb-card-background-color)0.5);
                          background-blend-mode: overlay;
                          --primary-text-color: transparent;
                          --secondary-text-color: transparent;
                        {% elif is_state('media_player.plex_tv', 'idle') %}
                          background-image: url( '{{ state_attr('media_player.philips_tv', "entity_picture" ) }}' );
                          background-position: center;
                          background-repeat: no-repeat;
                          background-size: cover;
                          background-color: rgba(var(--rgb-card-background-color)0.5);
                          background-blend-mode: overlay;
                        {% elif is_state('media_player.55oled936_12', 'playing') %}
                          background-image: url( '{{ state_attr('media_player.plex_tv', "entity_picture" ) }}' );
                          background-position: center;
                          background-repeat: no-repeat;
                          background-size: cover;
                          background-color: rgba(var(--rgb-card-background-color)0.5);
                          background-blend-mode: overlay;
                          --primary-text-color: transparent;
                          --secondary-text-color: transparent;
                        {% elif is_state('media_player.55oled936_12', 'paused') %}
                          background-image: url( '{{ state_attr('media_player.plex_tv', "entity_picture" ) }}' );
                          background-position: center;
                          background-repeat: no-repeat;
                          background-size: cover;
                          background-color: rgba(var(--rgb-card-background-color)0.5);
                          background-blend-mode: overlay;
                          --primary-text-color: transparent;
                          --secondary-text-color: transparent;
                        {% elif is_state('media_player.55oled936_12', 'idle') %}
                          background-image: url( '{{ state_attr('media_player.philips_tv', "entity_picture" ) }}' );
                          background-position: center;
                          background-repeat: no-repeat;
                          background-size: cover;
                          background-color: rgba(var(--rgb-card-background-color)0.5);
                          background-blend-mode: overlay;
                        {% endif %}
                        --rgb-state-media-player: var(--rgb-teal);
                      }
                - type: custom:mushroom-chips-card
                  chips:
                    - type: conditional
                      conditions:
                        - entity: media_player.philips_tv
                          state: 'off'
                      chip:
                        type: template
                        entity: media_player.philips_tv
                        icon: mdi:power
                        icon_color: green
                        content: 'On'
                        tap_action:
                          action: toggle
                        card_mod:
                          style: |
                            ha-card {
                              --chip-border-width: 0;
                    - type: conditional
                      conditions:
                        - entity: media_player.philips_tv
                          state_not: 'off'
                      chip:
                        type: template
                        entity: media_player.philips_tv
                        icon: mdi:power
                        icon_color: red
                        content: 'Off'
                        tap_action:
                          action: toggle
                        card_mod:
                          style: |
                            ha-card {
                              --chip-border-width: 0;
                  alignment: center
                  card_mod:
                    style:
                      style: |
                        ha-card {
                          margin: 10px 0px 12px;
                          --chip-background: rgba(var(--rgb-disabled), 0.15);
                          --ha-card-box-shadow: none;
                          --chip-border-radius: 12px;
                          --chip-height: 40px;
                          --chip-padding: 30px;
                          --chip-spacing: 0px;
                        }
      - type: custom:local-conditional-card
        default: hide
        id: device
        card:
          type: horizontal-stack
          title: Téléphone
          cards:
            - type: custom:state-switch
              entity: media_player.plex_iphone_damien
              transition: flip
              transition_time: 200
              default: idle
              states:
                idle:
                  type: custom:vertical-stack-in-card
                  cards:
                    - type: custom:mushroom-template-card
                      card_mod:
                        style: |
                          :host {
                            --mush-icon-size: 65px;
                          }
                      primary: Iphone
                      secondary: Damien
                      icon: |-
                        {% if is_state('person.damien', 'not_home') %}
                          mdi:cellphone-text
                        {% else %}
                          mdi:cellphone-text
                        {% endif %}
                      icon_color: |-
                        {% if is_state('person.damien', 'not_home') %}
                          red
                        {% else %}
                          blue
                        {% endif %}
                      layout: vertical
                      entity: device_tracker.dalg_iphone11p
                      tap_action:
                        action: fire-dom-event
                        haptic: heavy
                        browser_mod:
                          service: browser_mod.popup
                          data:
                            style: |-
                              --popup-border-radius: 15px;
                              --popup-background-color: transparent;
                              --popup-border-color: transparent;
                              --popup-padding-x: 5px;
                            size: normal
                            content:
                              type: custom:stack-in-card
                              cards:
                                - type: custom:mushroom-media-player-card
                                  entity: media_player.plex_iphone_damien
                                  name: iPhone
                                  icon: mdi:play
                                  use_media_info: true
                                  use_media_artwork: false
                                  show_volume_level: false
                                  media_controls:
                                    - play_pause_stop
                                    - previous
                                    - next
                                  volume_controls:
                                    - volume_buttons
                                    - volume_set
                                  fill_container: false
                                  card_mod:
                                    style: |
                                      mushroom-shape-icon {
                                        display: flex;
                                        {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                        {% if media_type == 'tvshow' %}
                                          --card-mod-icon: mdi:television-classic;
                                          animation: flicker 1s linear infinite alternate;
                                        {% elif media_type == 'movie' %}
                                          --card-mod-icon: mdi:movie-roll;
                                          animation: spin 2s linear infinite reverse;
                                        {% elif media_type == 'music' %}
                                          --card-mod-icon: mdi:music;
                                          animation: beat 1.3s ease-out infinite both;
                                        {% elif media_type == 'playlist' %}
                                          --card-mod-icon: mdi:music;
                                          animation: beat 1.3s ease-out infinite both;
                                        {% else %}
                                          --card-mod-icon: mdi:play;
                                        {% endif %}

                                        {{ 'animation: none;' if not is_state(config.entity, 'playing') }}

                                      }
                                      @keyframes flicker {
                                        0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--rgb-indigo), 1); }
                                        32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--rgb-indigo), 0.6); }
                                      }
                                      @keyframes beat {
                                        0%, 60% { --icon-symbol-size: 21px; }
                                        5%, 17%, 57% { --icon-symbol-size: 22px; }
                                        10%, 20%, 51% { --icon-symbol-size: 23px; }
                                        25%, 45% { --icon-symbol-size: 24px; }
                                        30%, 39% { --icon-symbol-size: 25px; }
                                        33% { --icon-symbol-size: 26px; }
                                      }
                                      ha-card {
                                        --ha-card-border-width: 0;
                                      }
                                      ha-card:before {
                                        transform: translate3d(0,0,0);
                                        -webkit-transform: translate3d(0,0,0);
                                        content: "";

                                        background: url('/local/idle_art.png') center no-repeat;
                                        {% if not is_state(config.entity, 'unavailable') %}
                                          background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                        {% endif %}

                                        background-size: contain;
                                        margin: 4px 4px 16px;
                                        filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
                                        border-radius: var(--control-border-radius);

                                        {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                        {% if media_type == 'tvshow' %}
                                          aspect-ratio: 16 / 9;
                                        {% elif media_type == 'movie' %}
                                          aspect-ratio: 2 / 3;
                                        {% else %}
                                          aspect-ratio: 1 / 1;
                                        {% endif %}
                                      }
                    - type: custom:layout-card
                      layout_type: masonry
                      layout:
                        width: 106
                        max_cols: 1
                        height: auto
                        padding: 0px
                        card_margin: var(--masonry-view-card-margin, -10px 8px 15px)
                      cards: null
                    - type: custom:mushroom-chips-card
                      chips:
                        - type: template
                          entity: sensor.iphone_de_damien_connection_type
                          icon: >
                            {% if
                            is_state('sensor.iphone_de_damien_connection_type',
                            'Cellular') %}
                              mdi:signal-cellular-1
                            {% elif
                            is_state('sensor.iphone_de_damien_connection_type',
                            'Wi-Fi') %}
                              mdi:wifi
                            {% else %}
                              mdi:wifi-off
                            {% endif %}
                          icon_color: >
                            {% if
                            is_state('sensor.iphone_de_damien_connection_type',
                            'Cellular') %}
                              orange
                            {% elif
                            is_state('sensor.iphone_de_damien_connection_type',
                            'Wi-Fi') %}
                              blue
                            {% else %}
                              grey
                            {% endif %}
                          content_info: none
                          tap_action:
                            action: more-info
                          card_mod:
                            style: |
                              ha-card {
                                --chip-border-width: 0;
                        - type: template
                          entity: sensor.iphone_de_damien_battery_level
                          content: '{{ states(entity) }}%'
                          icon: |2
                             {% set bl = states('sensor.iphone_de_damien_battery_level') | int %}
                             {% if bl < 10 %} mdi:battery-outline
                             {% elif bl < 20 %} mdi:battery-10
                             {% elif bl < 30 %} mdi:battery-20
                             {% elif bl < 40 %} mdi:battery-30
                             {% elif bl < 50 %} mdi:battery-40
                             {% elif bl < 60 %} mdi:battery-50
                             {% elif bl < 70 %} mdi:battery-60
                             {% elif bl < 80 %} mdi:battery-70
                             {% elif bl < 90 %} mdi:battery-80
                             {% elif bl < 100 %} mdi:battery-90
                             {% elif bl == 100 %} mdi:battery
                             {% else %} mdi:battery-unknown
                             {% endif %}
                          icon_color: |2-
                              {% set bl = states('sensor.iphone_de_damien_battery_level') | int %}
                              {% if bl < 10 %} red
                              {% elif bl < 20 %} red
                              {% elif bl < 30 %} red
                              {% elif bl < 40 %} orange
                              {% elif bl < 50 %} orange
                              {% elif bl < 60 %} blue
                              {% elif bl < 70 %} blue
                              {% elif bl < 80 %} blue
                              {% elif bl < 90 %} blue
                              {% elif bl < 100 %} blue
                              {% elif bl == 100 %} green
                              {% else %} grey
                              {% endif %}
                          tap_action:
                            action: more-info
                          card_mod:
                            style: |
                              ha-card {
                                --chip-border-width: 0;
                        - type: template
                          entity: sensor.iphone_de_damien_battery_state
                          icon_color: >-
                            {% set
                            state=states('sensor.iphone_de_damien_battery_state')
                            %}

                            {% if state=='Charging' %}
                              blue
                            {% elif state=='Not Charging' %}
                              
                            {% endif %}
                          icon: >-
                            {% set
                            state=states('sensor.iphone_de_damien_battery_state')
                            %}

                            {% if state=='Charging' %}
                              mdi:power-plug
                            {% elif state=='Not Charging' %}
                              mdi:power-plug-off
                            {% endif %}
                          content_info: none
                          tap_action:
                            action: more-info
                          card_mod:
                            style: |
                              ha-card {
                                --chip-border-width: 0;
                        - type: template
                          entity: sensor.iphone_de_damien_geocoded_location
                          icon_color: |-
                            {% set state=states('person.damien') %}
                            {% if state=='home' %}
                              blue
                            {% elif state=='not_home' %}
                              red
                            {% endif %}
                          icon: mdi:map-marker
                          content: >-
                            {{
                            state_attr("sensor.iphone_de_damien_geocoded_location","Locality")
                            }}
                          tap_action:
                            action: fire-dom-event
                            haptic: heavy
                            browser_mod:
                              service: browser_mod.popup
                              data:
                                style: |-
                                  --popup-border-radius: 15px;
                                  --popup-border-color: transparent;
                                  --popup-padding-x: 5px;
                                size: normal
                                content:
                                  type: map
                                  default_zoom: 15
                                  entities:
                                    - entity: device_tracker.iphone_de_damien
                                      card_mod:
                                        style: |
                                          ha-card {
                                            --chip-border-width: 0;
                      alignment: center
                      card_mod:
                        style:
                          style: |
                            ha-card {
                              margin: -2px 0px 12px;
                              --chip-background: rgba(var(--rgb-disabled), 0.15);
                              --ha-card-box-shadow: none;
                              --chip-border-radius: 12px;
                              --chip-height: 40px;
                              --chip-padding: 12px;
                              --chip-spacing: 6px;
                            }
                    - type: custom:layout-card
                      layout_type: masonry
                      layout:
                        max_cols: 1
                        height: auto
                        width: 150
                        padding: 0px
                        card_margin: var(--masonry-view-card-margin, -10px 8px 15px)
                      cards:
                        - type: custom:mini-graph-card
                          entities:
                            - entity: sensor.iphone_de_damien_battery_level
                              name: Batterie
                              color: rgba(33, 150, 243)
                          hours_to_show: 48
                          line_width: 2
                          animate: true
                          show:
                            name: false
                            icon: false
                            state: false
                            legend: false
                            fill: fade
                          card_mod:
                            style: |
                              ha-card {
                                background: none;
                                box-shadow: none;
                                --ha-card-border-width: 0;
                              }
                      picture: ''
                playing:
                  type: custom:stack-in-card
                  cards:
                    - type: custom:mushroom-media-player-card
                      entity: media_player.plex_iphone_damien
                      name: iPhone
                      icon: mdi:play
                      use_media_info: true
                      use_media_artwork: false
                      show_volume_level: false
                      media_controls:
                        - play_pause_stop
                        - previous
                        - next
                      volume_controls:
                        - volume_buttons
                        - volume_set
                      fill_container: false
                      card_mod:
                        style: |
                          mushroom-shape-icon {
                            display: flex;
                            {% set media_type = state_attr(config.entity, 'media_content_type') %}
                            {% if media_type == 'tvshow' %}
                              --card-mod-icon: mdi:television-classic;
                              animation: flicker 1s linear infinite alternate;
                            {% elif media_type == 'movie' %}
                              --card-mod-icon: mdi:movie-roll;
                              animation: spin 2s linear infinite reverse;
                            {% elif media_type == 'music' %}
                              --card-mod-icon: mdi:music;
                              animation: beat 1.3s ease-out infinite both;
                            {% elif media_type == 'playlist' %}
                              --card-mod-icon: mdi:music;
                              animation: beat 1.3s ease-out infinite both;
                            {% else %}
                              --card-mod-icon: mdi:play;
                            {% endif %}

                            {{ 'animation: none;' if not is_state(config.entity, 'playing') }}

                          }
                          @keyframes flicker {
                            0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--rgb-indigo), 1); }
                            32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--rgb-indigo), 0.6); }
                          }
                          @keyframes beat {
                            0%, 60% { --icon-symbol-size: 21px; }
                            5%, 17%, 57% { --icon-symbol-size: 22px; }
                            10%, 20%, 51% { --icon-symbol-size: 23px; }
                            25%, 45% { --icon-symbol-size: 24px; }
                            30%, 39% { --icon-symbol-size: 25px; }
                            33% { --icon-symbol-size: 26px; }
                          }
                          ha-card {
                            --ha-card-border-width: 0;
                          }
                          ha-card:before {
                            transform: translate3d(0,0,0);
                            -webkit-transform: translate3d(0,0,0);
                            content: "";

                            background: url('/local/mushroom/idle_art.png') center no-repeat;
                            {% if not is_state(config.entity, 'unavailable') %}
                              background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                            {% endif %}

                            background-size: contain;
                            margin: 4px 4px 16px;
                            filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
                            border-radius: var(--control-border-radius);

                            {% set media_type = state_attr(config.entity, 'media_content_type') %}
                            {% if media_type == 'tvshow' %}
                              aspect-ratio: 16 / 9;
                            {% elif media_type == 'movie' %}
                              aspect-ratio: 2 / 3;
                            {% else %}
                              aspect-ratio: 1 / 1;
                            {% endif %}
                          }
                  card_mod:
                    style: |
                      ha-card:before {
                        transform: translate3d(0,0,0);
                        -webkit-transform: translate3d(0,0,0);
                        content: "";
                        position: absolute;
                        height: 100%;
                        width: 100%;

                        filter: blur(150px) saturate(200%);
                        background-size: 100% 100%;
                      }
                      ha-card {
                        transform: translate3d(0,0,0);
                        -webkit-transform: translate3d(0,0,0);
                      }
                       {% if not is_state('media_player.plex_iphone_damien', 'unavailable') %}
                         background-image: url( '{{ state_attr( 'media_player.plex_iphone_damien', "entity_picture" ) }}' );
                         background-position: center;
                         background-repeat: no-repeat;
                         background-size: cover;
                         background-color: rgba(var(--rgb-card-background-color),0.1);
                         background-blend-mode: overlay;
                       {% endif %}  
                       --rgb-state-media-player: var(--rgb-teal);
                       }
                paused:
                  type: custom:stack-in-card
                  cards:
                    - type: custom:mushroom-media-player-card
                      entity: media_player.plex_iphone_damien
                      name: iPhone
                      icon: mdi:play
                      use_media_info: true
                      use_media_artwork: false
                      show_volume_level: false
                      media_controls:
                        - play_pause_stop
                        - previous
                        - next
                      volume_controls:
                        - volume_buttons
                        - volume_set
                      fill_container: false
                      card_mod:
                        style: |
                          mushroom-shape-icon {
                            display: flex;
                            {% set media_type = state_attr(config.entity, 'media_content_type') %}
                            {% if media_type == 'tvshow' %}
                              --card-mod-icon: mdi:television-classic;
                              animation: flicker 1s linear infinite alternate;
                            {% elif media_type == 'movie' %}
                              --card-mod-icon: mdi:movie-roll;
                              animation: spin 2s linear infinite reverse;
                            {% elif media_type == 'music' %}
                              --card-mod-icon: mdi:music;
                              animation: beat 1.3s ease-out infinite both;
                            {% elif media_type == 'playlist' %}
                              --card-mod-icon: mdi:music;
                              animation: beat 1.3s ease-out infinite both;
                            {% else %}
                              --card-mod-icon: mdi:play;
                            {% endif %}

                            {{ 'animation: none;' if not is_state(config.entity, 'playing') }}

                          }
                          @keyframes flicker {
                            0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--rgb-indigo), 1); }
                            32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--rgb-indigo), 0.6); }
                          }
                          @keyframes beat {
                            0%, 60% { --icon-symbol-size: 21px; }
                            5%, 17%, 57% { --icon-symbol-size: 22px; }
                            10%, 20%, 51% { --icon-symbol-size: 23px; }
                            25%, 45% { --icon-symbol-size: 24px; }
                            30%, 39% { --icon-symbol-size: 25px; }
                            33% { --icon-symbol-size: 26px; }
                          }
                          ha-card {
                            --ha-card-border-width: 0;
                          }
                          ha-card:before {
                            transform: translate3d(0,0,0);
                            -webkit-transform: translate3d(0,0,0);
                            content: "";

                            background: url('/local/mushroom/idle_art.png') center no-repeat;
                            {% if not is_state(config.entity, 'unavailable') %}
                              background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                            {% endif %}

                            background-size: contain;
                            margin: 4px 4px 16px;
                            filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
                            border-radius: var(--control-border-radius);

                            {% set media_type = state_attr(config.entity, 'media_content_type') %}
                            {% if media_type == 'tvshow' %}
                              aspect-ratio: 16 / 9;
                            {% elif media_type == 'movie' %}
                              aspect-ratio: 2 / 3;
                            {% else %}
                              aspect-ratio: 1 / 1;
                            {% endif %}
                          }
                  card_mod:
                    style: |
                      ha-card:before {
                        transform: translate3d(0,0,0);
                        -webkit-transform: translate3d(0,0,0);
                        content: "";
                        position: absolute;
                        height: 100%;
                        width: 100%;

                        filter: blur(150px) saturate(200%);
                        background-size: 100% 100%;
                      }
                      ha-card {
                        transform: translate3d(0,0,0);
                        -webkit-transform: translate3d(0,0,0);
                      }
                       {% if not is_state('media_player.plex_iphone_damien', 'unavailable') %}
                         background-image: url( '{{ state_attr( 'media_player.plex_iphone_damien', "entity_picture" ) }}' );
                         background-position: center;
                         background-repeat: no-repeat;
                         background-size: cover;
                         background-color: rgba(var(--rgb-card-background-color),0.1);
                         background-blend-mode: overlay;
                       {% endif %}  
                       --rgb-state-media-player: var(--rgb-teal);
                       }
            - type: custom:state-switch
              entity: media_player.plex_iphone_angelique
              transition: flip
              transition_time: 200
              default: idle
              states:
                idle:
                  type: custom:vertical-stack-in-card
                  cards:
                    - type: custom:mushroom-template-card
                      card_mod:
                        style: |
                          :host {
                            --mush-icon-size: 65px;
                          }
                      primary: Iphone
                      secondary: Angélique
                      icon: |-
                        {% if is_state('person.angelique', 'not_home') %}
                          mdi:cellphone-text
                        {% else %}
                          mdi:cellphone-text
                        {% endif %}
                      icon_color: |-
                        {% if is_state('person.angelique', 'not_home') %}
                          red
                        {% else %}
                          pink
                        {% endif %}
                      layout: vertical
                      entity: device_tracker.dalg_iphone11pm
                      tap_action:
                        action: fire-dom-event
                        haptic: heavy
                        browser_mod:
                          service: browser_mod.popup
                          data:
                            style: |-
                              --popup-border-radius: 15px;
                              --popup-background-color: transparent;
                              --popup-border-color: transparent;
                              --popup-padding-x: 5px;
                            size: normal
                            content:
                              type: custom:stack-in-card
                              cards:
                                - type: custom:mushroom-media-player-card
                                  entity: media_player.plex_iphone_angelique
                                  name: iPhone
                                  icon: mdi:play
                                  use_media_info: true
                                  use_media_artwork: false
                                  show_volume_level: false
                                  media_controls:
                                    - play_pause_stop
                                    - previous
                                    - next
                                  volume_controls:
                                    - volume_buttons
                                    - volume_set
                                  fill_container: false
                                  card_mod:
                                    style: |
                                      mushroom-shape-icon {
                                        display: flex;
                                        {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                        {% if media_type == 'tvshow' %}
                                          --card-mod-icon: mdi:television-classic;
                                          animation: flicker 1s linear infinite alternate;
                                        {% elif media_type == 'movie' %}
                                          --card-mod-icon: mdi:movie-roll;
                                          animation: spin 2s linear infinite reverse;
                                        {% elif media_type == 'music' %}
                                          --card-mod-icon: mdi:music;
                                          animation: beat 1.3s ease-out infinite both;
                                        {% elif media_type == 'playlist' %}
                                          --card-mod-icon: mdi:music;
                                          animation: beat 1.3s ease-out infinite both;
                                        {% else %}
                                          --card-mod-icon: mdi:play;
                                        {% endif %}

                                        {{ 'animation: none;' if not is_state(config.entity, 'playing') }}

                                      }
                                      @keyframes flicker {
                                        0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--rgb-indigo), 1); }
                                        32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--rgb-indigo), 0.6); }
                                      }
                                      @keyframes beat {
                                        0%, 60% { --icon-symbol-size: 21px; }
                                        5%, 17%, 57% { --icon-symbol-size: 22px; }
                                        10%, 20%, 51% { --icon-symbol-size: 23px; }
                                        25%, 45% { --icon-symbol-size: 24px; }
                                        30%, 39% { --icon-symbol-size: 25px; }
                                        33% { --icon-symbol-size: 26px; }
                                      }
                                      ha-card {
                                        --ha-card-border-width: 0;
                                      }
                                      ha-card:before {
                                        transform: translate3d(0,0,0);
                                        -webkit-transform: translate3d(0,0,0);
                                        content: "";

                                        background: url('/local/idle_art.png') center no-repeat;
                                        {% if not is_state(config.entity, 'unavailable') %}
                                          background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                        {% endif %}

                                        background-size: contain;
                                        margin: 4px 4px 16px;
                                        filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
                                        border-radius: var(--control-border-radius);

                                        {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                        {% if media_type == 'tvshow' %}
                                          aspect-ratio: 16 / 9;
                                        {% elif media_type == 'movie' %}
                                          aspect-ratio: 2 / 3;
                                        {% else %}
                                          aspect-ratio: 1 / 1;
                                        {% endif %}
                                      }
                    - type: custom:layout-card
                      layout_type: masonry
                      layout:
                        width: 106
                        max_cols: 1
                        height: auto
                        padding: 0px
                        card_margin: var(--masonry-view-card-margin, -10px 8px 15px)
                      cards: null
                    - type: custom:mushroom-chips-card
                      chips:
                        - type: template
                          entity: sensor.iphone_de_angelique_connection_type
                          icon: >
                            {% if
                            is_state('sensor.iphone_de_angelique_connection_type',
                            'Cellular') %}
                              mdi:signal-cellular-1
                            {% elif
                            is_state('sensor.iphone_de_angelique_connection_type',
                            'Wi-Fi') %}
                              mdi:wifi
                            {% else %}
                              mdi:wifi-off
                            {% endif %}
                          icon_color: >
                            {% if
                            is_state('sensor.iphone_de_angelique_connection_type',
                            'Cellular') %}
                              orange
                            {% elif
                            is_state('sensor.iphone_de_angelique_connection_type',
                            'Wi-Fi') %}
                              pink
                            {% else %}
                              grey
                            {% endif %}
                          content_info: none
                          tap_action:
                            action: more-info
                          card_mod:
                            style: |
                              ha-card {
                                --chip-border-width: 0;
                        - type: template
                          entity: sensor.iphone_de_angelique_battery_level
                          content: '{{ states(entity) }}%'
                          icon: |2
                             {% set bl = states('sensor.iphone_de_angelique_battery_level') | int %}
                             {% if bl < 10 %} mdi:battery-outline
                             {% elif bl < 20 %} mdi:battery-10
                             {% elif bl < 30 %} mdi:battery-20
                             {% elif bl < 40 %} mdi:battery-30
                             {% elif bl < 50 %} mdi:battery-40
                             {% elif bl < 60 %} mdi:battery-50
                             {% elif bl < 70 %} mdi:battery-60
                             {% elif bl < 80 %} mdi:battery-70
                             {% elif bl < 90 %} mdi:battery-80
                             {% elif bl < 100 %} mdi:battery-90
                             {% elif bl == 100 %} mdi:battery
                             {% else %} mdi:battery-unknown
                             {% endif %}
                          icon_color: |2-
                              {% set bl = states('sensor.iphone_de_angelique_battery_level') | int %}
                              {% if bl < 10 %} red
                              {% elif bl < 20 %} red
                              {% elif bl < 30 %} red
                              {% elif bl < 40 %} orange
                              {% elif bl < 50 %} orange
                              {% elif bl < 60 %} pink
                              {% elif bl < 70 %} pink
                              {% elif bl < 80 %} pink
                              {% elif bl < 90 %} pink
                              {% elif bl < 100 %} pink
                              {% elif bl == 100 %} green
                              {% else %} grey
                              {% endif %}
                          tap_action:
                            action: more-info
                          card_mod:
                            style: |
                              ha-card {
                                --chip-border-width: 0;
                        - type: template
                          entity: sensor.iphone_de_angelique_battery_state
                          icon_color: >-
                            {% set
                            state=states('sensor.iphone_de_angelique_battery_state')
                            %}

                            {% if state=='Charging' %}
                              pink
                            {% elif state=='Not Charging' %}
                              
                            {% endif %}
                          icon: >-
                            {% set
                            state=states('sensor.iphone_de_angelique_battery_state')
                            %}

                            {% if state=='Charging' %}
                              mdi:power-plug
                            {% elif state=='Not Charging' %}
                              mdi:power-plug-off
                            {% endif %}
                          content_info: none
                          tap_action:
                            action: more-info
                          card_mod:
                            style: |
                              ha-card {
                                --chip-border-width: 0;
                        - type: template
                          entity: sensor.iphone_de_angelique_geocoded_location
                          icon_color: |-
                            {% set state=states('person.angelique') %}
                            {% if state=='home' %}
                              pink
                            {% elif state=='not_home' %}
                              red
                            {% endif %}
                          icon: mdi:map-marker
                          content: >-
                            {{
                            state_attr("sensor.iphone_de_angelique_geocoded_location","Locality")
                            }}
                          tap_action:
                            action: fire-dom-event
                            haptic: heavy
                            browser_mod:
                              service: browser_mod.popup
                              data:
                                style: |-
                                  --popup-border-radius: 15px;
                                  --popup-border-color: transparent;
                                  --popup-padding-x: 5px;
                                size: normal
                                content:
                                  type: map
                                  default_zoom: 15
                                  entities:
                                    - entity: device_tracker.iphone_de_angelique
                                      card_mod:
                                        style: |
                                          ha-card {
                                            --chip-border-width: 0;
                      alignment: center
                      card_mod:
                        style:
                          style: |
                            ha-card {
                              margin: -2px 0px 12px;
                              --chip-background: rgba(var(--rgb-disabled), 0.15);
                              --ha-card-box-shadow: none;
                              --chip-border-radius: 12px;
                              --chip-height: 40px;
                              --chip-padding: 12px;
                              --chip-spacing: 6px;
                            }
                    - type: custom:layout-card
                      layout_type: masonry
                      layout:
                        max_cols: 1
                        height: auto
                        width: 150
                        padding: 0px
                        card_margin: var(--masonry-view-card-margin, -10px 8px 15px)
                      cards:
                        - type: custom:mini-graph-card
                          entities:
                            - entity: sensor.iphone_de_angelique_battery_level
                              name: Batterie
                              color: pink
                          hours_to_show: 48
                          line_width: 2
                          animate: true
                          show:
                            name: false
                            icon: false
                            state: false
                            legend: false
                            fill: fade
                          card_mod:
                            style: |
                              ha-card {
                                background: none;
                                box-shadow: none;
                                --ha-card-border-width: 0;
                              }
                      picture: ''
                playing:
                  type: custom:stack-in-card
                  cards:
                    - type: custom:mushroom-media-player-card
                      entity: media_player.plex_iphone_angelique
                      name: iPhone
                      icon: mdi:play
                      use_media_info: true
                      use_media_artwork: false
                      show_volume_level: false
                      media_controls:
                        - play_pause_stop
                        - previous
                        - next
                      volume_controls:
                        - volume_buttons
                        - volume_set
                      fill_container: false
                      card_mod:
                        style: |
                          mushroom-shape-icon {
                            display: flex;
                            {% set media_type = state_attr(config.entity, 'media_content_type') %}
                            {% if media_type == 'tvshow' %}
                              --card-mod-icon: mdi:television-classic;
                              animation: flicker 1s linear infinite alternate;
                            {% elif media_type == 'movie' %}
                              --card-mod-icon: mdi:movie-roll;
                              animation: spin 2s linear infinite reverse;
                            {% elif media_type == 'music' %}
                              --card-mod-icon: mdi:music;
                              animation: beat 1.3s ease-out infinite both;
                            {% elif media_type == 'playlist' %}
                              --card-mod-icon: mdi:music;
                              animation: beat 1.3s ease-out infinite both;
                            {% else %}
                              --card-mod-icon: mdi:play;
                            {% endif %}

                            {{ 'animation: none;' if not is_state(config.entity, 'playing') }}

                          }
                          @keyframes flicker {
                            0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--rgb-indigo), 1); }
                            32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--rgb-indigo), 0.6); }
                          }
                          @keyframes beat {
                            0%, 60% { --icon-symbol-size: 21px; }
                            5%, 17%, 57% { --icon-symbol-size: 22px; }
                            10%, 20%, 51% { --icon-symbol-size: 23px; }
                            25%, 45% { --icon-symbol-size: 24px; }
                            30%, 39% { --icon-symbol-size: 25px; }
                            33% { --icon-symbol-size: 26px; }
                          }
                          ha-card {
                            --ha-card-border-width: 0;
                          }
                          ha-card:before {
                            transform: translate3d(0,0,0);
                            -webkit-transform: translate3d(0,0,0);
                            content: "";

                            background: url('/local/mushroom/idle_art.png') center no-repeat;
                            {% if not is_state(config.entity, 'unavailable') %}
                              background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                            {% endif %}

                            background-size: contain;
                            margin: 4px 4px 16px;
                            filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
                            border-radius: var(--control-border-radius);

                            {% set media_type = state_attr(config.entity, 'media_content_type') %}
                            {% if media_type == 'tvshow' %}
                              aspect-ratio: 16 / 9;
                            {% elif media_type == 'movie' %}
                              aspect-ratio: 2 / 3;
                            {% else %}
                              aspect-ratio: 1 / 1;
                            {% endif %}
                          }
                  card_mod:
                    style: |
                      ha-card:before {
                        transform: translate3d(0,0,0);
                        -webkit-transform: translate3d(0,0,0);
                        content: "";
                        position: absolute;
                        height: 100%;
                        width: 100%;

                        filter: blur(150px) saturate(200%);
                        background-size: 100% 100%;
                      }
                      ha-card {
                        transform: translate3d(0,0,0);
                        -webkit-transform: translate3d(0,0,0);
                      }
                       {% if not is_state('media_player.plex_iphone_angelique', 'unavailable') %}
                         background-image: url( '{{ state_attr( 'media_player.plex_iphone_angelique', "entity_picture" ) }}' );
                         background-position: center;
                         background-repeat: no-repeat;
                         background-size: cover;
                         background-color: rgba(var(--rgb-card-background-color),0.1);
                         background-blend-mode: overlay;
                       {% endif %}  
                       --rgb-state-media-player: var(--rgb-teal);
                       }
      - type: custom:local-conditional-card
        default: hide
        id: device
        card:
          type: horizontal-stack
          title: Tablette
          cards:
            - type: custom:state-switch
              entity: media_player.plex_xiaomi
              transition: flip
              transition_time: 200
              default: idle
              states:
                idle:
                  type: custom:vertical-stack-in-card
                  cards:
                    - type: custom:mushroom-template-card
                      card_mod:
                        style: |
                          :host {
                            --mush-icon-size: 70px;
                          }
                      primary: Xiaomi
                      secondary: Pad 5
                      icon: >-
                        {% if is_state('device_tracker.dalg_xiaomi', 'not_home')
                        %}
                          mdi:tablet
                        {% else %}
                          mdi:tablet
                        {% endif %}
                      icon_color: >-
                        {% if is_state('device_tracker.dalg_xiaomi', 'not_home')
                        %}
                          red
                        {% else %}
                          green
                        {% endif %}
                      layout: vertical
                      entity: device_tracker.dalg_xiaomi
                      tap_action:
                        action: fire-dom-event
                        haptic: heavy
                        browser_mod:
                          service: browser_mod.popup
                          data:
                            style: |-
                              --popup-border-radius: 15px;
                              --popup-background-color: transparent;
                              --popup-border-color: transparent;
                              --popup-padding-x: 5px;
                            size: normal
                            content:
                              type: custom:stack-in-card
                              cards:
                                - type: custom:mushroom-media-player-card
                                  entity: media_player.plex_xiaomi
                                  name: Xiaomi
                                  icon: mdi:play
                                  use_media_info: true
                                  use_media_artwork: false
                                  show_volume_level: false
                                  media_controls:
                                    - play_pause_stop
                                    - previous
                                    - next
                                  volume_controls:
                                    - volume_buttons
                                    - volume_set
                                  fill_container: false
                                  card_mod:
                                    style: |
                                      mushroom-shape-icon {
                                        display: flex;
                                        {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                        {% if media_type == 'tvshow' %}
                                          --card-mod-icon: mdi:television-classic;
                                          animation: flicker 1s linear infinite alternate;
                                        {% elif media_type == 'movie' %}
                                          --card-mod-icon: mdi:movie-roll;
                                          animation: spin 2s linear infinite reverse;
                                        {% elif media_type == 'music' %}
                                          --card-mod-icon: mdi:music;
                                          animation: beat 1.3s ease-out infinite both;
                                        {% elif media_type == 'playlist' %}
                                          --card-mod-icon: mdi:music;
                                          animation: beat 1.3s ease-out infinite both;
                                        {% else %}
                                          --card-mod-icon: mdi:play;
                                        {% endif %}

                                        {{ 'animation: none;' if not is_state(config.entity, 'playing') }}

                                      }
                                      @keyframes flicker {
                                        0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--rgb-indigo), 1); }
                                        32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--rgb-indigo), 0.6); }
                                      }
                                      @keyframes beat {
                                        0%, 60% { --icon-symbol-size: 21px; }
                                        5%, 17%, 57% { --icon-symbol-size: 22px; }
                                        10%, 20%, 51% { --icon-symbol-size: 23px; }
                                        25%, 45% { --icon-symbol-size: 24px; }
                                        30%, 39% { --icon-symbol-size: 25px; }
                                        33% { --icon-symbol-size: 26px; }
                                      }
                                      ha-card {
                                        --ha-card-border-width: 0;
                                      }
                                      ha-card:before {
                                        transform: translate3d(0,0,0);
                                        -webkit-transform: translate3d(0,0,0);
                                        content: "";

                                        background: url('/local/idle_art.png') center no-repeat;
                                        {% if not is_state(config.entity, 'unavailable') %}
                                          background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                        {% endif %}

                                        background-size: contain;
                                        margin: 4px 4px 16px;
                                        filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
                                        border-radius: var(--control-border-radius);

                                        {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                        {% if media_type == 'tvshow' %}
                                          aspect-ratio: 16 / 9;
                                        {% elif media_type == 'movie' %}
                                          aspect-ratio: 2 / 3;
                                        {% else %}
                                          aspect-ratio: 1 / 1;
                                        {% endif %}
                                      }
                                - type: conditional
                                  conditions:
                                    - entity: media_player.plex_xiaomi
                                      state_not: 'off'
                                    - entity: media_player.plex_xiaomi
                                      state_not: idle
                                    - entity: media_player.plex_xiaomi
                                      state_not: unavailable
                                  card:
                                    entity: media_player.plex_xiaomi
                                    hide:
                                      icon: true
                                      name: true
                                      runtime: true
                                      source: true
                                      power: true
                                      state_label: true
                                      volume: true
                                      info: true
                                      progress: false
                                      controls: true
                                    more_info: false
                                    type: custom:mini-media-player
                                    toggle_power: false
                                    group: true
                                    card_mod:
                                      style:
                                        mmp-progress$: |
                                          paper-progress {
                                            {{ '--paper-progress-container-color: rgba(var(--rgb-indigo-color), 0.2) !important;' if is_state(config.entity, 'playing') }}
                                          }
                                        .: |
                                          ha-card {
                                            margin: 0px 12px 12px;
                                            --mmp-progress-height: 12px !important;
                                            height: var(--mmp-progress-height);
                                            --mmp-accent-color: rgb(var(--rgb-indigo-color));
                                            --mmp-border-radius: 12px !important;
                                            --ha-card-border-width: 0;
                                          }
                              card_mod:
                                style: |
                                  ha-card:before {
                                    transform: translate3d(0,0,0);
                                    -webkit-transform: translate3d(0,0,0);
                                    content: "";
                                    position: absolute;
                                    height: 100%;
                                    width: 100%;

                                    background: url('/local/idle_art.png') center no-repeat;
                                    {% if not is_state('media_player.plex_xiaomi', 'unavailable') %}
                                      background: url( '{{ state_attr('media_player.plex_xiaomi', "entity_picture") }}' ) center no-repeat;
                                    {% endif %}

                                    filter: blur(150px) saturate(200%);
                                    background-size: 100% 100%;
                                  }
                                  ha-card {
                                    transform: translate3d(0,0,0);
                                    -webkit-transform: translate3d(0,0,0);
                                  }
                    - type: custom:layout-card
                      layout_type: masonry
                      layout:
                        width: 106
                        max_cols: 1
                        height: auto
                        padding: 0px
                        card_margin: var(--masonry-view-card-margin, -10px 8px 15px)
                      cards: null
                    - type: custom:mushroom-chips-card
                      chips:
                        - type: template
                          entity: sensor.dalg_xiaomi_network_type
                          icon: >
                            {% if is_state('sensor.dalg_xiaomi_network_type',
                            'unknown') %}
                              mdi:wifi-off
                            {% elif is_state('sensor.dalg_xiaomi_network_type',
                            'wifi') %}
                              mdi:wifi
                            {% else %}
                              mdi:wifi-off
                            {% endif %}
                          icon_color: >
                            {% if is_state('sensor.dalg_xiaomi_network_type',
                            'unknown') %}
                              orange
                            {% elif is_state('sensor.dalg_xiaomi_network_type',
                            'wifi') %}
                              green
                            {% else %}
                              grey
                            {% endif %}
                          content: >
                            {% if is_state('sensor.dalg_xiaomi_network_type',
                            'unknown') %}
                              No WIFI
                            {% elif is_state('sensor.dalg_xiaomi_network_type',
                            'wifi') %}
                              {{ states('sensor.dalg_xiaomi_wifi_connection') }}
                            {% else %}
                              
                            {% endif %}
                          tap_action:
                            action: more-info
                          card_mod:
                            style: |
                              ha-card {
                                --chip-border-width: 0;
                        - type: template
                          entity: sensor.dalg_xiaomi_battery_level
                          content: '{{ states(entity) }}%'
                          icon: |2
                             {% set bl = states('sensor.dalg_xiaomi_battery_level') | int %}
                             {% if bl < 10 %} mdi:battery-outline
                             {% elif bl < 20 %} mdi:battery-10
                             {% elif bl < 30 %} mdi:battery-20
                             {% elif bl < 40 %} mdi:battery-30
                             {% elif bl < 50 %} mdi:battery-40
                             {% elif bl < 60 %} mdi:battery-50
                             {% elif bl < 70 %} mdi:battery-60
                             {% elif bl < 80 %} mdi:battery-70
                             {% elif bl < 90 %} mdi:battery-80
                             {% elif bl < 100 %} mdi:battery-90
                             {% elif bl == 100 %} mdi:battery
                             {% else %} mdi:battery-unknown
                             {% endif %}
                          icon_color: |2-
                              {% set bl = states('sensor.dalg_xiaomi_battery_level') | int %}
                              {% if bl < 10 %} red
                              {% elif bl < 20 %} red
                              {% elif bl < 30 %} red
                              {% elif bl < 40 %} orange
                              {% elif bl < 50 %} orange
                              {% elif bl < 60 %} green
                              {% elif bl < 70 %} green
                              {% elif bl < 80 %} green
                              {% elif bl < 90 %} green
                              {% elif bl < 100 %} green
                              {% elif bl == 100 %} green
                              {% else %} grey
                              {% endif %}
                          tap_action:
                            action: more-info
                          card_mod:
                            style: |
                              ha-card {
                                --chip-border-width: 0;
                        - type: template
                          entity: binary_sensor.dalg_xiaomi_is_charging
                          icon_color: >-
                            {% set
                            state=states('binary_sensor.dalg_xiaomi_is_charging')
                            %}

                            {% if state=='on' %}
                              green
                            {% elif state=='off' %}
                              
                            {% endif %}
                          icon: >-
                            {% set
                            state=states('binary_sensor.dalg_xiaomi_is_charging')
                            %}

                            {% if state=='on' %}
                              mdi:power-plug
                            {% elif state=='off' %}
                              mdi:power-plug-off
                            {% endif %}
                          content_info: none
                          tap_action:
                            action: more-info
                          card_mod:
                            style: |
                              ha-card {
                                --chip-border-width: 0;
                      alignment: center
                      card_mod:
                        style:
                          style: |
                            ha-card {
                              margin: -2px 0px 12px;
                              --chip-background: rgba(var(--rgb-disabled), 0.15);
                              --ha-card-box-shadow: none;
                              --chip-border-radius: 12px;
                              --chip-height: 35px;
                              --chip-padding: 12px;
                              --chip-spacing: 6px;
                            }
                    - type: custom:layout-card
                      layout_type: masonry
                      layout:
                        max_cols: 1
                        height: auto
                        padding: 0px
                        width: 150
                        card_margin: var(--masonry-view-card-margin, -10px 8px 15px)
                      cards:
                        - type: custom:mini-graph-card
                          entities:
                            - entity: sensor.dalg_xiaomi_battery_level
                              name: Batterie
                              color: green
                          hours_to_show: 48
                          line_width: 2
                          animate: true
                          show:
                            name: false
                            icon: false
                            state: false
                            legend: false
                            fill: fade
                          card_mod:
                            style: |
                              ha-card {
                                background: none;
                                box-shadow: none;
                                --ha-card-border-width: 0;
                              }
                      picture: ''
                      card_mod:
                        style: |
                          ha-card {
                            {% if not is_state('media_player.plex_xiaomi', 'unavailable') %}
                              background-image: url( '{{ state_attr( 'media_player.plex_xiaomi', "entity_picture" ) }}' );
                              background-position: center;
                              background-repeat: no-repeat;
                              background-size: cover;
                              background-color: rgba(var(--rgb-card-background-color),0.1);
                              background-blend-mode: overlay;
                            {% endif %}  
                            --rgb-state-media-player: var(--rgb-teal);
                          }
                playing:
                  type: custom:stack-in-card
                  cards:
                    - type: custom:mushroom-media-player-card
                      entity: media_player.plex_xiaomi
                      name: iPhone
                      icon: mdi:play
                      use_media_info: true
                      use_media_artwork: false
                      show_volume_level: false
                      media_controls:
                        - play_pause_stop
                        - previous
                        - next
                      volume_controls:
                        - volume_buttons
                        - volume_set
                      fill_container: false
                      card_mod:
                        style: |
                          mushroom-shape-icon {
                            display: flex;
                            {% set media_type = state_attr(config.entity, 'media_content_type') %}
                            {% if media_type == 'tvshow' %}
                              --card-mod-icon: mdi:television-classic;
                              animation: flicker 1s linear infinite alternate;
                            {% elif media_type == 'movie' %}
                              --card-mod-icon: mdi:movie-roll;
                              animation: spin 2s linear infinite reverse;
                            {% elif media_type == 'music' %}
                              --card-mod-icon: mdi:music;
                              animation: beat 1.3s ease-out infinite both;
                            {% elif media_type == 'playlist' %}
                              --card-mod-icon: mdi:music;
                              animation: beat 1.3s ease-out infinite both;
                            {% else %}
                              --card-mod-icon: mdi:play;
                            {% endif %}

                            {{ 'animation: none;' if not is_state(config.entity, 'playing') }}

                          }
                          @keyframes flicker {
                            0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--rgb-indigo), 1); }
                            32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--rgb-indigo), 0.6); }
                          }
                          @keyframes beat {
                            0%, 60% { --icon-symbol-size: 21px; }
                            5%, 17%, 57% { --icon-symbol-size: 22px; }
                            10%, 20%, 51% { --icon-symbol-size: 23px; }
                            25%, 45% { --icon-symbol-size: 24px; }
                            30%, 39% { --icon-symbol-size: 25px; }
                            33% { --icon-symbol-size: 26px; }
                          }
                          ha-card {
                            --ha-card-border-width: 0;
                          }
                          ha-card:before {
                            transform: translate3d(0,0,0);
                            -webkit-transform: translate3d(0,0,0);
                            content: "";

                            background: url('/local/mushroom/idle_art.png') center no-repeat;
                            {% if not is_state(config.entity, 'unavailable') %}
                              background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                            {% endif %}

                            background-size: contain;
                            margin: 4px 4px 16px;
                            filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
                            border-radius: var(--control-border-radius);

                            {% set media_type = state_attr(config.entity, 'media_content_type') %}
                            {% if media_type == 'tvshow' %}
                              aspect-ratio: 16 / 9;
                            {% elif media_type == 'movie' %}
                              aspect-ratio: 2 / 3;
                            {% else %}
                              aspect-ratio: 1 / 1;
                            {% endif %}
                          }
                    - type: conditional
                      conditions:
                        - entity: media_player.plex_xiaomi
                          state_not: unavailable
                      card:
                        entity: media_player.plex_xiaomi
                        hide:
                          icon: true
                          name: true
                          runtime: true
                          source: true
                          power: true
                          state_label: true
                          volume: true
                          info: true
                          progress: false
                          controls: true
                        more_info: false
                        type: custom:mini-media-player
                        toggle_power: false
                        group: true
                        card_mod:
                          style:
                            mmp-progress$: |
                              paper-progress {
                                {{ '--paper-progress-container-color: rgba(var(--rgb-indigo-color), 0.2) !important;' if is_state(config.entity, 'playing') }}
                              }
                            .: |
                              ha-card {
                                margin: 0px 12px 12px;
                                --mmp-progress-height: 12px !important;
                                height: var(--mmp-progress-height);
                                --mmp-accent-color: rgb(var(--rgb-indigo-color));
                                --mmp-border-radius: 12px !important;
                                --ha-card-border-width: 0;
                              }
                  card_mod:
                    style: |
                      ha-card:before {
                        transform: translate3d(0,0,0);
                        -webkit-transform: translate3d(0,0,0);
                        content: "";
                        position: absolute;
                        height: 100%;
                        width: 100%;

                        background: url('/local/mushroom/idle_art.png') center no-repeat;
                        {% if not is_state('media_player.plex_xiaomi', 'unavailable') %}
                          background: url( '{{ state_attr('media_player.plex_xiaomi', "entity_picture") }}' ) center no-repeat;
                        {% endif %}

                        filter: blur(150px) saturate(200%);
                        background-size: 100% 100%;
                      }
                      ha-card {
                        transform: translate3d(0,0,0);
                        -webkit-transform: translate3d(0,0,0);
                      }
            - type: custom:state-switch
              entity: media_player.plex_ipad
              transition: flip
              transition_time: 200
              default: idle
              states:
                idle:
                  type: custom:vertical-stack-in-card
                  cards:
                    - type: custom:mushroom-template-card
                      card_mod:
                        style: |
                          :host {
                            --mush-icon-size: 70px;
                          }
                      primary: Apple
                      secondary: iPad
                      icon: >-
                        {% if is_state('device_tracker.ipad_de_angelique',
                        'not_home') %}
                          mdi:tablet
                        {% else %}
                          mdi:tablet
                        {% endif %}
                      icon_color: >-
                        {% if is_state('device_tracker.ipad_de_angelique',
                        'not_home') %}
                          red
                        {% else %}
                          green
                        {% endif %}
                      layout: vertical
                      entity: device_tracker.ipad_de_angelique
                      tap_action:
                        action: fire-dom-event
                        haptic: heavy
                        browser_mod:
                          service: browser_mod.popup
                          data:
                            style: |-
                              --popup-border-radius: 15px;
                              --popup-background-color: transparent;
                              --popup-border-color: transparent;
                              --popup-padding-x: 5px;
                            size: normal
                            content:
                              type: custom:stack-in-card
                              cards:
                                - type: custom:mushroom-media-player-card
                                  entity: media_player.plex_ipad
                                  name: iPad
                                  icon: mdi:play
                                  use_media_info: true
                                  use_media_artwork: false
                                  show_volume_level: false
                                  media_controls:
                                    - play_pause_stop
                                    - previous
                                    - next
                                  volume_controls:
                                    - volume_buttons
                                    - volume_set
                                  fill_container: false
                                  card_mod:
                                    style: |
                                      mushroom-shape-icon {
                                        display: flex;
                                        {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                        {% if media_type == 'tvshow' %}
                                          --card-mod-icon: mdi:television-classic;
                                          animation: flicker 1s linear infinite alternate;
                                        {% elif media_type == 'movie' %}
                                          --card-mod-icon: mdi:movie-roll;
                                          animation: spin 2s linear infinite reverse;
                                        {% elif media_type == 'music' %}
                                          --card-mod-icon: mdi:music;
                                          animation: beat 1.3s ease-out infinite both;
                                        {% elif media_type == 'playlist' %}
                                          --card-mod-icon: mdi:music;
                                          animation: beat 1.3s ease-out infinite both;
                                        {% else %}
                                          --card-mod-icon: mdi:play;
                                        {% endif %}

                                        {{ 'animation: none;' if not is_state(config.entity, 'playing') }}

                                      }
                                      @keyframes flicker {
                                        0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--rgb-indigo), 1); }
                                        32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--rgb-indigo), 0.6); }
                                      }
                                      @keyframes beat {
                                        0%, 60% { --icon-symbol-size: 21px; }
                                        5%, 17%, 57% { --icon-symbol-size: 22px; }
                                        10%, 20%, 51% { --icon-symbol-size: 23px; }
                                        25%, 45% { --icon-symbol-size: 24px; }
                                        30%, 39% { --icon-symbol-size: 25px; }
                                        33% { --icon-symbol-size: 26px; }
                                      }
                                      ha-card {
                                        --ha-card-border-width: 0;
                                      }
                                      ha-card:before {
                                        transform: translate3d(0,0,0);
                                        -webkit-transform: translate3d(0,0,0);
                                        content: "";

                                        background: url('/local/idle_art.png') center no-repeat;
                                        {% if not is_state(config.entity, 'unavailable') %}
                                          background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                        {% endif %}

                                        background-size: contain;
                                        margin: 4px 4px 16px;
                                        filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
                                        border-radius: var(--control-border-radius);

                                        {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                        {% if media_type == 'tvshow' %}
                                          aspect-ratio: 16 / 9;
                                        {% elif media_type == 'movie' %}
                                          aspect-ratio: 2 / 3;
                                        {% else %}
                                          aspect-ratio: 1 / 1;
                                        {% endif %}
                                      }
                                - type: conditional
                                  conditions:
                                    - entity: media_player.plex_ipad
                                      state_not: 'off'
                                    - entity: media_player.plex_ipad
                                      state_not: idle
                                    - entity: media_player.plex_ipad
                                      state_not: unavailable
                                  card:
                                    entity: media_player.plex_ipad
                                    hide:
                                      icon: true
                                      name: true
                                      runtime: true
                                      source: true
                                      power: true
                                      state_label: true
                                      volume: true
                                      info: true
                                      progress: false
                                      controls: true
                                    more_info: false
                                    type: custom:mini-media-player
                                    toggle_power: false
                                    group: true
                                    card_mod:
                                      style:
                                        mmp-progress$: |
                                          paper-progress {
                                            {{ '--paper-progress-container-color: rgba(var(--rgb-indigo-color), 0.2) !important;' if is_state(config.entity, 'playing') }}
                                          }
                                        .: |
                                          ha-card {
                                            margin: 0px 12px 12px;
                                            --mmp-progress-height: 12px !important;
                                            height: var(--mmp-progress-height);
                                            --mmp-accent-color: rgb(var(--rgb-indigo-color));
                                            --mmp-border-radius: 12px !important;
                                            --ha-card-border-width: 0;
                                          }
                              card_mod:
                                style: |
                                  ha-card:before {
                                    transform: translate3d(0,0,0);
                                    -webkit-transform: translate3d(0,0,0);
                                    content: "";
                                    position: absolute;
                                    height: 100%;
                                    width: 100%;

                                    background: url('/local/idle_art.png') center no-repeat;
                                    {% if not is_state('media_player.plex_ipad', 'unavailable') %}
                                      background: url( '{{ state_attr('media_player.plex_ipad', "entity_picture") }}' ) center no-repeat;
                                    {% endif %}

                                    filter: blur(150px) saturate(200%);
                                    background-size: 100% 100%;
                                  }
                                  ha-card {
                                    transform: translate3d(0,0,0);
                                    -webkit-transform: translate3d(0,0,0);
                                  }
                    - type: custom:layout-card
                      layout_type: masonry
                      layout:
                        width: 106
                        max_cols: 1
                        height: auto
                        padding: 0px
                        card_margin: var(--masonry-view-card-margin, -10px 8px 15px)
                      cards: null
                    - type: custom:mushroom-chips-card
                      chips:
                        - type: template
                          entity: sensor.ipad_de_angeliques_connection_type
                          icon: >
                            {% if
                            is_state('sensor.ipad_de_angeliques_connection_type',
                            'unknown') %}
                              mdi:wifi-off
                            {% elif
                            is_state('sensor.ipad_de_angeliques_connection_type',
                            'Wi-Fi') %}
                              mdi:wifi
                            {% else %}
                              mdi:wifi-off
                            {% endif %}
                          icon_color: >
                            {% if
                            is_state('sensor.ipad_de_angeliques_connection_type',
                            'unknown') %}
                              orange
                            {% elif
                            is_state('sensor.ipad_de_angeliques_connection_type',
                            'Wi-Fi') %}
                              green
                            {% else %}
                              grey
                            {% endif %}
                          content: >
                            {% if
                            is_state('sensor.ipad_de_angeliques_connection_type',
                            'unknown') %}
                              No WIFI
                            {% elif
                            is_state('sensor.ipad_de_angeliques_connection_type',
                            'Wi-Fi') %}
                              {{ states('sensor.ipad_de_angeliques_ssid') }}
                            {% else %}
                              
                            {% endif %}
                          tap_action:
                            action: more-info
                          card_mod:
                            style: |
                              ha-card {
                                --chip-border-width: 0;
                        - type: template
                          entity: sensor.ipad_de_angeliques_battery_level
                          content: '{{ states(entity) }}%'
                          icon: |2
                             {% set bl = states('sensor.ipad_de_angeliques_battery_level') | int %}
                             {% if bl < 10 %} mdi:battery-outline
                             {% elif bl < 20 %} mdi:battery-10
                             {% elif bl < 30 %} mdi:battery-20
                             {% elif bl < 40 %} mdi:battery-30
                             {% elif bl < 50 %} mdi:battery-40
                             {% elif bl < 60 %} mdi:battery-50
                             {% elif bl < 70 %} mdi:battery-60
                             {% elif bl < 80 %} mdi:battery-70
                             {% elif bl < 90 %} mdi:battery-80
                             {% elif bl < 100 %} mdi:battery-90
                             {% elif bl == 100 %} mdi:battery
                             {% else %} mdi:battery-unknown
                             {% endif %}
                          icon_color: |2-
                              {% set bl = states('sensor.ipad_de_angeliques_battery_level') | int %}
                              {% if bl < 10 %} red
                              {% elif bl < 20 %} red
                              {% elif bl < 30 %} red
                              {% elif bl < 40 %} orange
                              {% elif bl < 50 %} orange
                              {% elif bl < 60 %} green
                              {% elif bl < 70 %} green
                              {% elif bl < 80 %} green
                              {% elif bl < 90 %} green
                              {% elif bl < 100 %} green
                              {% elif bl == 100 %} green
                              {% else %} grey
                              {% endif %}
                          tap_action:
                            action: more-info
                          card_mod:
                            style: |
                              ha-card {
                                --chip-border-width: 0;
                        - type: template
                          entity: sensor.ipad_de_angeliques_battery_state
                          icon_color: >-
                            {% set
                            state=states('sensor.ipad_de_angeliques_battery_state')
                            %}

                            {% if state=='charging' %}
                              green
                            {% elif state=='Not Charging' %}
                              
                            {% endif %}
                          icon: >-
                            {% set
                            state=states('sensor.ipad_de_angeliques_battery_state')
                            %}

                            {% if state=='charging' %}
                              mdi:power-plug
                            {% elif state=='Not Charging' %}
                              mdi:power-plug-off
                            {% endif %}
                          content_info: none
                          tap_action:
                            action: more-info
                          card_mod:
                            style: |
                              ha-card {
                                --chip-border-width: 0;
                      alignment: center
                      card_mod:
                        style:
                          style: |
                            ha-card {
                              margin: -2px 0px 12px;
                              --chip-background: rgba(var(--rgb-disabled), 0.15);
                              --ha-card-box-shadow: none;
                              --chip-border-radius: 12px;
                              --chip-height: 35px;
                              --chip-padding: 12px;
                              --chip-spacing: 6px;
                            }
                    - type: custom:layout-card
                      layout_type: masonry
                      layout:
                        max_cols: 1
                        height: auto
                        padding: 0px
                        width: 150
                        card_margin: var(--masonry-view-card-margin, -10px 8px 15px)
                      cards:
                        - type: custom:mini-graph-card
                          entities:
                            - entity: sensor.ipad_de_angeliques_battery_level
                              name: Batterie
                              color: green
                          hours_to_show: 48
                          line_width: 2
                          animate: true
                          show:
                            name: false
                            icon: false
                            state: false
                            legend: false
                            fill: fade
                          card_mod:
                            style: |
                              ha-card {
                                background: none;
                                box-shadow: none;
                                --ha-card-border-width: 0;
                              }
                      picture: ''
                      card_mod:
                        style: |
                          ha-card {
                            {% if not is_state('media_player.plex_ipad', 'unavailable') %}
                              background-image: url( '{{ state_attr( 'media_player.plex_ipad', "entity_picture" ) }}' );
                              background-position: center;
                              background-repeat: no-repeat;
                              background-size: cover;
                              background-color: rgba(var(--rgb-card-background-color),0.1);
                              background-blend-mode: overlay;
                            {% endif %}  
                            --rgb-state-media-player: var(--rgb-teal);
                          }
                playing:
                  type: custom:stack-in-card
                  cards:
                    - type: custom:mushroom-media-player-card
                      entity: media_player.plex_ipad
                      name: iPhone
                      icon: mdi:play
                      use_media_info: true
                      use_media_artwork: false
                      show_volume_level: false
                      media_controls:
                        - play_pause_stop
                        - previous
                        - next
                      volume_controls:
                        - volume_buttons
                        - volume_set
                      fill_container: false
                      card_mod:
                        style: |
                          mushroom-shape-icon {
                            display: flex;
                            {% set media_type = state_attr(config.entity, 'media_content_type') %}
                            {% if media_type == 'tvshow' %}
                              --card-mod-icon: mdi:television-classic;
                              animation: flicker 1s linear infinite alternate;
                            {% elif media_type == 'movie' %}
                              --card-mod-icon: mdi:movie-roll;
                              animation: spin 2s linear infinite reverse;
                            {% elif media_type == 'music' %}
                              --card-mod-icon: mdi:music;
                              animation: beat 1.3s ease-out infinite both;
                            {% elif media_type == 'playlist' %}
                              --card-mod-icon: mdi:music;
                              animation: beat 1.3s ease-out infinite both;
                            {% else %}
                              --card-mod-icon: mdi:play;
                            {% endif %}

                            {{ 'animation: none;' if not is_state(config.entity, 'playing') }}

                          }
                          @keyframes flicker {
                            0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--rgb-indigo), 1); }
                            32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--rgb-indigo), 0.6); }
                          }
                          @keyframes beat {
                            0%, 60% { --icon-symbol-size: 21px; }
                            5%, 17%, 57% { --icon-symbol-size: 22px; }
                            10%, 20%, 51% { --icon-symbol-size: 23px; }
                            25%, 45% { --icon-symbol-size: 24px; }
                            30%, 39% { --icon-symbol-size: 25px; }
                            33% { --icon-symbol-size: 26px; }
                          }
                          ha-card {
                            --ha-card-border-width: 0;
                          }
                          ha-card:before {
                            transform: translate3d(0,0,0);
                            -webkit-transform: translate3d(0,0,0);
                            content: "";

                            background: url('/local/mushroom/idle_art.png') center no-repeat;
                            {% if not is_state(config.entity, 'unavailable') %}
                              background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                            {% endif %}

                            background-size: contain;
                            margin: 4px 4px 16px;
                            filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
                            border-radius: var(--control-border-radius);

                            {% set media_type = state_attr(config.entity, 'media_content_type') %}
                            {% if media_type == 'tvshow' %}
                              aspect-ratio: 16 / 9;
                            {% elif media_type == 'movie' %}
                              aspect-ratio: 2 / 3;
                            {% else %}
                              aspect-ratio: 1 / 1;
                            {% endif %}
                          }
                    - type: conditional
                      conditions:
                        - entity: media_player.plex_ipad
                          state_not: unavailable
                      card:
                        entity: media_player.plex_ipad
                        hide:
                          icon: true
                          name: true
                          runtime: true
                          source: true
                          power: true
                          state_label: true
                          volume: true
                          info: true
                          progress: false
                          controls: true
                        more_info: false
                        type: custom:mini-media-player
                        toggle_power: false
                        group: true
                        card_mod:
                          style:
                            mmp-progress$: |
                              paper-progress {
                                {{ '--paper-progress-container-color: rgba(var(--rgb-indigo-color), 0.2) !important;' if is_state(config.entity, 'playing') }}
                              }
                            .: |
                              ha-card {
                                margin: 0px 12px 12px;
                                --mmp-progress-height: 12px !important;
                                height: var(--mmp-progress-height);
                                --mmp-accent-color: rgb(var(--rgb-indigo-color));
                                --mmp-border-radius: 12px !important;
                                --ha-card-border-width: 0;
                              }
                  card_mod:
                    style: |
                      ha-card:before {
                        transform: translate3d(0,0,0);
                        -webkit-transform: translate3d(0,0,0);
                        content: "";
                        position: absolute;
                        height: 100%;
                        width: 100%;

                        background: url('/local/mushroom/idle_art.png') center no-repeat;
                        {% if not is_state('media_player.plex_ipad', 'unavailable') %}
                          background: url( '{{ state_attr('media_player.plex_ipad', "entity_picture") }}' ) center no-repeat;
                        {% endif %}

                        filter: blur(150px) saturate(200%);
                        background-size: 100% 100%;
                      }
                      ha-card {
                        transform: translate3d(0,0,0);
                        -webkit-transform: translate3d(0,0,0);
                      }
      - type: custom:local-conditional-card
        default: hide
        id: camera
        card:
          type: horizontal-stack
          cards:
            - square: false
              columns: 3
              type: grid
              cards:
                - type: custom:mushroom-template-card
                  entity: binary_sensor.dalg_doorbell_motion
                  primary: ''
                  secondary: Doorbell
                  layout: vertical
                  icon_color: >-
                    {% if is_state('binary_sensor.dalg_doorbell_motion', 'on')
                    %}
                      disable
                    {% else %}
                      blue
                    {% endif %}
                  icon: >-
                    {% if is_state('binary_sensor.dalg_doorbell_motion', 'on')
                    %}
                      disable
                    {% else %}
                      mdi:cctv
                    {% endif %}
                  hold_action:
                    action: none
                  double_tap_action:
                    action: none
                  tap_action:
                    action: fire-dom-event
                    haptic: heavy
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        style: '--popup-background-color: transparent;'
                        size: normal
                        content:
                          type: vertical-stack
                          cards:
                            - type: custom:stack-in-card
                              cards:
                                - type: custom:mushroom-media-player-card
                                  entity: camera.dalg_doorbell_high
                                  name: Doorbell
                                  icon: mdi:play
                                  use_media_info: true
                                  use_media_artwork: false
                                  show_volume_level: false
                                  fill_container: false
                                  card_mod:
                                    style: |
                                      mushroom-shape-icon {
                                        display: flex;
                                          --card-mod-icon: mdi:cctv;

                                        {{ 'animation: none;' if not is_state(config.entity, 'unavailable') }}

                                      }
                                      @keyframes flicker {
                                        0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--rgb-indigo), 1); }
                                        32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--rgb-indigo), 0.6); }
                                      }
                                      @keyframes beat {
                                        0%, 60% { --icon-symbol-size: 21px; }
                                        5%, 17%, 57% { --icon-symbol-size: 22px; }
                                        10%, 20%, 51% { --icon-symbol-size: 23px; }
                                        25%, 45% { --icon-symbol-size: 24px; }
                                        30%, 39% { --icon-symbol-size: 25px; }
                                        33% { --icon-symbol-size: 26px; }
                                      }
                                      ha-card {
                                        --ha-card-border-width: 0;
                                      }
                                      ha-card:before {
                                        transform: translate3d(0,0,0);
                                        -webkit-transform: translate3d(0,0,0);
                                        content: "";

                                        background: url('/local/mushroom/UI.png') center no-repeat;
                                        {% if not is_state(config.entity, 'unavailable') %}
                                          background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                        {% endif %}

                                        background-size: contain;
                                        margin: 4px 4px 16px;
                                        filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
                                        border-radius: var(--control-border-radius);

                                        {% if not is_state(config.entity, 'unavailable') %}
                                          aspect-ratio: 4 / 3;
                                        {% else %}
                                          aspect-ratio: 1 / 1;
                                        {% endif %}
                                      }
                                      }
                                - type: conditional
                                  conditions:
                                    - entity: camera.dalg_doorbell_high
                                      state_not: recording
                                  card:
                                    entity: camera.dalg_doorbell_high
                                    hide:
                                      icon: true
                                      name: true
                                      runtime: true
                                      source: true
                                      power: true
                                      state_label: true
                                      volume: true
                                      info: true
                                      progress: false
                                      controls: true
                                    more_info: false
                                    type: custom:mini-media-player
                                    toggle_power: false
                                    group: true
                                    card_mod:
                                      style:
                                        mmp-progress$: |
                                          paper-progress {
                                            {{ '--paper-progress-container-color: rgba(var(--rgb-indigo-color), 0.2) !important;' if is_state(config.entity, 'recording') }}
                                          }
                                        .: |
                                          ha-card {
                                            margin: 0px 12px 12px;
                                            --mmp-progress-height: 12px !important;
                                            height: var(--mmp-progress-height);
                                            --mmp-accent-color: rgb(var(--rgb-indigo-color));
                                            --mmp-border-radius: 12px !important;
                                            --ha-card-border-width: 0;
                                          }
                              card_mod:
                                style: |
                                  ha-card:before {
                                    transform: translate3d(0,0,0);
                                    -webkit-transform: translate3d(0,0,0);
                                    content: "";
                                    position: absolute;
                                    height: 100%;
                                    width: 100%;

                                    background: url('/local/mushroom/UI.png') center no-repeat;
                                    {% if not is_state('camera.dalg_doorbell_high', 'unavailable') %}
                                      background: url( '{{ state_attr('camera.dalg_doorbell_high', "entity_picture") }}' ) center no-repeat;
                                    {% endif %}

                                    filter: blur(150px) saturate(200%);
                                    background-size: 100% 100%;
                                  }
                                  ha-card {
                                    transform: translate3d(0,0,0);
                                    -webkit-transform: translate3d(0,0,0);
                                  }
                  card_mod:
                    style: |
                      ha-card {
                        {% if is_state( 'binary_sensor.dalg_doorbell_motion', 'on') %}
                          background-image: url( '{{ state_attr( 'camera.dalg_doorbell_high', "entity_picture" ) }}' );
                          background-position: center;
                          background-repeat: no-repeat;
                          background-size: cover;
                          background-color: rgba(var(--rgb-card-background-color),0.5);
                          background-blend-mode: overlay;
                          --primary-text-color: transparent;
                          --secondary-text-color: transparent;
                        {% else %}
                          background-color: rgb(19, 51, 104);
                        {% endif %}  

                        }
                      ha-card:active {
                        background: rgba(var(--rgb-disabled), 0.9);
                        transform: scale(0.915);
                        transition: 0s;
                       }
                        mushroom-shape-icon {
                          --icon-size: 65px;
                - type: custom:mushroom-template-card
                  entity: device_tracker.dalg_cam1
                  primary: ''
                  secondary: Entrée
                  icon: |-
                    {% if is_state('binary_sensor.dalg_cam1_motion', 'on') %}
                      disable
                    {% else %}
                      mdi:cctv
                    {% endif %}
                  layout: vertical
                  icon_color: |-
                    {% if is_state('binary_sensor.dalg_cam1_motion', 'on') %}
                      disable
                    {% else %}
                      blue
                    {% endif %}
                  hold_action:
                    action: none
                  double_tap_action:
                    action: none
                  tap_action:
                    action: fire-dom-event
                    haptic: heavy
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        style: '--popup-background-color: transparent;'
                        size: normal
                        content:
                          type: vertical-stack
                          cards:
                            - type: custom:stack-in-card
                              cards:
                                - type: custom:mushroom-media-player-card
                                  entity: camera.dalg_cam1_high
                                  name: Entrée
                                  icon: mdi:play
                                  use_media_info: true
                                  use_media_artwork: false
                                  show_volume_level: false
                                  fill_container: false
                                  card_mod:
                                    style: |
                                      mushroom-shape-icon {
                                        display: flex;
                                          --card-mod-icon: mdi:cctv;

                                        {{ 'animation: none;' if not is_state(config.entity, 'unavailable') }}

                                      }
                                      @keyframes flicker {
                                        0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--rgb-indigo), 1); }
                                        32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--rgb-indigo), 0.6); }
                                      }
                                      @keyframes beat {
                                        0%, 60% { --icon-symbol-size: 21px; }
                                        5%, 17%, 57% { --icon-symbol-size: 22px; }
                                        10%, 20%, 51% { --icon-symbol-size: 23px; }
                                        25%, 45% { --icon-symbol-size: 24px; }
                                        30%, 39% { --icon-symbol-size: 25px; }
                                        33% { --icon-symbol-size: 26px; }
                                      }
                                      ha-card {
                                        --ha-card-border-width: 0;
                                      }
                                      ha-card:before {
                                        transform: translate3d(0,0,0);
                                        -webkit-transform: translate3d(0,0,0);
                                        content: "";

                                        background: url('/local/mushroom/UI.png') center no-repeat;
                                        {% if not is_state(config.entity, 'unavailable') %}
                                          background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                        {% endif %}

                                        background-size: contain;
                                        margin: 4px 4px 16px;
                                        filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
                                        border-radius: var(--control-border-radius);

                                        {% if not is_state(config.entity, 'unavailable') %}
                                          aspect-ratio: 16 / 9;
                                        {% else %}
                                          aspect-ratio: 1 / 1;
                                        {% endif %}
                                      }
                                      }
                                - type: conditional
                                  conditions:
                                    - entity: camera.dalg_cam1_high
                                      state_not: recording
                                  card:
                                    entity: camera.dalg_cam1_high
                                    hide:
                                      icon: true
                                      name: true
                                      runtime: true
                                      source: true
                                      power: true
                                      state_label: true
                                      volume: true
                                      info: true
                                      progress: false
                                      controls: true
                                    more_info: false
                                    type: custom:mini-media-player
                                    toggle_power: false
                                    group: true
                                    card_mod:
                                      style:
                                        mmp-progress$: |
                                          paper-progress {
                                            {{ '--paper-progress-container-color: rgba(var(--rgb-indigo-color), 0.2) !important;' if is_state(config.entity, 'recording') }}
                                          }
                                        .: |
                                          ha-card {
                                            margin: 0px 12px 12px;
                                            --mmp-progress-height: 12px !important;
                                            height: var(--mmp-progress-height);
                                            --mmp-accent-color: rgb(var(--rgb-indigo-color));
                                            --mmp-border-radius: 12px !important;
                                            --ha-card-border-width: 0;
                                          }
                              card_mod:
                                style: |
                                  ha-card:before {
                                    transform: translate3d(0,0,0);
                                    -webkit-transform: translate3d(0,0,0);
                                    content: "";
                                    position: absolute;
                                    height: 100%;
                                    width: 100%;

                                    background: url('/local/mushroom/UI.png') center no-repeat;
                                    {% if not is_state('camera.dalg_cam1_high', 'unavailable') %}
                                      background: url( '{{ state_attr('camera.dalg_cam1_high', "entity_picture") }}' ) center no-repeat;
                                    {% endif %}

                                    filter: blur(150px) saturate(200%);
                                    background-size: 100% 100%;
                                  }
                                  ha-card {
                                    transform: translate3d(0,0,0);
                                    -webkit-transform: translate3d(0,0,0);
                                  }
                  card_mod:
                    style: |
                      ha-card {
                        {% if is_state( 'binary_sensor.dalg_cam1_motion', 'on') %}
                          background-image: url( '{{ state_attr( 'camera.dalg_cam1_high', "entity_picture" ) }}' );
                          background-position: center;
                          background-repeat: no-repeat;
                          background-size: cover;
                          background-color: rgba(var(--rgb-card-background-color),0.5);
                          background-blend-mode: overlay;
                          --primary-text-color: transparent;
                          --secondary-text-color: transparent;
                        {% else %}
                          background-color: rgb(19, 51, 104);
                        {% endif %}
                        }
                      ha-card:active {
                        background: rgba(var(--rgb-disabled), 0.9);
                        transform: scale(0.915);
                        transition: 0s;
                       }
                        mushroom-shape-icon {
                          --icon-size: 65px;
                - type: custom:mushroom-template-card
                  entity: device_tracker.dalg_cam2
                  primary: ''
                  secondary: Sud
                  icon: |-
                    {% if is_state('binary_sensor.dalg_cam2_motion', 'on') %}
                      disable
                    {% else %}
                      mdi:cctv
                    {% endif %}
                  icon_color: |-
                    {% if is_state('binary_sensor.dalg_cam2_motion', 'on') %}
                      disable
                    {% else %}
                      blue
                    {% endif %}
                  layout: vertical
                  hold_action:
                    action: none
                  double_tap_action:
                    action: none
                  tap_action:
                    action: fire-dom-event
                    haptic: heavy
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        style: '--popup-background-color: transparent;'
                        size: normal
                        content:
                          type: vertical-stack
                          cards:
                            - type: custom:stack-in-card
                              cards:
                                - type: custom:mushroom-media-player-card
                                  entity: camera.dalg_cam2_high
                                  name: Sud
                                  icon: mdi:play
                                  use_media_info: true
                                  use_media_artwork: false
                                  show_volume_level: false
                                  fill_container: false
                                  card_mod:
                                    style: |
                                      mushroom-shape-icon {
                                        display: flex;
                                          --card-mod-icon: mdi:cctv;

                                        {{ 'animation: none;' if not is_state(config.entity, 'unavailable') }}

                                      }
                                      @keyframes flicker {
                                        0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--rgb-indigo), 1); }
                                        32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--rgb-indigo), 0.6); }
                                      }
                                      @keyframes beat {
                                        0%, 60% { --icon-symbol-size: 21px; }
                                        5%, 17%, 57% { --icon-symbol-size: 22px; }
                                        10%, 20%, 51% { --icon-symbol-size: 23px; }
                                        25%, 45% { --icon-symbol-size: 24px; }
                                        30%, 39% { --icon-symbol-size: 25px; }
                                        33% { --icon-symbol-size: 26px; }
                                      }
                                      ha-card {
                                        --ha-card-border-width: 0;
                                      }
                                      ha-card:before {
                                        transform: translate3d(0,0,0);
                                        -webkit-transform: translate3d(0,0,0);
                                        content: "";

                                        background: url('/local/mushroom/UI.png') center no-repeat;
                                        {% if not is_state(config.entity, 'unavailable') %}
                                          background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                        {% endif %}

                                        background-size: contain;
                                        margin: 4px 4px 16px;
                                        filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
                                        border-radius: var(--control-border-radius);

                                        {% if not is_state(config.entity, 'unavailable') %}
                                          aspect-ratio: 16 / 9;
                                        {% else %}
                                          aspect-ratio: 1 / 1;
                                        {% endif %}
                                      }
                                      }
                                - type: conditional
                                  conditions:
                                    - entity: camera.dalg_cam2_high
                                      state_not: recording
                                  card:
                                    entity: camera.dalg_cam2_high
                                    hide:
                                      icon: true
                                      name: true
                                      runtime: true
                                      source: true
                                      power: true
                                      state_label: true
                                      volume: true
                                      info: true
                                      progress: false
                                      controls: true
                                    more_info: false
                                    type: custom:mini-media-player
                                    toggle_power: false
                                    group: true
                                    card_mod:
                                      style:
                                        mmp-progress$: |
                                          paper-progress {
                                            {{ '--paper-progress-container-color: rgba(var(--rgb-indigo-color), 0.2) !important;' if is_state(config.entity, 'recording') }}
                                          }
                                        .: |
                                          ha-card {
                                            margin: 0px 12px 12px;
                                            --mmp-progress-height: 12px !important;
                                            height: var(--mmp-progress-height);
                                            --mmp-accent-color: rgb(var(--rgb-indigo-color));
                                            --mmp-border-radius: 12px !important;
                                            --ha-card-border-width: 0;
                                          }
                              card_mod:
                                style: |
                                  ha-card:before {
                                    transform: translate3d(0,0,0);
                                    -webkit-transform: translate3d(0,0,0);
                                    content: "";
                                    position: absolute;
                                    height: 100%;
                                    width: 100%;

                                    background: url('/local/mushroom/UI.png') center no-repeat;
                                    {% if not is_state('camera.dalg_cam2_high', 'unavailable') %}
                                      background: url( '{{ state_attr('camera.dalg_cam2_high', "entity_picture") }}' ) center no-repeat;
                                    {% endif %}

                                    filter: blur(150px) saturate(200%);
                                    background-size: 100% 100%;
                                  }
                                  ha-card {
                                    transform: translate3d(0,0,0);
                                    -webkit-transform: translate3d(0,0,0);
                                  }
                  card_mod:
                    style: |
                      ha-card {
                        {% if is_state( 'binary_sensor.dalg_cam2_motion', 'on') %}
                          background-image: url( '{{ state_attr( 'camera.dalg_cam2_high', "entity_picture" ) }}' );
                          background-position: center;
                          background-repeat: no-repeat;
                          background-size: cover;
                          background-color: rgba(var(--rgb-card-background-color),0.5);
                          background-blend-mode: overlay;
                          --primary-text-color: transparent;
                          --secondary-text-color: transparent;
                        {% else %}
                          background-color: rgb(19, 51, 104);
                        {% endif %}
                        }
                      ha-card:active {
                        background: rgba(var(--rgb-disabled), 0.9);
                        transform: scale(0.915);
                        transition: 0s;
                       }
                        mushroom-shape-icon {
                          --icon-size: 65px;
                - type: custom:mushroom-template-card
                  entity: device_tracker.dalg_cam3
                  icon: |-
                    {% if is_state('binary_sensor.dalg_cam3_motion', 'on') %}
                      disable
                    {% else %}
                      mdi:cctv
                    {% endif %}
                  primary: ''
                  secondary: Terrasse
                  icon_color: |-
                    {% if is_state('binary_sensor.dalg_cam3_motion', 'on') %}
                      disable
                    {% else %}
                      blue
                    {% endif %}
                  layout: vertical
                  hold_action:
                    action: none
                  double_tap_action:
                    action: none
                  tap_action:
                    action: fire-dom-event
                    haptic: heavy
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        style: '--popup-background-color: transparent;'
                        size: normal
                        content:
                          type: vertical-stack
                          cards:
                            - type: custom:stack-in-card
                              cards:
                                - type: custom:mushroom-media-player-card
                                  entity: camera.dalg_cam3_high
                                  name: Terrasse
                                  icon: mdi:play
                                  use_media_info: true
                                  use_media_artwork: false
                                  show_volume_level: false
                                  fill_container: false
                                  card_mod:
                                    style: |
                                      mushroom-shape-icon {
                                        display: flex;
                                          --card-mod-icon: mdi:cctv;

                                        {{ 'animation: none;' if not is_state(config.entity, 'unavailable') }}

                                      }
                                      @keyframes flicker {
                                        0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--rgb-indigo), 1); }
                                        32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--rgb-indigo), 0.6); }
                                      }
                                      @keyframes beat {
                                        0%, 60% { --icon-symbol-size: 21px; }
                                        5%, 17%, 57% { --icon-symbol-size: 22px; }
                                        10%, 20%, 51% { --icon-symbol-size: 23px; }
                                        25%, 45% { --icon-symbol-size: 24px; }
                                        30%, 39% { --icon-symbol-size: 25px; }
                                        33% { --icon-symbol-size: 26px; }
                                      }
                                      ha-card {
                                        --ha-card-border-width: 0;
                                      }
                                      ha-card:before {
                                        transform: translate3d(0,0,0);
                                        -webkit-transform: translate3d(0,0,0);
                                        content: "";

                                        background: url('/local/mushroom/UI.png') center no-repeat;
                                        {% if not is_state(config.entity, 'unavailable') %}
                                          background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                        {% endif %}

                                        background-size: contain;
                                        margin: 4px 4px 16px;
                                        filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
                                        border-radius: var(--control-border-radius);

                                        {% if not is_state(config.entity, 'unavailable') %}
                                          aspect-ratio: 16 / 9;
                                        {% else %}
                                          aspect-ratio: 1 / 1;
                                        {% endif %}
                                      }
                                      }
                                - type: conditional
                                  conditions:
                                    - entity: camera.dalg_cam3_high
                                      state_not: recording
                                  card:
                                    entity: camera.dalg_cam3_high
                                    hide:
                                      icon: true
                                      name: true
                                      runtime: true
                                      source: true
                                      power: true
                                      state_label: true
                                      volume: true
                                      info: true
                                      progress: false
                                      controls: true
                                    more_info: false
                                    type: custom:mini-media-player
                                    toggle_power: false
                                    group: true
                                    card_mod:
                                      style:
                                        mmp-progress$: |
                                          paper-progress {
                                            {{ '--paper-progress-container-color: rgba(var(--rgb-indigo-color), 0.2) !important;' if is_state(config.entity, 'recording') }}
                                          }
                                        .: |
                                          ha-card {
                                            margin: 0px 12px 12px;
                                            --mmp-progress-height: 12px !important;
                                            height: var(--mmp-progress-height);
                                            --mmp-accent-color: rgb(var(--rgb-indigo-color));
                                            --mmp-border-radius: 12px !important;
                                            --ha-card-border-width: 0;
                                          }
                              card_mod:
                                style: |
                                  ha-card:before {
                                    transform: translate3d(0,0,0);
                                    -webkit-transform: translate3d(0,0,0);
                                    content: "";
                                    position: absolute;
                                    height: 100%;
                                    width: 100%;

                                    background: url('/local/mushroom/UI.png') center no-repeat;
                                    {% if not is_state('camera.dalg_cam3_high', 'unavailable') %}
                                      background: url( '{{ state_attr('camera.dalg_cam3_high', "entity_picture") }}' ) center no-repeat;
                                    {% endif %}

                                    filter: blur(150px) saturate(200%);
                                    background-size: 100% 100%;
                                  }
                                  ha-card {
                                    transform: translate3d(0,0,0);
                                    -webkit-transform: translate3d(0,0,0);
                                  }
                  card_mod:
                    style: |
                      ha-card {
                        {% if is_state( 'binary_sensor.dalg_cam3_motion', 'on') %}
                          background-image: url( '{{ state_attr( 'camera.dalg_cam3_high', "entity_picture" ) }}' );
                          background-position: center;
                          background-repeat: no-repeat;
                          background-size: cover;
                          background-color: rgba(var(--rgb-card-background-color),0.5);
                          background-blend-mode: overlay;
                          --primary-text-color: transparent;
                          --secondary-text-color: transparent;
                        {% else %}
                          background-color: rgb(19, 51, 104);
                        {% endif %}
                        }
                      ha-card:active {
                        background: rgba(var(--rgb-disabled), 0.9);
                        transform: scale(0.915);
                        transition: 0s;
                       }
                        mushroom-shape-icon {
                          --icon-size: 65px;
                - type: custom:mushroom-template-card
                  entity: device_tracker.dalg_cam4
                  icon: |-
                    {% if is_state('binary_sensor.dalg_cam4_motion', 'on') %}
                      disable
                    {% else %}
                      mdi:cctv
                    {% endif %}
                  primary: ''
                  secondary: Nord
                  icon_color: |-
                    {% if is_state('binary_sensor.dalg_cam4_motion', 'on') %}
                      disable
                    {% else %}
                      blue
                    {% endif %}
                  layout: vertical
                  hold_action:
                    action: none
                  double_tap_action:
                    action: none
                  tap_action:
                    action: fire-dom-event
                    haptic: heavy
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        style: '--popup-background-color: transparent;'
                        size: normal
                        content:
                          type: vertical-stack
                          cards:
                            - type: custom:stack-in-card
                              cards:
                                - type: custom:mushroom-media-player-card
                                  entity: camera.dalg_cam4_high
                                  name: Nord
                                  icon: mdi:play
                                  use_media_info: true
                                  use_media_artwork: false
                                  show_volume_level: false
                                  fill_container: false
                                  card_mod:
                                    style: |
                                      mushroom-shape-icon {
                                        display: flex;
                                          --card-mod-icon: mdi:cctv;

                                        {{ 'animation: none;' if not is_state(config.entity, 'unavailable') }}

                                      }
                                      @keyframes flicker {
                                        0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--rgb-indigo), 1); }
                                        32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--rgb-indigo), 0.6); }
                                      }
                                      @keyframes beat {
                                        0%, 60% { --icon-symbol-size: 21px; }
                                        5%, 17%, 57% { --icon-symbol-size: 22px; }
                                        10%, 20%, 51% { --icon-symbol-size: 23px; }
                                        25%, 45% { --icon-symbol-size: 24px; }
                                        30%, 39% { --icon-symbol-size: 25px; }
                                        33% { --icon-symbol-size: 26px; }
                                      }
                                      ha-card {
                                        --ha-card-border-width: 0;
                                      }
                                      ha-card:before {
                                        transform: translate3d(0,0,0);
                                        -webkit-transform: translate3d(0,0,0);
                                        content: "";

                                        background: url('/local/mushroom/UI.png') center no-repeat;
                                        {% if not is_state(config.entity, 'unavailable') %}
                                          background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                        {% endif %}

                                        background-size: contain;
                                        margin: 4px 4px 16px;
                                        filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
                                        border-radius: var(--control-border-radius);

                                        {% if not is_state(config.entity, 'unavailable') %}
                                          aspect-ratio: 16 / 9;
                                        {% else %}
                                          aspect-ratio: 1 / 1;
                                        {% endif %}
                                      }
                                      }
                                - type: conditional
                                  conditions:
                                    - entity: camera.dalg_cam4_high
                                      state_not: recording
                                  card:
                                    entity: camera.dalg_cam4_high
                                    hide:
                                      icon: true
                                      name: true
                                      runtime: true
                                      source: true
                                      power: true
                                      state_label: true
                                      volume: true
                                      info: true
                                      progress: false
                                      controls: true
                                    more_info: false
                                    type: custom:mini-media-player
                                    toggle_power: false
                                    group: true
                                    card_mod:
                                      style:
                                        mmp-progress$: |
                                          paper-progress {
                                            {{ '--paper-progress-container-color: rgba(var(--rgb-indigo-color), 0.2) !important;' if is_state(config.entity, 'recording') }}
                                          }
                                        .: |
                                          ha-card {
                                            margin: 0px 12px 12px;
                                            --mmp-progress-height: 12px !important;
                                            height: var(--mmp-progress-height);
                                            --mmp-accent-color: rgb(var(--rgb-indigo-color));
                                            --mmp-border-radius: 12px !important;
                                            --ha-card-border-width: 0;
                                          }
                              card_mod:
                                style: |
                                  ha-card:before {
                                    transform: translate3d(0,0,0);
                                    -webkit-transform: translate3d(0,0,0);
                                    content: "";
                                    position: absolute;
                                    height: 100%;
                                    width: 100%;

                                    background: url('/local/mushroom/UI.png') center no-repeat;
                                    {% if not is_state('camera.dalg_cam4_high', 'unavailable') %}
                                      background: url( '{{ state_attr('camera.dalg_cam4_high', "entity_picture") }}' ) center no-repeat;
                                    {% endif %}

                                    filter: blur(150px) saturate(200%);
                                    background-size: 100% 100%;
                                  }
                                  ha-card {
                                    transform: translate3d(0,0,0);
                                    -webkit-transform: translate3d(0,0,0);
                                  }
                  card_mod:
                    style: |
                      ha-card {
                        {% if is_state( 'binary_sensor.dalg_cam4_motion', 'on') %}
                          background-image: url( '{{ state_attr( 'camera.dalg_cam4_high', "entity_picture" ) }}' );
                          background-position: center;
                          background-repeat: no-repeat;
                          background-size: cover;
                          background-color: rgba(var(--rgb-card-background-color),0.5);
                          background-blend-mode: overlay;
                          --primary-text-color: transparent;
                          --secondary-text-color: transparent;
                        {% else %}
                          background-color: rgb(19, 51, 104);
                        {% endif %}
                        }
                      ha-card:active {
                        background: rgba(var(--rgb-disabled), 0.9);
                        transform: scale(0.915);
                        transition: 0s;
                       }
                        mushroom-shape-icon {
                          --icon-size: 65px;
                - type: custom:mushroom-template-card
                  entity: device_tracker.dalg_cam5
                  icon: |-
                    {% if is_state('binary_sensor.dalg_cam5_motion', 'on') %}
                      disable
                    {% else %}
                      mdi:cctv
                    {% endif %}
                  primary: ''
                  secondary: Garage
                  icon_color: |-
                    {% if is_state('binary_sensor.dalg_cam5_motion', 'on') %}
                      disable
                    {% else %}
                      blue
                    {% endif %}
                  layout: vertical
                  hold_action:
                    action: none
                  double_tap_action:
                    action: none
                  tap_action:
                    action: fire-dom-event
                    haptic: heavy
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        style: '--popup-background-color: transparent;'
                        size: normal
                        content:
                          type: vertical-stack
                          cards:
                            - type: custom:stack-in-card
                              cards:
                                - type: custom:mushroom-media-player-card
                                  entity: camera.dalg_cam5_high
                                  name: Garage
                                  icon: mdi:play
                                  use_media_info: true
                                  use_media_artwork: false
                                  show_volume_level: false
                                  fill_container: false
                                  card_mod:
                                    style: |
                                      mushroom-shape-icon {
                                        display: flex;
                                          --card-mod-icon: mdi:cctv;

                                        {{ 'animation: none;' if not is_state(config.entity, 'unavailable') }}

                                      }
                                      @keyframes flicker {
                                        0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--rgb-indigo), 1); }
                                        32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--rgb-indigo), 0.6); }
                                      }
                                      @keyframes beat {
                                        0%, 60% { --icon-symbol-size: 21px; }
                                        5%, 17%, 57% { --icon-symbol-size: 22px; }
                                        10%, 20%, 51% { --icon-symbol-size: 23px; }
                                        25%, 45% { --icon-symbol-size: 24px; }
                                        30%, 39% { --icon-symbol-size: 25px; }
                                        33% { --icon-symbol-size: 26px; }
                                      }
                                      ha-card {
                                        --ha-card-border-width: 0;
                                      }
                                      ha-card:before {
                                        transform: translate3d(0,0,0);
                                        -webkit-transform: translate3d(0,0,0);
                                        content: "";

                                        background: url('/local/mushroom/UI.png') center no-repeat;
                                        {% if not is_state(config.entity, 'unavailable') %}
                                          background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                        {% endif %}

                                        background-size: contain;
                                        margin: 4px 4px 16px;
                                        filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
                                        border-radius: var(--control-border-radius);

                                        {% if not is_state(config.entity, 'unavailable') %}
                                          aspect-ratio: 16 / 9;
                                        {% else %}
                                          aspect-ratio: 1 / 1;
                                        {% endif %}
                                      }
                                      }
                                - type: conditional
                                  conditions:
                                    - entity: camera.dalg_cam5_high
                                      state_not: idle
                                    - entity: camera.dalg_cam5_high
                                      state_not: recording
                                  card:
                                    entity: camera.dalg_cam5_high
                                    hide:
                                      icon: true
                                      name: true
                                      runtime: true
                                      source: true
                                      power: true
                                      state_label: true
                                      volume: true
                                      info: true
                                      progress: false
                                      controls: true
                                    more_info: false
                                    type: custom:mini-media-player
                                    toggle_power: false
                                    group: true
                                    card_mod:
                                      style:
                                        mmp-progress$: |
                                          paper-progress {
                                            {{ '--paper-progress-container-color: rgba(var(--rgb-indigo-color), 0.2) !important;' if is_state(config.entity, 'recording') }}
                                          }
                                        .: |
                                          ha-card {
                                            margin: 0px 12px 12px;
                                            --mmp-progress-height: 12px !important;
                                            height: var(--mmp-progress-height);
                                            --mmp-accent-color: rgb(var(--rgb-indigo-color));
                                            --mmp-border-radius: 12px !important;
                                            --ha-card-border-width: 0;
                                          }
                              card_mod:
                                style: |
                                  ha-card:before {
                                    transform: translate3d(0,0,0);
                                    -webkit-transform: translate3d(0,0,0);
                                    content: "";
                                    position: absolute;
                                    height: 100%;
                                    width: 100%;

                                    background: url('/local/mushroom/UI.png') center no-repeat;
                                    {% if not is_state('camera.dalg_cam5_high', 'unavailable') %}
                                      background: url( '{{ state_attr('camera.dalg_cam5_high', "entity_picture") }}' ) center no-repeat;
                                    {% endif %}

                                    filter: blur(150px) saturate(200%);
                                    background-size: 100% 100%;
                                  }
                                  ha-card {
                                    transform: translate3d(0,0,0);
                                    -webkit-transform: translate3d(0,0,0);
                                  }
                  card_mod:
                    style: |
                      ha-card {
                        {% if is_state( 'binary_sensor.dalg_cam5_motion', 'on') %}
                          background-image: url( '{{ state_attr( 'camera.dalg_cam5_high', "entity_picture" ) }}' );
                          background-position: center;
                          background-repeat: no-repeat;
                          background-size: cover;
                          background-color: rgba(var(--rgb-card-background-color),0.5);
                          background-blend-mode: overlay;
                          --primary-text-color: transparent;
                          --secondary-text-color: transparent;
                        {% else %}
                          background-color: rgb(19, 51, 104);
                        {% endif %}
                        }
                      ha-card:active {
                        background: rgba(var(--rgb-disabled), 0.9);
                        transform: scale(0.915);
                        transition: 0s;
                       }
                        mushroom-shape-icon {
                          --icon-size: 65px;
                - type: custom:mushroom-template-card
                  entity: device_tracker.dalg_cam6
                  icon: |-
                    {% if is_state('binary_sensor.dalg_cam6_motion', 'on') %}
                      disable
                    {% else %}
                      mdi:cctv
                    {% endif %}
                  primary: ''
                  secondary: Abris
                  icon_color: |-
                    {% if is_state('binary_sensor.dalg_cam6_motion', 'on') %}
                      disable
                    {% else %}
                      blue
                    {% endif %}
                  layout: vertical
                  hold_action:
                    action: none
                  double_tap_action:
                    action: none
                  tap_action:
                    action: fire-dom-event
                    haptic: heavy
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        style: '--popup-background-color: transparent;'
                        size: normal
                        content:
                          type: vertical-stack
                          cards:
                            - type: custom:stack-in-card
                              cards:
                                - type: custom:mushroom-media-player-card
                                  entity: camera.dalg_cam6_high
                                  name: Abris
                                  icon: mdi:play
                                  use_media_info: true
                                  use_media_artwork: false
                                  show_volume_level: false
                                  fill_container: false
                                  card_mod:
                                    style: |
                                      mushroom-shape-icon {
                                        display: flex;
                                          --card-mod-icon: mdi:cctv;

                                        {{ 'animation: none;' if not is_state(config.entity, 'unavailable') }}

                                      }
                                      @keyframes flicker {
                                        0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--rgb-indigo), 1); }
                                        32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--rgb-indigo), 0.6); }
                                      }
                                      @keyframes beat {
                                        0%, 60% { --icon-symbol-size: 21px; }
                                        5%, 17%, 57% { --icon-symbol-size: 22px; }
                                        10%, 20%, 51% { --icon-symbol-size: 23px; }
                                        25%, 45% { --icon-symbol-size: 24px; }
                                        30%, 39% { --icon-symbol-size: 25px; }
                                        33% { --icon-symbol-size: 26px; }
                                      }
                                      ha-card {
                                        --ha-card-border-width: 0;
                                      }
                                      ha-card:before {
                                        transform: translate3d(0,0,0);
                                        -webkit-transform: translate3d(0,0,0);
                                        content: "";

                                        background: url('/local/mushroom/UI.png') center no-repeat;
                                        {% if not is_state(config.entity, 'unavailable') %}
                                          background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                        {% endif %}

                                        background-size: contain;
                                        margin: 4px 4px 16px;
                                        filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
                                        border-radius: var(--control-border-radius);

                                        {% if not is_state(config.entity, 'unavailable') %}
                                          aspect-ratio: 16 / 9;
                                        {% else %}
                                          aspect-ratio: 1 / 1;
                                        {% endif %}
                                      }
                                      }
                                - type: conditional
                                  conditions:
                                    - entity: camera.dalg_cam6_high
                                      state_not: idle
                                  card:
                                    entity: camera.dalg_cam6_high
                                    hide:
                                      icon: true
                                      name: true
                                      runtime: true
                                      source: true
                                      power: true
                                      state_label: true
                                      volume: true
                                      info: true
                                      progress: false
                                      controls: true
                                    more_info: false
                                    type: custom:mini-media-player
                                    toggle_power: false
                                    group: true
                                    card_mod:
                                      style:
                                        mmp-progress$: |
                                          paper-progress {
                                            {{ '--paper-progress-container-color: rgba(var(--rgb-indigo-color), 0.2) !important;' if is_state(config.entity, 'recording') }}
                                          }
                                        .: |
                                          ha-card {
                                            margin: 0px 12px 12px;
                                            --mmp-progress-height: 12px !important;
                                            height: var(--mmp-progress-height);
                                            --mmp-accent-color: rgb(var(--rgb-indigo-color));
                                            --mmp-border-radius: 12px !important;
                                            --ha-card-border-width: 0;
                                          }
                              card_mod:
                                style: |
                                  ha-card:before {
                                    transform: translate3d(0,0,0);
                                    -webkit-transform: translate3d(0,0,0);
                                    content: "";
                                    position: absolute;
                                    height: 100%;
                                    width: 100%;

                                    background: url('/local/mushroom/UI.png') center no-repeat;
                                    {% if not is_state('camera.dalg_cam6_high', 'unavailable') %}
                                      background: url( '{{ state_attr('camera.dalg_cam6_high', "entity_picture") }}' ) center no-repeat;
                                    {% endif %}

                                    filter: blur(150px) saturate(200%);
                                    background-size: 100% 100%;
                                  }
                                  ha-card {
                                    transform: translate3d(0,0,0);
                                    -webkit-transform: translate3d(0,0,0);
                                  }
                  card_mod:
                    style: |
                      ha-card {
                        {% if is_state( 'binary_sensor.dalg_g3_instant_motion', 'on') %}
                          background-image: url( '{{ state_attr( 'camera.dalg_cam6_high', "entity_picture" ) }}' );
                          background-position: center;
                          background-repeat: no-repeat;
                          background-size: cover;
                          background-color: rgba(var(--rgb-card-background-color),0.5);
                          background-blend-mode: overlay;
                          --primary-text-color: transparent;
                          --secondary-text-color: transparent;
                        {% else %}
                          background-color: rgb(19, 51, 104);
                        {% endif %}
                        }
                      ha-card:active {
                        background: rgba(var(--rgb-disabled), 0.9);
                        transform: scale(0.915);
                        transition: 0s;
                       }
                        mushroom-shape-icon {
                          --icon-size: 65px;
                - type: custom:mushroom-template-card
                  entity: device_tracker.dalg_cam7
                  icon: |-
                    {% if is_state('binary_sensor.dalg_cam7_motion', 'on') %}
                      disable
                    {% else %}
                      mdi:cctv
                    {% endif %}
                  primary: ''
                  secondary: Louis
                  icon_color: |-
                    {% if is_state('binary_sensor.dalg_cam7_motion', 'on') %}
                      disable
                    {% else %}
                      blue
                    {% endif %}
                  layout: vertical
                  hold_action:
                    action: none
                  double_tap_action:
                    action: none
                  tap_action:
                    action: fire-dom-event
                    haptic: heavy
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        style: '--popup-background-color: transparent;'
                        size: normal
                        content:
                          type: vertical-stack
                          cards:
                            - type: custom:stack-in-card
                              cards:
                                - type: custom:mushroom-media-player-card
                                  entity: camera.dalg_cam7_high
                                  name: Louis
                                  icon: mdi:play
                                  use_media_info: true
                                  use_media_artwork: false
                                  show_volume_level: false
                                  fill_container: false
                                  card_mod:
                                    style: |
                                      mushroom-shape-icon {
                                        display: flex;
                                          --card-mod-icon: mdi:cctv;

                                        {{ 'animation: none;' if not is_state(config.entity, 'unavailable') }}

                                      }
                                      @keyframes flicker {
                                        0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--rgb-indigo), 1); }
                                        32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--rgb-indigo), 0.6); }
                                      }
                                      @keyframes beat {
                                        0%, 60% { --icon-symbol-size: 21px; }
                                        5%, 17%, 57% { --icon-symbol-size: 22px; }
                                        10%, 20%, 51% { --icon-symbol-size: 23px; }
                                        25%, 45% { --icon-symbol-size: 24px; }
                                        30%, 39% { --icon-symbol-size: 25px; }
                                        33% { --icon-symbol-size: 26px; }
                                      }
                                      ha-card {
                                        --ha-card-border-width: 0;
                                      }
                                      ha-card:before {
                                        transform: translate3d(0,0,0);
                                        -webkit-transform: translate3d(0,0,0);
                                        content: "";

                                        background: url('/local/mushroom/UI.png') center no-repeat;
                                        {% if not is_state(config.entity, 'unavailable') %}
                                          background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                        {% endif %}

                                        background-size: contain;
                                        margin: 4px 4px 16px;
                                        filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
                                        border-radius: var(--control-border-radius);

                                        {% if not is_state(config.entity, 'unavailable') %}
                                          aspect-ratio: 16 / 9;
                                        {% else %}
                                          aspect-ratio: 1 / 1;
                                        {% endif %}
                                      }
                                      }
                                - type: conditional
                                  conditions:
                                    - entity: camera.dalg_cam7_high
                                      state_not: recording
                                  card:
                                    entity: camera.dalg_cam7_high
                                    hide:
                                      icon: true
                                      name: true
                                      runtime: true
                                      source: true
                                      power: true
                                      state_label: true
                                      volume: true
                                      info: true
                                      progress: false
                                      controls: true
                                    more_info: false
                                    type: custom:mini-media-player
                                    toggle_power: false
                                    group: true
                                    card_mod:
                                      style:
                                        mmp-progress$: |
                                          paper-progress {
                                            {{ '--paper-progress-container-color: rgba(var(--rgb-indigo-color), 0.2) !important;' if is_state(config.entity, 'recording') }}
                                          }
                                        .: |
                                          ha-card {
                                            margin: 0px 12px 12px;
                                            --mmp-progress-height: 12px !important;
                                            height: var(--mmp-progress-height);
                                            --mmp-accent-color: rgb(var(--rgb-indigo-color));
                                            --mmp-border-radius: 12px !important;
                                            --ha-card-border-width: 0;
                                          }
                              card_mod:
                                style: |
                                  ha-card:before {
                                    transform: translate3d(0,0,0);
                                    -webkit-transform: translate3d(0,0,0);
                                    content: "";
                                    position: absolute;
                                    height: 100%;
                                    width: 100%;

                                    background: url('/local/mushroom/UI.png') center no-repeat;
                                    {% if not is_state('camera.dalg_cam7_high', 'unavailable') %}
                                      background: url( '{{ state_attr('camera.dalg_cam7_high', "entity_picture") }}' ) center no-repeat;
                                    {% endif %}

                                    filter: blur(150px) saturate(200%);
                                    background-size: 100% 100%;
                                  }
                                  ha-card {
                                    transform: translate3d(0,0,0);
                                    -webkit-transform: translate3d(0,0,0);
                                  }
                  card_mod:
                    style: |
                      ha-card {
                        {% if is_state( 'binary_sensor.dalg_g3_instant_motion', 'on') %}
                          background-image: url( '{{ state_attr( 'camera.dalg_cam7_high', "entity_picture" ) }}' );
                          background-position: center;
                          background-repeat: no-repeat;
                          background-size: cover;
                          background-color: rgba(var(--rgb-card-background-color),0.5);
                          background-blend-mode: overlay;
                          --primary-text-color: transparent;
                          --secondary-text-color: transparent;
                        {% else %}
                          background-color: rgb(19, 51, 104);
                        {% endif %}
                        }
                      ha-card:active {
                        background: rgba(var(--rgb-disabled), 0.9);
                        transform: scale(0.915);
                        transition: 0s;
                       }
                        mushroom-shape-icon {
                          --icon-size: 65px;
                - type: custom:mushroom-template-card
                  entity: device_tracker.dalg_cam8
                  icon: |-
                    {% if is_state('binary_sensor.dalg_cam8_motion', 'on') %}
                      disable
                    {% else %}
                      mdi:cctv
                    {% endif %}
                  primary: ''
                  secondary: Samuel
                  icon_color: |-
                    {% if is_state('binary_sensor.dalg_cam8_motion', 'on') %}
                      disable
                    {% else %}
                      blue
                    {% endif %}
                  layout: vertical
                  hold_action:
                    action: none
                  double_tap_action:
                    action: none
                  tap_action:
                    action: fire-dom-event
                    haptic: heavy
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        style: '--popup-background-color: transparent;'
                        size: normal
                        content:
                          type: vertical-stack
                          cards:
                            - type: custom:stack-in-card
                              cards:
                                - type: custom:mushroom-media-player-card
                                  entity: camera.dalg_cam8_high
                                  name: Samuel
                                  icon: mdi:play
                                  use_media_info: true
                                  use_media_artwork: false
                                  show_volume_level: false
                                  fill_container: false
                                  card_mod:
                                    style: |
                                      mushroom-shape-icon {
                                        display: flex;
                                          --card-mod-icon: mdi:cctv;

                                        {{ 'animation: none;' if not is_state(config.entity, 'unavailable') }}

                                      }
                                      @keyframes flicker {
                                        0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--rgb-indigo), 1); }
                                        32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--rgb-indigo), 0.6); }
                                      }
                                      @keyframes beat {
                                        0%, 60% { --icon-symbol-size: 21px; }
                                        5%, 17%, 57% { --icon-symbol-size: 22px; }
                                        10%, 20%, 51% { --icon-symbol-size: 23px; }
                                        25%, 45% { --icon-symbol-size: 24px; }
                                        30%, 39% { --icon-symbol-size: 25px; }
                                        33% { --icon-symbol-size: 26px; }
                                      }
                                      ha-card {
                                        --ha-card-border-width: 0;
                                      }
                                      ha-card:before {
                                        transform: translate3d(0,0,0);
                                        -webkit-transform: translate3d(0,0,0);
                                        content: "";

                                        background: url('/local/mushroom/UI.png') center no-repeat;
                                        {% if not is_state(config.entity, 'unavailable') %}
                                          background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                        {% endif %}

                                        background-size: contain;
                                        margin: 4px 4px 16px;
                                        filter: drop-shadow(4px 4px 6px rgba(0, 0, 0, 0.5));
                                        border-radius: var(--control-border-radius);

                                        {% if not is_state(config.entity, 'unavailable') %}
                                          aspect-ratio: 16 / 9;
                                        {% else %}
                                          aspect-ratio: 1 / 1;
                                        {% endif %}
                                      }
                                      }
                                - type: conditional
                                  conditions:
                                    - entity: camera.dalg_cam8_high
                                      state_not: recording
                                  card:
                                    entity: camera.dalg_cam8_high
                                    hide:
                                      icon: true
                                      name: true
                                      runtime: true
                                      source: true
                                      power: true
                                      state_label: true
                                      volume: true
                                      info: true
                                      progress: false
                                      controls: true
                                    more_info: false
                                    type: custom:mini-media-player
                                    toggle_power: false
                                    group: true
                                    card_mod:
                                      style:
                                        mmp-progress$: |
                                          paper-progress {
                                            {{ '--paper-progress-container-color: rgba(var(--rgb-indigo-color), 0.2) !important;' if is_state(config.entity, 'recording') }}
                                          }
                                        .: |
                                          ha-card {
                                            margin: 0px 12px 12px;
                                            --mmp-progress-height: 12px !important;
                                            height: var(--mmp-progress-height);
                                            --mmp-accent-color: rgb(var(--rgb-indigo-color));
                                            --mmp-border-radius: 12px !important;
                                            --ha-card-border-width: 0;
                                          }
                              card_mod:
                                style: |
                                  ha-card:before {
                                    transform: translate3d(0,0,0);
                                    -webkit-transform: translate3d(0,0,0);
                                    content: "";
                                    position: absolute;
                                    height: 100%;
                                    width: 100%;

                                    background: url('/local/mushroom/UI.png') center no-repeat;
                                    {% if not is_state('camera.dalg_cam8_high', 'unavailable') %}
                                      background: url( '{{ state_attr('camera.dalg_cam8_high', "entity_picture") }}' ) center no-repeat;
                                    {% endif %}

                                    filter: blur(150px) saturate(200%);
                                    background-size: 100% 100%;
                                  }
                                  ha-card {
                                    transform: translate3d(0,0,0);
                                    -webkit-transform: translate3d(0,0,0);
                                  }
                  card_mod:
                    style: |
                      ha-card {
                        {% if is_state( 'binary_sensor.dalg_cam8_motion', 'on') %}
                          background-image: url( '{{ state_attr( 'camera.dalg_cam8_high', "entity_picture" ) }}' );
                          background-position: center;
                          background-repeat: no-repeat;
                          background-size: cover;
                          background-color: rgba(var(--rgb-card-background-color),0.5);
                          background-blend-mode: overlay;
                          --primary-text-color: transparent;
                          --secondary-text-color: transparent;
                        {% else %}
                          background-color: rgb(19, 51, 104);
                        {% endif %}
                        }
                      ha-card:active {
                        background: rgba(var(--rgb-disabled), 0.9);
                        transform: scale(0.915);
                        transition: 0s;
                       }
                        mushroom-shape-icon {
                          --icon-size: 65px;
      - type: conditional
        conditions:
          - entity: media_player.currently_playing
            state_not: playing
          - entity: media_player.currently_playing
            state_not: paused
        card:
          type: custom:local-conditional-card
          default: hide
          id: media
          card:
            type: custom:stack-in-card
            layout_type: masonry
            layout: {}
            cards:
              - type: custom:layout-card
                cards:
                  - type: custom:swipe-card
                    parameters:
                      spaceBetween: 8
                      effect: slide
                      scrollbar:
                        hide: false
                        draggable: true
                        snapOnRelease: true
                      autoplay:
                        delai: 10
                    cards:
                      - square: false
                        columns: 3
                        type: grid
                        cards:
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.plex_recently_movies_poster_1') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -13px -12px -13px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.plex_recently_movies_poster_2') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -13px -12px -13px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.plex_recently_movies_poster_3') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -13px -12px -13px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.plex_recently_movies_poster_4') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -13px -12px -13px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.plex_recently_movies_poster_5') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -13px -12px -13px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.plex_recently_movies_poster_6') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -13px -12px -13px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.plex_recently_movies_poster_7') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -13px -12px -13px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.plex_recently_movies_poster_8') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -13px -12px -13px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.plex_recently_movies_poster_9') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -13px -12px -13px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.plex_recently_movies_poster_10') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -13px -12px -13px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.plex_recently_movies_poster_11') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -13px -12px -13px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.plex_recently_movies_poster_12') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -13px -12px -13px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.plex_recently_movies_poster_13') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -13px -12px -13px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.plex_recently_movies_poster_14') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -13px -12px -13px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.plex_recently_movies_poster_15') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -13px -12px -13px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                      - square: false
                        columns: 3
                        type: grid
                        cards:
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.plex_recently_tvshow_poster_1') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -13px -12px -13px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.plex_recently_tvshow_poster_2') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -13px -12px -13px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.plex_recently_tvshow_poster_3') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -13px -12px -13px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.plex_recently_tvshow_poster_4') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -13px -12px -13px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.plex_recently_tvshow_poster_5') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -13px -12px -13px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.plex_recently_tvshow_poster_6') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -13px -12px -13px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.plex_recently_tvshow_poster_7') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -13px -12px -13px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.plex_recently_tvshow_poster_8') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -13px -12px -13px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.plex_recently_tvshow_poster_9') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -13px -12px -13px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.plex_recently_tvshow_poster_10') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -13px -12px -13px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.plex_recently_tvshow_poster_11') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -13px -12px -13px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.plex_recently_tvshow_poster_12') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -13px -12px -13px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.plex_recently_tvshow_poster_13') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -13px -12px -13px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.plex_recently_tvshow_poster_14') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -13px -12px -13px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.plex_recently_tvshow_poster_15') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -13px -12px -13px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                      - square: false
                        columns: 3
                        type: grid
                        cards:
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                  margin-left: 2px;
                                  box-shadow: none !important;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 23px !important;
                                  background: url( '{{ states('sensor.sonarr_recently_movies_poster_1') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -14px -12px -14px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                  box-shadow: none !important;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 23px !important;
                                  background: url( '{{ states('sensor.sonarr_recently_movies_poster_2') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -14px -12px -15px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                  box-shadow: none !important;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.sonarr_recently_movies_poster_3') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -14px -12px -14px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                  margin-right: 2px;
                                  box-shadow: none !important;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.sonarr_recently_movies_poster_4') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -14px -12px -14px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                  box-shadow: none !important;
                                  margin-left: 2px;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.sonarr_recently_movies_poster_5') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -14px -12px -14px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.sonarr_recently_movies_poster_6') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -14px -12px -14px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.sonarr_recently_movies_poster_7') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -14px -12px -14px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.sonarr_recently_movies_poster_8') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -14px -12px -14px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                          - type: custom:mushroom-media-player-card
                            entity: media_player.plex_tv
                            primary_info: none
                            secondary_info: none
                            icon_type: none
                            use_media_info: false
                            use_media_artwork: false
                            show_volume_level: false
                            fill_container: false
                            card_mod:
                              style: |
                                ha-card {
                                  --ha-card-border-width: 0;
                                  margin-left: 2px;
                                }
                                ha-card:before {
                                  transform: translate3d(0,0,0);
                                  -webkit-transform: translate3d(0,0,0);
                                  content: "";
                                  border-radius: 20px !important;
                                  background: url( '{{ states('sensor.sonarr_recently_movies_poster_9') }}') center no-repeat;
                                  box-shadow: none !important;
                                  background-size: contain;
                                  margin: -14px -12px -14px;
                                  border-radius: var(--control-border-radius);
                                  aspect-ratio: 2 / 3;
                                }
                    card_mod:
                      style: |
                        ha-card {
                          background: rgba(var(--rgb-primary-background-color), 1);
                          margin-top: -10px;
                          box-shadow: none;
                        }
            card_mod:
              style: |
                ha-card {
                  background-color: rgba(var(--rgb-card-background-color),0.1);
                  margin-bottom: 80px !important;
                }
      - type: conditional
        conditions:
          - entity: media_player.plex_tv
            state_not: 'off'
          - entity: media_player.plex_tv
            state_not: idle
          - entity: media_player.plex_tv
            state_not: unavailable
        card:
          type: custom:local-conditional-card
          default: hide
          id: media
          card:
            type: custom:stack-in-card
            keep:
              box_shadow: false
              border_radius: true
              margin: true
              outer_padding: false
              background: false
            cards:
              - type: grid
                columns: 2
                square: false
                cards:
                  - type: conditional
                    conditions:
                      - entity: media_player.plex_tv
                        state_not: playing
                      - entity: media_player.plex_tv
                        state_not: paused
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:mushroom-media-player-card
                          entity: media_player.plex_tv
                          primary_info: none
                          secondary_info: none
                          icon_type: none
                          use_media_info: false
                          use_media_artwork: false
                          show_volume_level: false
                          fill_container: false
                          card_mod:
                            style: |
                              ha-card:before {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                content: "";
                                
                               background: url('{{ states('sensor.plex_recently_all_poster_1') }}') center no-repeat;
                                {% if not is_state(config.entity, 'unavailable') %}
                                  background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                {% endif %}
                               background-size: contain;

                                border-radius: var(--control-border-radius);
                               {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                {% if media_type == 'tvshow' %}
                                  aspect-ratio: 16 / 9;
                                {% elif media_type == 'movie' %}
                                  aspect-ratio: 2 / 3;
                                {% elif media_type == 'music' %}
                                  aspect-ratio: 1 / 1;
                                {% else %}
                                  aspect-ratio: 2 / 3;
                                {% endif %}
                              }
                              ha-card {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                border-radius: 30px;
                                overflow: visible !important;
                                box-shadow: none !important;
                                background-color: transparent;
                                border: none !important;
                              }
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.plex_tv_tvshow_content_type
                        state: 'on'
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:mushroom-media-player-card
                          entity: media_player.plex_tv
                          primary_info: none
                          secondary_info: none
                          icon_type: none
                          use_media_info: false
                          use_media_artwork: false
                          show_volume_level: false
                          fill_container: false
                          card_mod:
                            style: |
                              ha-card:before {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                content: "";
                                
                               background: url('/local/mushroom/idle_art.png') center no-repeat;
                                {% if not is_state(config.entity, 'unavailable') %}
                                  background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                {% endif %}
                               background-size: contain;

                                border-radius: var(--control-border-radius);
                               {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                {% if media_type == 'tvshow' %}
                                  aspect-ratio: 16 / 9;
                                  margin: 0px -45px 0px 0px;
                                  margin-top: 1px;
                                {% elif media_type == 'movie' %}
                                  aspect-ratio: 2 / 3;
                                {% else %}
                                  aspect-ratio: 1 / 1;
                                  width: 99%;
                                {% endif %}
                              }
                              ha-card {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                border-radius: 30px;
                                overflow: visible !important;
                                box-shadow: none !important;
                                background-color: transparent;
                                border: none !important;
                              }
                        - type: conditional
                          conditions:
                            - entity: binary_sensor.plex_tv_tvshow_content_type
                              state: 'on'
                          card:
                            type: custom:mushroom-chips-card
                            chips:
                              - type: template
                                content: >
                                  {{ state_attr('media_player.plex_tv',
                                  'media_library_title') }}
                                entity: media_player.plex_tv
                                tap_action:
                                  action: none
                            alignment: center
                            card_mod:
                              style:
                                style: |
                                  ha-card {
                                    margin: 0px 0px 10px 40px;
                                    --chip-background: rgba(var(--rgb-disabled), 0.15);
                                    --ha-card-box-shadow: none;
                                    --chip-border-radius: 12px;
                                    --chip-height: 35px;
                                    --chip-padding: 60px;
                                  }
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.plex_tv_music_content_type
                        state: 'on'
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:mushroom-media-player-card
                          entity: media_player.plex_tv
                          primary_info: none
                          secondary_info: none
                          icon_type: none
                          use_media_info: false
                          use_media_artwork: false
                          show_volume_level: false
                          fill_container: false
                          card_mod:
                            style: |
                              ha-card:before {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                content: "";
                                
                               background: url('/local/mushroom/idle_art.png') center no-repeat;
                                {% if not is_state(config.entity, 'unavailable') %}
                                  background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                {% endif %}
                               background-size: contain;

                                border-radius: var(--control-border-radius);
                               {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                {% if media_type == 'tvshow' %}
                                  aspect-ratio: 16 / 9;
                                  margin: 0px -5px -20px -20px;
                                  margin-top: 20px;
                                {% elif media_type == 'movie' %}
                                  aspect-ratio: 2 / 3;
                                {% else %}
                                  aspect-ratio: 1 / 1;
                                  width: 99%;
                                {% endif %}
                              ha-card {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                border-radius: 30px;
                                overflow: visible !important;
                                box-shadow: none !important;
                                background-color: transparent;
                                border: none !important;
                              }
                        - type: conditional
                          conditions:
                            - entity: binary_sensor.plex_tv_music_content_type
                              state: 'on'
                          card:
                            type: custom:mushroom-chips-card
                            chips:
                              - type: template
                                content: >
                                  {{ state_attr('media_player.plex_tv',
                                  'media_library_title') }}
                                entity: media_player.plex_tv
                                tap_action:
                                  action: none
                            alignment: center
                            card_mod:
                              style:
                                style: |
                                  ha-card {
                                    margin: -10px 0px 10px 0;
                                    --chip-background: rgba(var(--rgb-disabled), 0.15);
                                    --ha-card-box-shadow: none;
                                    --chip-border-radius: 12px;
                                    --chip-height: 35px;
                                    --chip-padding: 60px;
                                  }
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.plex_tv_movie_content_type
                        state: 'on'
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:mushroom-media-player-card
                          entity: media_player.plex_tv
                          primary_info: none
                          secondary_info: none
                          icon_type: none
                          use_media_info: false
                          use_media_artwork: false
                          show_volume_level: false
                          fill_container: false
                          card_mod:
                            style: |
                              ha-card:before {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                content: "";
                                
                               background: url('/local/mushroom/idle_art.png') center no-repeat;
                                {% if not is_state(config.entity, 'unavailable') %}
                                  background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                {% endif %}
                               background-size: contain;

                                border-radius: var(--control-border-radius);
                               {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                {% if media_type == 'tvshow' %}
                                  aspect-ratio: 16 / 9;
                                  margin: 0px -5px -20px -20px;
                                  margin-top: 20px;
                                {% elif media_type == 'movie' %}
                                  aspect-ratio: 2 / 3;
                                {% else %}
                                  aspect-ratio: 1 / 1;
                                  width: 99%;
                                {% endif %}
                              }
                  - type: grid
                    columns: 1
                    square: false
                    cards:
                      - type: vertical-stack
                        cards:
                          - type: custom:mushroom-title-card
                            title: Philips TV
                            subtitle: >
                              {% if is_state('media_player.plex_tv', 'playing')
                              %}
                                Lecture en cours
                              {% elif is_state('media_player.plex_tv', 'paused')
                              %}
                                En pause
                              {% else %}
                                En veille
                              {% endif %}
                            alignment: center
                          - type: conditional
                            conditions:
                              - entity: media_player.plex_tv
                                state_not: unavailable
                            card:
                              type: custom:mushroom-chips-card
                              chips:
                                - type: template
                                  icon: mdi:skip-backward
                                  entity: media_player.plex_tv
                                  tap_action:
                                    action: call-service
                                    service: media_player.media_previous_track
                                    data: {}
                                    target:
                                      entity_id: media_player.plex_tv
                                  card_mod:
                                    style:
                                      style: |
                                        ha-card {
                                          margin: 0px 10px 0px 0;
                                          --chip-background: rgba(var(--rgb-disabled), 0.15);
                                          --ha-card-box-shadow: none;
                                          --chip-border-radius: 12px;
                                          --chip-height: 35px;
                                          --chip-padding: 10px;
                                        }
                                - type: template
                                  entity: media_player.plex_tv
                                  icon: >-
                                    {% if is_state('media_player.plex_tv',
                                    'playing') %}
                                      mdi:pause
                                    {% else %}
                                      mdi:play
                                    {% endif %}
                                  tap_action:
                                    action: call-service
                                    service: media_player.media_play_pause
                                    data: {}
                                    target:
                                      entity_id: media_player.plex_tv
                                  card_mod:
                                    style:
                                      style: |
                                        ha-card {
                                          margin: 0px 0px 0px 0;
                                          --chip-background: rgba(var(--rgb-disabled), 0.15);
                                          --ha-card-box-shadow: none;
                                          --chip-border-radius: 12px;
                                          --chip-height: 35px;
                                          --chip-padding: 10px;
                                        }
                                - type: template
                                  entity: media_player.plex_tv
                                  icon: mdi:skip-forward
                                  tap_action:
                                    action: call-service
                                    service: media_player.media_next_track
                                    data: {}
                                    target:
                                      entity_id: media_player.plex_tv
                                  card_mod:
                                    style:
                                      style: |
                                        ha-card {
                                          margin: 0px 0px 0px 10px;
                                          --chip-background: rgba(var(--rgb-disabled), 0.15);
                                          --ha-card-box-shadow: none;
                                          --chip-border-radius: 12px;
                                          --chip-height: 35px;
                                          --chip-padding: 10px;
                                        }
                              alignment: center
                          - type: conditional
                            conditions:
                              - entity: binary_sensor.plex_tv_movie_content_type
                                state: 'on'
                            card:
                              type: custom:mushroom-chips-card
                              chips:
                                - type: template
                                  content: >
                                    {{ state_attr('media_player.plex_tv',
                                    'media_library_title') }}
                                  entity: media_player.plex_tv
                                  tap_action:
                                    action: none
                              alignment: center
                              card_mod:
                                style:
                                  style: |
                                    ha-card {
                                      margin: 20px 0 0 0;
                                      --chip-background: rgba(var(--rgb-disabled), 0.15);
                                      --ha-card-box-shadow: none;
                                      --chip-border-radius: 12px;
                                      --chip-height: 35px;
                                      --chip-padding: 60px;
                                    }
                          - type: conditional
                            conditions:
                              - entity: binary_sensor.plex_tv_music_content_type
                                state: 'on'
                            card:
                              type: custom:mushroom-title-card
                              title: ''
                              alignment: center
                              subtitle: >-
                                {{ state_attr('media_player.plex_tv',
                                'media_artist') }} - {{
                                state_attr('media_player.plex_tv',
                                'media_title') }}
                          - type: conditional
                            conditions:
                              - entity: binary_sensor.plex_tv_movie_content_type
                                state: 'on'
                            card:
                              type: custom:mushroom-title-card
                              title: ''
                              alignment: center
                              subtitle: >-
                                {{ state_attr('media_player.plex_tv',
                                'media_title') }}
                          - type: conditional
                            conditions:
                              - entity: binary_sensor.plex_tv_tvshow_content_type
                                state: 'on'
                            card:
                              type: custom:mushroom-title-card
                              title: ''
                              alignment: center
                              subtitle: >-
                                {{ state_attr('media_player.plex_tv',
                                'media_series_title') }}
            card_mod:
              style: |
                ha-card:before {
                  transform: translate3d(0,0,0);
                  -webkit-transform: translate3d(0,0,0);
                  content: "";
                  position: absolute;
                  height: 100%;
                  width: 100%;

                  background: url('{{ state_attr('media_player.plex_tv', "entity_picture") }}') center no-repeat;
                  {% if not is_state('sensor.recently_added', 'Online') %}
                    background: url('{{ states('sensor.plex_recently_all_poster_1_poster_1') }}') center no-repeat;
                  {% endif %}

                  filter: blur(150px) saturate(200%);
                  background-size: 100% 100%;
                }
                ha-card {
                  transform: translate3d(0,0,0);
                  -webkit-transform: translate3d(0,0,0);
                }
      - type: conditional
        conditions:
          - entity: media_player.plex_nvidia_shield
            state_not: 'off'
          - entity: media_player.plex_nvidia_shield
            state_not: idle
          - entity: media_player.plex_nvidia_shield
            state_not: unavailable
        card:
          type: custom:local-conditional-card
          default: hide
          id: media
          card:
            type: custom:stack-in-card
            keep:
              box_shadow: false
              border_radius: true
              margin: true
              outer_padding: false
              background: false
            cards:
              - type: grid
                columns: 2
                square: false
                cards:
                  - type: conditional
                    conditions:
                      - entity: media_player.plex_nvidia_shield
                        state_not: playing
                      - entity: media_player.plex_nvidia_shield
                        state_not: paused
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:mushroom-media-player-card
                          entity: media_player.plex_nvidia_shield
                          primary_info: none
                          secondary_info: none
                          icon_type: none
                          use_media_info: false
                          use_media_artwork: false
                          show_volume_level: false
                          fill_container: false
                          card_mod:
                            style: |
                              ha-card:before {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                content: "";
                                
                               background: url('{{ states('sensor.plex_recently_all_poster_1') }}') center no-repeat;
                                {% if not is_state(config.entity, 'unavailable') %}
                                  background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                {% endif %}
                               background-size: contain;

                                border-radius: var(--control-border-radius);
                               {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                {% if media_type == 'tvshow' %}
                                  aspect-ratio: 16 / 9;
                                {% elif media_type == 'movie' %}
                                  aspect-ratio: 2 / 3;
                                {% elif media_type == 'music' %}
                                  aspect-ratio: 1 / 1;
                                {% else %}
                                  aspect-ratio: 2 / 3;
                                {% endif %}
                              }
                              ha-card {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                border-radius: 30px;
                                overflow: visible !important;
                                box-shadow: none !important;
                                background-color: transparent;
                                border: none !important;
                              }
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.plex_nvidia_tvshow_content_type
                        state: 'on'
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:mushroom-media-player-card
                          entity: media_player.plex_nvidia_shield
                          primary_info: none
                          secondary_info: none
                          icon_type: none
                          use_media_info: false
                          use_media_artwork: false
                          show_volume_level: false
                          fill_container: false
                          card_mod:
                            style: |
                              ha-card:before {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                content: "";
                                
                               background: url('/local/mushroom/idle_art.png') center no-repeat;
                                {% if not is_state(config.entity, 'unavailable') %}
                                  background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                {% endif %}
                               background-size: contain;

                                border-radius: var(--control-border-radius);
                               {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                {% if media_type == 'tvshow' %}
                                  aspect-ratio: 16 / 9;
                                  margin: 0px -45px 0px 0px;
                                  margin-top: 1px;
                                {% elif media_type == 'movie' %}
                                  aspect-ratio: 2 / 3;
                                {% else %}
                                  aspect-ratio: 1 / 1;
                                  width: 99%;
                                {% endif %}
                              }
                              ha-card {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                border-radius: 30px;
                                overflow: visible !important;
                                box-shadow: none !important;
                                background-color: transparent;
                                border: none !important;
                              }
                        - type: conditional
                          conditions:
                            - entity: binary_sensor.plex_nvidia_tvshow_content_type
                              state: 'on'
                          card:
                            type: custom:mushroom-chips-card
                            chips:
                              - type: template
                                content: >
                                  {{
                                  state_attr('media_player.plex_nvidia_shield',
                                  'media_library_title') }}
                                entity: media_player.plex_nvidia_shield
                                tap_action:
                                  action: none
                            alignment: center
                            card_mod:
                              style:
                                style: |
                                  ha-card {
                                    margin: 0px 0px 10px 40px;
                                    --chip-background: rgba(var(--rgb-disabled), 0.15);
                                    --ha-card-box-shadow: none;
                                    --chip-border-radius: 12px;
                                    --chip-height: 35px;
                                    --chip-padding: 60px;
                                  }
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.plex_nvidia_music_content_type
                        state: 'on'
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:mushroom-media-player-card
                          entity: media_player.plex_nvidia_shield
                          primary_info: none
                          secondary_info: none
                          icon_type: none
                          use_media_info: false
                          use_media_artwork: false
                          show_volume_level: false
                          fill_container: false
                          card_mod:
                            style: |
                              ha-card:before {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                content: "";
                                
                               background: url('/local/mushroom/idle_art.png') center no-repeat;
                                {% if not is_state(config.entity, 'unavailable') %}
                                  background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                {% endif %}
                               background-size: contain;

                                border-radius: var(--control-border-radius);
                               {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                {% if media_type == 'tvshow' %}
                                  aspect-ratio: 16 / 9;
                                  margin: 0px -5px -20px -20px;
                                  margin-top: 20px;
                                {% elif media_type == 'movie' %}
                                  aspect-ratio: 2 / 3;
                                {% else %}
                                  aspect-ratio: 1 / 1;
                                  width: 99%;
                                {% endif %}
                              ha-card {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                border-radius: 30px;
                                overflow: visible !important;
                                box-shadow: none !important;
                                background-color: transparent;
                                border: none !important;
                              }
                        - type: conditional
                          conditions:
                            - entity: binary_sensor.plex_nvidia_music_content_type
                              state: 'on'
                          card:
                            type: custom:mushroom-chips-card
                            chips:
                              - type: template
                                content: >
                                  {{
                                  state_attr('media_player.plex_nvidia_shield',
                                  'media_library_title') }}
                                entity: media_player.plex_nvidia_shield
                                tap_action:
                                  action: none
                            alignment: center
                            card_mod:
                              style:
                                style: |
                                  ha-card {
                                    margin: -10px 0px 10px 0;
                                    --chip-background: rgba(var(--rgb-disabled), 0.15);
                                    --ha-card-box-shadow: none;
                                    --chip-border-radius: 12px;
                                    --chip-height: 35px;
                                    --chip-padding: 60px;
                                  }
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.plex_nvidia_movie_content_type
                        state: 'on'
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:mushroom-media-player-card
                          entity: media_player.plex_nvidia_shield
                          primary_info: none
                          secondary_info: none
                          icon_type: none
                          use_media_info: false
                          use_media_artwork: false
                          show_volume_level: false
                          fill_container: false
                          card_mod:
                            style: |
                              ha-card:before {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                content: "";
                                
                               background: url('/local/mushroom/idle_art.png') center no-repeat;
                                {% if not is_state(config.entity, 'unavailable') %}
                                  background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                {% endif %}
                               background-size: contain;

                                border-radius: var(--control-border-radius);
                               {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                {% if media_type == 'tvshow' %}
                                  aspect-ratio: 16 / 9;
                                  margin: 0px -5px -20px -20px;
                                  margin-top: 20px;
                                {% elif media_type == 'movie' %}
                                  aspect-ratio: 2 / 3;
                                {% else %}
                                  aspect-ratio: 1 / 1;
                                  width: 99%;
                                {% endif %}
                              }
                  - type: grid
                    columns: 1
                    square: false
                    cards:
                      - type: vertical-stack
                        cards:
                          - type: custom:mushroom-title-card
                            title: Nvidia Shield
                            subtitle: >
                              {% if is_state('media_player.plex_nvidia_shield',
                              'playing') %}
                                Lecture en cours
                              {% elif
                              is_state('media_player.plex_nvidia_shield',
                              'paused') %}
                                En pause
                              {% else %}
                                En veille
                              {% endif %}
                            alignment: center
                          - type: conditional
                            conditions:
                              - entity: media_player.plex_nvidia_shield
                                state_not: unavailable
                            card:
                              type: custom:mushroom-chips-card
                              chips:
                                - type: template
                                  icon: mdi:skip-backward
                                  entity: media_player.plex_nvidia_shield
                                  tap_action:
                                    action: call-service
                                    service: media_player.media_previous_track
                                    data: {}
                                    target:
                                      entity_id: media_player.plex_nvidia_shield
                                  card_mod:
                                    style:
                                      style: |
                                        ha-card {
                                          margin: 0px 10px 0px 0;
                                          --chip-background: rgba(var(--rgb-disabled), 0.15);
                                          --ha-card-box-shadow: none;
                                          --chip-border-radius: 12px;
                                          --chip-height: 35px;
                                          --chip-padding: 10px;
                                        }
                                - type: template
                                  entity: media_player.plex_nvidia_shield
                                  icon: >-
                                    {% if
                                    is_state('media_player.plex_nvidia_shield',
                                    'playing') %}
                                      mdi:pause
                                    {% else %}
                                      mdi:play
                                    {% endif %}
                                  tap_action:
                                    action: call-service
                                    service: media_player.media_play_pause
                                    data: {}
                                    target:
                                      entity_id: media_player.plex_nvidia_shield
                                  card_mod:
                                    style:
                                      style: |
                                        ha-card {
                                          margin: 0px 0px 0px 0;
                                          --chip-background: rgba(var(--rgb-disabled), 0.15);
                                          --ha-card-box-shadow: none;
                                          --chip-border-radius: 12px;
                                          --chip-height: 35px;
                                          --chip-padding: 10px;
                                        }
                                - type: template
                                  entity: media_player.plex_nvidia_shield
                                  icon: mdi:skip-forward
                                  tap_action:
                                    action: call-service
                                    service: media_player.media_next_track
                                    data: {}
                                    target:
                                      entity_id: media_player.plex_nvidia_shield
                                  card_mod:
                                    style:
                                      style: |
                                        ha-card {
                                          margin: 0px 0px 0px 10px;
                                          --chip-background: rgba(var(--rgb-disabled), 0.15);
                                          --ha-card-box-shadow: none;
                                          --chip-border-radius: 12px;
                                          --chip-height: 35px;
                                          --chip-padding: 10px;
                                        }
                              alignment: center
                          - type: conditional
                            conditions:
                              - entity: binary_sensor.plex_nvidia_movie_content_type
                                state: 'on'
                            card:
                              type: custom:mushroom-chips-card
                              chips:
                                - type: template
                                  content: >
                                    {{
                                    state_attr('media_player.plex_nvidia_shield',
                                    'media_library_title') }}
                                  entity: media_player.plex_nvidia_shield
                                  tap_action:
                                    action: none
                              alignment: center
                              card_mod:
                                style:
                                  style: |
                                    ha-card {
                                      margin: 20px 0 0 0;
                                      --chip-background: rgba(var(--rgb-disabled), 0.15);
                                      --ha-card-box-shadow: none;
                                      --chip-border-radius: 12px;
                                      --chip-height: 35px;
                                      --chip-padding: 60px;
                                    }
                          - type: conditional
                            conditions:
                              - entity: binary_sensor.plex_nvidia_music_content_type
                                state: 'on'
                            card:
                              type: custom:mushroom-title-card
                              title: ''
                              alignment: center
                              subtitle: >-
                                {{ state_attr('media_player.plex_nvidia_shield',
                                'media_artist') }} - {{
                                state_attr('media_player.plex_nvidia_shield',
                                'media_title') }}
                          - type: conditional
                            conditions:
                              - entity: binary_sensor.plex_nvidia_movie_content_type
                                state: 'on'
                            card:
                              type: custom:mushroom-title-card
                              title: ''
                              alignment: center
                              subtitle: >-
                                {{ state_attr('media_player.plex_nvidia_shield',
                                'media_title') }}
                          - type: conditional
                            conditions:
                              - entity: binary_sensor.plex_nvidia_tvshow_content_type
                                state: 'on'
                            card:
                              type: custom:mushroom-title-card
                              title: ''
                              alignment: center
                              subtitle: >-
                                {{ state_attr('media_player.plex_nvidia_shield',
                                'media_series_title') }}
            card_mod:
              style: |
                ha-card:before {
                  transform: translate3d(0,0,0);
                  -webkit-transform: translate3d(0,0,0);
                  content: "";
                  position: absolute;
                  height: 100%;
                  width: 100%;

                  background: url('{{ state_attr('media_player.plex_nvidia_shield', "entity_picture") }}') center no-repeat;
                  {% if not is_state('sensor.recently_added', 'Online') %}
                    background: url('{{ states('sensor.plex_recently_all_poster_1_poster_1') }}') center no-repeat;
                  {% endif %}

                  filter: blur(150px) saturate(200%);
                  background-size: 100% 100%;
                }
                ha-card {
                  transform: translate3d(0,0,0);
                  -webkit-transform: translate3d(0,0,0);
                }
      - type: conditional
        conditions:
          - entity: media_player.plex_iphone_damien
            state_not: 'off'
          - entity: media_player.plex_iphone_damien
            state_not: idle
          - entity: media_player.plex_iphone_damien
            state_not: unavailable
        card:
          type: custom:local-conditional-card
          default: hide
          id: media
          card:
            type: custom:stack-in-card
            keep:
              box_shadow: false
              border_radius: true
              margin: true
              outer_padding: false
              background: false
            cards:
              - type: grid
                columns: 2
                square: false
                cards:
                  - type: grid
                    columns: 1
                    square: false
                    cards:
                      - type: vertical-stack
                        cards:
                          - type: custom:mushroom-title-card
                            title: iPhone Dam
                            subtitle: >
                              {% if is_state('media_player.plex_iphone_damien',
                              'playing') %}
                                Lecture en cours
                              {% elif
                              is_state('media_player.plex_iphone_damien',
                              'paused') %}
                                En pause
                              {% else %}
                                En veille
                              {% endif %}
                            alignment: center
                          - type: conditional
                            conditions:
                              - entity: media_player.plex_iphone_damien
                                state_not: unavailable
                              - entity: media_player.plex_iphone_damien
                                state_not: idle
                            card:
                              type: custom:mushroom-chips-card
                              chips:
                                - type: template
                                  icon: mdi:skip-backward
                                  entity: media_player.plex_iphone_damien
                                  tap_action:
                                    action: call-service
                                    service: media_player.media_previous_track
                                    data: {}
                                    target:
                                      entity_id: media_player.plex_iphone_damien
                                  card_mod:
                                    style:
                                      style: |
                                        ha-card {
                                          margin: 0px 10px 0px 0;
                                          --chip-background: rgba(var(--rgb-disabled), 0.15);
                                          --ha-card-box-shadow: none;
                                          --chip-border-radius: 12px;
                                          --chip-height: 35px;
                                          --chip-padding: 10px;
                                        }
                                - type: template
                                  entity: media_player.plex_iphone_damien
                                  icon: >-
                                    {% if
                                    is_state('media_player.plex_iphone_damien',
                                    'playing') %}
                                      mdi:pause
                                    {% else %}
                                      mdi:play
                                    {% endif %}
                                  tap_action:
                                    action: call-service
                                    service: media_player.media_play_pause
                                    data: {}
                                    target:
                                      entity_id: media_player.plex_iphone_damien
                                  card_mod:
                                    style:
                                      style: |
                                        ha-card {
                                          margin: 0px 0px 0px 0px;
                                          --chip-background: rgba(var(--rgb-disabled), 0.15);
                                          --ha-card-box-shadow: none;
                                          --chip-border-radius: 12px;
                                          --chip-height: 35px;
                                          --chip-padding: 10px;
                                        }
                                - type: template
                                  entity: media_player.plex_iphone_damien
                                  icon: mdi:skip-forward
                                  tap_action:
                                    action: call-service
                                    service: media_player.media_next_track
                                    data: {}
                                    target:
                                      entity_id: media_player.plex_iphone_damien
                                  card_mod:
                                    style:
                                      style: |
                                        ha-card {
                                          margin: 0px 0px 0px 10px;
                                          --chip-background: rgba(var(--rgb-disabled), 0.15);
                                          --ha-card-box-shadow: none;
                                          --chip-border-radius: 12px;
                                          --chip-height: 35px;
                                          --chip-padding: 10px;
                                        }
                              alignment: center
                          - type: conditional
                            conditions:
                              - entity: binary_sensor.plex_iphone_movie_content_type
                                state: 'on'
                            card:
                              type: custom:mushroom-chips-card
                              chips:
                                - type: template
                                  content: >
                                    {{
                                    state_attr('media_player.plex_iphone_damien',
                                    'media_library_title') }}
                                  entity: media_player.plex_iphone_damien
                                  tap_action:
                                    action: none
                              alignment: center
                              card_mod:
                                style:
                                  style: |
                                    ha-card {
                                      margin: 20px 0 0 0;
                                      --chip-background: rgba(var(--rgb-disabled), 0.15);
                                      --ha-card-box-shadow: none;
                                      --chip-border-radius: 12px;
                                      --chip-height: 35px;
                                      --chip-padding: 60px;
                                    }
                          - type: conditional
                            conditions:
                              - entity: binary_sensor.plex_iphone_music_content_type
                                state: 'on'
                            card:
                              type: custom:mushroom-title-card
                              title: ''
                              alignment: center
                              subtitle: >-
                                {{ state_attr('media_player.plex_iphone_damien',
                                'media_artist') }} - {{
                                state_attr('media_player.plex_iphone_damien',
                                'media_title') }}
                          - type: conditional
                            conditions:
                              - entity: binary_sensor.plex_iphone_movie_content_type
                                state: 'on'
                            card:
                              type: custom:mushroom-title-card
                              title: ''
                              alignment: center
                              subtitle: >-
                                {{ state_attr('media_player.plex_iphone_damien',
                                'media_title') }}
                          - type: conditional
                            conditions:
                              - entity: binary_sensor.plex_iphone_tvshow_content_type
                                state: 'on'
                            card:
                              type: custom:mushroom-title-card
                              title: ''
                              alignment: center
                              subtitle: >-
                                {{ state_attr('media_player.plex_iphone_damien',
                                'media_series_title') }}
                  - type: conditional
                    conditions:
                      - entity: media_player.plex_iphone_damien
                        state_not: playing
                      - entity: media_player.plex_iphone_damien
                        state_not: paused
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:mushroom-media-player-card
                          entity: media_player.plex_iphone_damien
                          primary_info: none
                          secondary_info: none
                          icon_type: none
                          use_media_info: false
                          use_media_artwork: false
                          show_volume_level: false
                          fill_container: false
                          card_mod:
                            style: |
                              ha-card:before {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                content: "";
                                
                               background: url('/local/mushroom/idle_art.png') center no-repeat;
                                {% if not is_state(config.entity, 'unavailable') and not is_state(config.entity, 'idle') %}
                                  background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                {% endif %}
                               background-size: contain;

                                border-radius: var(--control-border-radius);
                               {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                {% if media_type == 'tvshow' %}
                                  aspect-ratio: 16 / 9;
                                {% elif media_type == 'movie' %}
                                  aspect-ratio: 2 / 3;
                                {% else %}
                                  aspect-ratio: 1 / 1;
                                {% endif %}
                              }
                              ha-card {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                border-radius: 30px;
                                overflow: visible !important;
                                box-shadow: none !important;
                                background-color: transparent;
                                border: none !important;
                              }
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.plex_iphone_tvshow_content_type
                        state: 'on'
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:mushroom-media-player-card
                          entity: media_player.plex_iphone_damien
                          primary_info: none
                          secondary_info: none
                          icon_type: none
                          use_media_info: false
                          use_media_artwork: false
                          show_volume_level: false
                          fill_container: false
                          card_mod:
                            style: |
                              ha-card:before {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                content: "";
                                
                               background: url('/local/mushroom/idle_art.png') center no-repeat;
                                {% if not is_state(config.entity, 'unavailable') %}
                                  background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                {% endif %}
                               background-size: contain;

                                border-radius: var(--control-border-radius);
                               {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                {% if media_type == 'tvshow' %}
                                  aspect-ratio: 16 / 9;
                                  margin: 0px 0px 0px -45px;
                                  margin-top: 1px;
                                {% elif media_type == 'movie' %}
                                  aspect-ratio: 2 / 3;
                                {% else %}
                                  aspect-ratio: 1 / 1;
                                  width: 99%;
                                {% endif %}
                              }
                              ha-card {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                border-radius: 30px;
                                overflow: visible !important;
                                box-shadow: none !important;
                                background-color: transparent;
                                border: none !important;
                              }
                        - type: conditional
                          conditions:
                            - entity: binary_sensor.plex_iphone_tvshow_content_type
                              state: 'on'
                          card:
                            type: custom:mushroom-chips-card
                            chips:
                              - type: template
                                content: >
                                  {{
                                  state_attr('media_player.plex_iphone_damien',
                                  'media_library_title') }}
                                entity: media_player.plex_iphone_damien
                                tap_action:
                                  action: none
                            alignment: center
                            card_mod:
                              style:
                                style: |
                                  ha-card {
                                    margin: 0px 40px 10px 0px;
                                    --chip-background: rgba(var(--rgb-disabled), 0.15);
                                    --ha-card-box-shadow: none;
                                    --chip-border-radius: 12px;
                                    --chip-height: 35px;
                                    --chip-padding: 60px;
                                  }
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.plex_iphone_music_content_type
                        state: 'on'
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:mushroom-media-player-card
                          entity: media_player.plex_iphone_damien
                          primary_info: none
                          secondary_info: none
                          icon_type: none
                          use_media_info: false
                          use_media_artwork: false
                          show_volume_level: false
                          fill_container: false
                          card_mod:
                            style: |
                              ha-card:before {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                content: "";
                                
                               background: url('/local/mushroom/idle_art.png') center no-repeat;
                                {% if not is_state(config.entity, 'unavailable') %}
                                  background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                {% endif %}
                               background-size: contain;

                                border-radius: var(--control-border-radius);
                               {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                {% if media_type == 'tvshow' %}
                                  aspect-ratio: 16 / 9;
                                  margin: 0px -5px -20px -20px;
                                  margin-top: 20px;
                                {% elif media_type == 'movie' %}
                                  aspect-ratio: 2 / 3;
                                {% else %}
                                  aspect-ratio: 1 / 1;
                                  width: 99%;
                                {% endif %}
                              ha-card {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                border-radius: 30px;
                                overflow: visible !important;
                                box-shadow: none !important;
                                background-color: transparent;
                                border: none !important;
                              }
                        - type: conditional
                          conditions:
                            - entity: binary_sensor.plex_iphone_music_content_type
                              state: 'on'
                          card:
                            type: custom:mushroom-chips-card
                            chips:
                              - type: template
                                content: >
                                  {{
                                  state_attr('media_player.plex_iphone_damien',
                                  'media_library_title') }}
                                entity: media_player.plex_iphone_damien
                                tap_action:
                                  action: none
                            alignment: center
                            card_mod:
                              style:
                                style: |
                                  ha-card {
                                    margin: -10px 0px 10px 0;
                                    --chip-background: rgba(var(--rgb-disabled), 0.15);
                                    --ha-card-box-shadow: none !important;
                                    --chip-border-radius: 12px;
                                    --chip-height: 35px;
                                    --chip-padding: 60px;
                                  }
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.plex_iphone_movie_content_type
                        state: 'on'
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:mushroom-media-player-card
                          entity: media_player.plex_iphone_damien
                          primary_info: none
                          secondary_info: none
                          icon_type: none
                          use_media_info: false
                          use_media_artwork: false
                          show_volume_level: false
                          fill_container: false
                          card_mod:
                            style: |
                              ha-card:before {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                content: "";
                                
                               background: url('/local/mushroom/idle_art.png') center no-repeat;
                                {% if not is_state(config.entity, 'unavailable') %}
                                  background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                {% endif %}
                               background-size: contain;

                                border-radius: var(--control-border-radius);
                               {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                {% if media_type == 'tvshow' %}
                                  aspect-ratio: 16 / 9;
                                  margin: 0px -5px -20px -20px;
                                  margin-top: 20px;
                                {% elif media_type == 'movie' %}
                                  aspect-ratio: 2 / 3;
                                {% else %}
                                  aspect-ratio: 1 / 1;
                                  width: 99%;
                                {% endif %}
                              }
                    card_mod:
                      style: |
                        ha-card:before {
                          transform: translate3d(0,0,0);
                          -webkit-transform: translate3d(0,0,0);
                          content: "";
                          position: absolute;
                          height: 100%;
                          width: 100%;

                        ha-card {
                          transform: translate3d(0,0,0);
                          -webkit-transform: translate3d(0,0,0);
                          border-radius: 30px;
                          overflow: visible !important;
                          box-shadow: none;
                          background-color: transparent;
                          border: none !important;
                        }
                        @media (min-width: 1200px) {
                          ha-card {
                            margin-top: 30px;
                          }
                        }
                        :host {
                          margin-top: 50px !important;
                          --album-art-color:      
                          {% if not is_state('media_player.plex_iphone_damien', 'idle') and not is_state('media_player.plex_iphone_damien', 'off') %}
                            {{ states('sensor.plex_recently_all_poster_1') }}
                          {% else %}
                            var(--rgb-indigo-color)
                          {% endif %};
                        }
            card_mod:
              style: |
                ha-card:before {
                  transform: translate3d(0,0,0);
                  -webkit-transform: translate3d(0,0,0);
                  content: "";
                  position: absolute;
                  height: 100%;
                  width: 100%;

                  background: url('{{ state_attr('media_player.plex_iphone_damien', "entity_picture") }}') center no-repeat;


                  filter: blur(150px) saturate(200%);
                  background-size: 100% 100%;
                }
                ha-card {
                  transform: translate3d(0,0,0);
                  -webkit-transform: translate3d(0,0,0);
                }
      - type: conditional
        conditions:
          - entity: media_player.plex_iphone_angelique
            state_not: 'off'
          - entity: media_player.plex_iphone_angelique
            state_not: idle
          - entity: media_player.plex_iphone_angelique
            state_not: unavailable
        card:
          type: custom:local-conditional-card
          default: hide
          id: media
          card:
            type: custom:stack-in-card
            keep:
              box_shadow: false
              border_radius: true
              margin: true
              outer_padding: false
              background: false
            cards:
              - type: grid
                columns: 2
                square: false
                cards:
                  - type: conditional
                    conditions:
                      - entity: media_player.plex_iphone_angelique
                        state_not: playing
                      - entity: media_player.plex_iphone_angelique
                        state_not: paused
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:mushroom-media-player-card
                          entity: media_player.plex_iphone_angelique
                          primary_info: none
                          secondary_info: none
                          icon_type: none
                          use_media_info: false
                          use_media_artwork: false
                          show_volume_level: false
                          fill_container: false
                          card_mod:
                            style: |
                              ha-card:before {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                content: "";
                                
                               background: url('/local/mushroom/idle_art.png') center no-repeat;
                                {% if not is_state(config.entity, 'unavailable') %}
                                  background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                {% endif %}
                               background-size: contain;

                                border-radius: var(--control-border-radius);
                               {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                {% if media_type == 'tvshow' %}
                                  aspect-ratio: 16 / 9;
                                {% elif media_type == 'movie' %}
                                  aspect-ratio: 2 / 3;
                                {% else %}
                                  aspect-ratio: 1 / 1;
                                {% endif %}
                              }
                              ha-card {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                border-radius: 30px;
                                overflow: visible !important;
                                box-shadow: none !important;
                                background-color: transparent;
                                border: none !important;
                              }
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.plex_iphone_angy_tvshow_content_type
                        state: 'on'
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:mushroom-media-player-card
                          entity: media_player.plex_iphone_angelique
                          primary_info: none
                          secondary_info: none
                          icon_type: none
                          use_media_info: false
                          use_media_artwork: false
                          show_volume_level: false
                          fill_container: false
                          card_mod:
                            style: |
                              ha-card:before {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                content: "";
                                
                               background: url('/local/mushroom/idle_art.png') center no-repeat;
                                {% if not is_state(config.entity, 'unavailable') %}
                                  background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                {% endif %}
                               background-size: contain;

                                border-radius: var(--control-border-radius);
                               {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                {% if media_type == 'tvshow' %}
                                  aspect-ratio: 16 / 9;
                                  margin: 0px -5px -20px -20px;
                                  margin-top: 20px;
                                {% elif media_type == 'movie' %}
                                  aspect-ratio: 2 / 3;
                                {% else %}
                                  aspect-ratio: 1 / 1;
                                  width: 99%;
                                {% endif %}
                              }
                              ha-card {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                border-radius: 30px;
                                overflow: visible !important;
                                box-shadow: none !important;
                                background-color: transparent;
                                border: none !important;
                              }
                        - type: conditional
                          conditions:
                            - entity: >-
                                binary_sensor.plex_iphone_angy_tvshow_content_type
                              state: 'on'
                          card:
                            type: custom:mushroom-chips-card
                            chips:
                              - type: template
                                content: >
                                  {{
                                  state_attr('media_player.plex_iphone_angelique',
                                  'media_library_title') }}
                                entity: media_player.plex_iphone_angelique
                                tap_action:
                                  action: none
                            alignment: center
                            card_mod:
                              style:
                                style: |
                                  ha-card {
                                    margin: 20px 0 0 0;
                                    --chip-background: rgba(var(--rgb-disabled), 0.15);
                                    --ha-card-box-shadow: none;
                                    --chip-border-radius: 12px;
                                    --chip-height: 35px;
                                    --chip-padding: 60px;
                                  }
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.plex_iphone_angy_music_content_type
                        state: 'on'
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:mushroom-media-player-card
                          entity: media_player.plex_iphone_angelique
                          primary_info: none
                          secondary_info: none
                          icon_type: none
                          use_media_info: false
                          use_media_artwork: false
                          show_volume_level: false
                          fill_container: false
                          card_mod:
                            style: |
                              ha-card:before {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                content: "";
                                
                               background: url('/local/mushroom/idle_art.png') center no-repeat;
                                {% if not is_state(config.entity, 'unavailable') %}
                                  background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                {% endif %}
                               background-size: contain;

                                border-radius: var(--control-border-radius);
                               {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                {% if media_type == 'tvshow' %}
                                  aspect-ratio: 16 / 9;
                                  margin: 0px -5px -20px -20px;
                                  margin-top: 20px;
                                {% elif media_type == 'movie' %}
                                  aspect-ratio: 2 / 3;
                                {% else %}
                                  aspect-ratio: 1 / 1;
                                  width: 99%;
                                {% endif %}
                              ha-card {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                border-radius: 30px;
                                overflow: visible !important;
                                box-shadow: none !important;
                                background-color: transparent;
                                border: none !important;
                              }
                        - type: conditional
                          conditions:
                            - entity: >-
                                binary_sensor.plex_iphone_angy_music_content_type
                              state: 'on'
                          card:
                            type: custom:mushroom-chips-card
                            chips:
                              - type: template
                                content: >
                                  {{
                                  state_attr('media_player.plex_iphone_angelique',
                                  'media_library_title') }}
                                entity: media_player.plex_iphone_angelique
                                tap_action:
                                  action: none
                            alignment: center
                            card_mod:
                              style:
                                style: |
                                  ha-card {
                                    margin: -10px 0px 10px 0;
                                    --chip-background: rgba(var(--rgb-disabled), 0.15);
                                    --ha-card-box-shadow: none;
                                    --chip-border-radius: 12px;
                                    --chip-height: 35px;
                                    --chip-padding: 60px;
                                  }
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.plex_iphone_angy_movie_content_type
                        state: 'on'
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:mushroom-media-player-card
                          entity: media_player.plex_iphone_angelique
                          primary_info: none
                          secondary_info: none
                          icon_type: none
                          use_media_info: false
                          use_media_artwork: false
                          show_volume_level: false
                          fill_container: false
                          card_mod:
                            style: |
                              ha-card:before {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                content: "";
                                
                               background: url('/local/mushroom/idle_art.png') center no-repeat;
                                {% if not is_state(config.entity, 'unavailable') %}
                                  background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                {% endif %}
                               background-size: contain;

                                border-radius: var(--control-border-radius);
                               {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                {% if media_type == 'tvshow' %}
                                  aspect-ratio: 16 / 9;
                                  margin: 0px -5px -20px -20px;
                                  margin-top: 20px;
                                {% elif media_type == 'movie' %}
                                  aspect-ratio: 2 / 3;
                                {% else %}
                                  aspect-ratio: 1 / 1;
                                  width: 99%;
                                {% endif %}
                              }
                  - type: grid
                    columns: 1
                    square: false
                    cards:
                      - type: vertical-stack
                        cards:
                          - type: custom:mushroom-title-card
                            title: iPhone Angy
                            subtitle: >
                              {% if
                              is_state('media_player.plex_iphone_angelique',
                              'playing') %}
                                Lecture en cours
                              {% elif
                              is_state('media_player.plex_iphone_angelique',
                              'paused') %}
                                En pause
                              {% else %}
                                En veille
                              {% endif %}
                            alignment: center
                          - type: conditional
                            conditions:
                              - entity: media_player.plex_iphone_angelique
                                state_not: unavailable
                            card:
                              type: custom:mushroom-chips-card
                              chips:
                                - type: template
                                  icon: mdi:skip-backward
                                  entity: media_player.plex_iphone_angelique
                                  tap_action:
                                    action: call-service
                                    service: media_player.media_previous_track
                                    data: {}
                                    target:
                                      entity_id: media_player.plex_iphone_angelique
                                  card_mod:
                                    style:
                                      style: |
                                        ha-card {
                                          margin: 0px 10px 0px 0;
                                          --chip-background: rgba(var(--rgb-disabled), 0.15);
                                          --ha-card-box-shadow: none;
                                          --chip-border-radius: 12px;
                                          --chip-height: 35px;
                                          --chip-padding: 10px;
                                        }
                                - type: template
                                  entity: media_player.plex_iphone_angelique
                                  icon: >-
                                    {% if
                                    is_state('media_player.plex_iphone_angelique',
                                    'playing') %}
                                      mdi:pause
                                    {% else %}
                                      mdi:play
                                    {% endif %}
                                  tap_action:
                                    action: call-service
                                    service: media_player.media_play_pause
                                    data: {}
                                    target:
                                      entity_id: media_player.plex_iphone_angelique
                                  card_mod:
                                    style:
                                      style: |
                                        ha-card {
                                          margin: 0px 0px 0px 0;
                                          --chip-background: rgba(var(--rgb-disabled), 0.15);
                                          --ha-card-box-shadow: none;
                                          --chip-border-radius: 12px;
                                          --chip-height: 35px;
                                          --chip-padding: 10px;
                                        }
                                - type: template
                                  entity: media_player.plex_iphone_angelique
                                  icon: mdi:skip-forward
                                  tap_action:
                                    action: call-service
                                    service: media_player.media_next_track
                                    data: {}
                                    target:
                                      entity_id: media_player.plex_iphone_angelique
                                  card_mod:
                                    style:
                                      style: |
                                        ha-card {
                                          margin: 0px 0px 0px 10px;
                                          --chip-background: rgba(var(--rgb-disabled), 0.15);
                                          --ha-card-box-shadow: none;
                                          --chip-border-radius: 12px;
                                          --chip-height: 35px;
                                          --chip-padding: 10px;
                                        }
                              alignment: center
                          - type: conditional
                            conditions:
                              - entity: >-
                                  binary_sensor.plex_iphone_angy_movie_content_type
                                state: 'on'
                            card:
                              type: custom:mushroom-chips-card
                              chips:
                                - type: template
                                  content: >
                                    {{
                                    state_attr('media_player.plex_iphone_angelique',
                                    'media_library_title') }}
                                  entity: media_player.plex_iphone_angelique
                                  tap_action:
                                    action: none
                              alignment: center
                              card_mod:
                                style:
                                  style: |
                                    ha-card {
                                      margin: 20px 0 0 0;
                                      --chip-background: rgba(var(--rgb-disabled), 0.15);
                                      --ha-card-box-shadow: none;
                                      --chip-border-radius: 12px;
                                      --chip-height: 35px;
                                      --chip-padding: 60px;
                                    }
                          - type: conditional
                            conditions:
                              - entity: >-
                                  binary_sensor.plex_iphone_angy_music_content_type
                                state: 'on'
                            card:
                              type: custom:mushroom-title-card
                              title: ''
                              alignment: center
                              subtitle: >-
                                {{
                                state_attr('media_player.plex_iphone_angelique',
                                'media_artist') }} - {{
                                state_attr('media_player.plex_iphone_angelique',
                                'media_title') }}
                          - type: conditional
                            conditions:
                              - entity: >-
                                  binary_sensor.plex_iphone_angy_movie_content_type
                                state: 'on'
                            card:
                              type: custom:mushroom-title-card
                              title: ''
                              alignment: center
                              subtitle: >-
                                {{
                                state_attr('media_player.plex_iphone_angelique',
                                'media_title') }}
                          - type: conditional
                            conditions:
                              - entity: >-
                                  binary_sensor.plex_iphone_angy_tvshow_content_type
                                state: 'on'
                            card:
                              type: custom:mushroom-title-card
                              title: ''
                              alignment: center
                              subtitle: >-
                                {{
                                state_attr('media_player.plex_iphone_angelique',
                                'media_series_title') }}
            card_mod:
              style: |
                ha-card:before {
                  transform: translate3d(0,0,0);
                  -webkit-transform: translate3d(0,0,0);
                  content: "";
                  position: absolute;
                  height: 100%;
                  width: 100%;

                  background: url('{{ state_attr('media_player.plex_iphone_angelique', "entity_picture") }}') center no-repeat;
                  {% if not is_state('sensor.recently_added', 'Online') %}
                    background: url('{{ states('sensor.plex_recently_all_poster_1_poster_1') }}') center no-repeat;
                  {% endif %}

                  filter: blur(150px) saturate(200%);
                  background-size: 100% 100%;
                }
                ha-card {
                  transform: translate3d(0,0,0);
                  -webkit-transform: translate3d(0,0,0);
                }
      - type: conditional
        conditions:
          - entity: media_player.plex_xiaomi
            state_not: 'off'
          - entity: media_player.plex_xiaomi
            state_not: idle
          - entity: media_player.plex_xiaomi
            state_not: unavailable
        card:
          type: custom:local-conditional-card
          default: hide
          id: media
          card:
            type: custom:stack-in-card
            keep:
              box_shadow: false
              border_radius: true
              margin: true
              outer_padding: false
              background: false
            cards:
              - type: grid
                columns: 2
                square: false
                cards:
                  - type: grid
                    columns: 1
                    square: false
                    cards:
                      - type: vertical-stack
                        cards:
                          - type: custom:mushroom-title-card
                            title: Tablette
                            subtitle: >
                              {% if is_state('media_player.plex_xiaomi',
                              'playing') %}
                                Lecture en cours
                              {% elif is_state('media_player.plex_xiaomi',
                              'paused') %}
                                En pause
                              {% else %}
                                En veille
                              {% endif %}
                            alignment: center
                          - type: conditional
                            conditions:
                              - entity: media_player.plex_xiaomi
                                state_not: unavailable
                              - entity: media_player.plex_xiaomi
                                state_not: idle
                            card:
                              type: custom:mushroom-chips-card
                              chips:
                                - type: template
                                  icon: mdi:skip-backward
                                  entity: media_player.plex_xiaomi
                                  tap_action:
                                    action: call-service
                                    service: media_player.media_previous_track
                                    data: {}
                                    target:
                                      entity_id: media_player.plex_xiaomi
                                  card_mod:
                                    style:
                                      style: |
                                        ha-card {
                                          margin: 0px 10px 0px 0;
                                          --chip-background: rgba(var(--rgb-disabled), 0.15);
                                          --ha-card-box-shadow: none;
                                          --chip-border-radius: 12px;
                                          --chip-height: 35px;
                                          --chip-padding: 10px;
                                        }
                                - type: template
                                  entity: media_player.plex_xiaomi
                                  icon: >-
                                    {% if is_state('media_player.plex_xiaomi',
                                    'playing') %}
                                      mdi:pause
                                    {% else %}
                                      mdi:play
                                    {% endif %}
                                  tap_action:
                                    action: call-service
                                    service: media_player.media_play_pause
                                    data: {}
                                    target:
                                      entity_id: media_player.plex_xiaomi
                                  card_mod:
                                    style:
                                      style: |
                                        ha-card {
                                          margin: 0px 0px 0px 0px;
                                          --chip-background: rgba(var(--rgb-disabled), 0.15);
                                          --ha-card-box-shadow: none;
                                          --chip-border-radius: 12px;
                                          --chip-height: 35px;
                                          --chip-padding: 10px;
                                        }
                                - type: template
                                  entity: media_player.plex_xiaomi
                                  icon: mdi:skip-forward
                                  tap_action:
                                    action: call-service
                                    service: media_player.media_next_track
                                    data: {}
                                    target:
                                      entity_id: media_player.plex_xiaomi
                                  card_mod:
                                    style:
                                      style: |
                                        ha-card {
                                          margin: 0px 0px 0px 10px;
                                          --chip-background: rgba(var(--rgb-disabled), 0.15);
                                          --ha-card-box-shadow: none;
                                          --chip-border-radius: 12px;
                                          --chip-height: 35px;
                                          --chip-padding: 10px;
                                        }
                              alignment: center
                          - type: conditional
                            conditions:
                              - entity: binary_sensor.plex_xiaomi_movie_content_type
                                state: 'on'
                            card:
                              type: custom:mushroom-chips-card
                              chips:
                                - type: template
                                  content: >
                                    {{ state_attr('media_player.plex_xiaomi',
                                    'media_library_title') }}
                                  entity: media_player.plex_xiaomi
                                  tap_action:
                                    action: none
                              alignment: center
                              card_mod:
                                style:
                                  style: |
                                    ha-card {
                                      margin: 20px 0 0 0;
                                      --chip-background: rgba(var(--rgb-disabled), 0.15);
                                      --ha-card-box-shadow: none;
                                      --chip-border-radius: 12px;
                                      --chip-height: 35px;
                                      --chip-padding: 60px;
                                    }
                          - type: conditional
                            conditions:
                              - entity: binary_sensor.plex_xiaomi_music_content_type
                                state: 'on'
                            card:
                              type: custom:mushroom-title-card
                              title: ''
                              alignment: center
                              subtitle: >-
                                {{ state_attr('media_player.plex_xiaomi',
                                'media_artist') }} - {{
                                state_attr('media_player.plex_xiaomi',
                                'media_title') }}
                          - type: conditional
                            conditions:
                              - entity: binary_sensor.plex_xiaomi_movie_content_type
                                state: 'on'
                            card:
                              type: custom:mushroom-title-card
                              title: ''
                              alignment: center
                              subtitle: >-
                                {{ state_attr('media_player.plex_xiaomi',
                                'media_title') }}
                          - type: conditional
                            conditions:
                              - entity: binary_sensor.plex_xiaomi_tvshow_content_type
                                state: 'on'
                            card:
                              type: custom:mushroom-title-card
                              title: ''
                              alignment: center
                              subtitle: >-
                                {{ state_attr('media_player.plex_xiaomi',
                                'media_series_title') }}
                  - type: conditional
                    conditions:
                      - entity: media_player.plex_xiaomi
                        state_not: playing
                      - entity: media_player.plex_xiaomi
                        state_not: paused
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:mushroom-media-player-card
                          entity: media_player.plex_xiaomi
                          primary_info: none
                          secondary_info: none
                          icon_type: none
                          use_media_info: false
                          use_media_artwork: false
                          show_volume_level: false
                          fill_container: false
                          card_mod:
                            style: |
                              ha-card:before {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                content: "";
                                
                               background: url('/local/mushroom/idle_art.png') center no-repeat;
                                {% if not is_state(config.entity, 'unavailable') and not is_state(config.entity, 'idle') %}
                                  background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                {% endif %}
                               background-size: contain;

                                border-radius: var(--control-border-radius);
                               {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                {% if media_type == 'tvshow' %}
                                  aspect-ratio: 16 / 9;
                                {% elif media_type == 'movie' %}
                                  aspect-ratio: 2 / 3;
                                {% else %}
                                  aspect-ratio: 1 / 1;
                                {% endif %}
                              }
                              ha-card {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                border-radius: 30px;
                                overflow: visible !important;
                                box-shadow: none !important;
                                background-color: transparent;
                                border: none !important;
                              }
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.plex_xiaomi_tvshow_content_type
                        state: 'on'
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:mushroom-media-player-card
                          entity: media_player.plex_xiaomi
                          primary_info: none
                          secondary_info: none
                          icon_type: none
                          use_media_info: false
                          use_media_artwork: false
                          show_volume_level: false
                          fill_container: false
                          card_mod:
                            style: |
                              ha-card:before {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                content: "";
                                
                               background: url('/local/mushroom/idle_art.png') center no-repeat;
                                {% if not is_state(config.entity, 'unavailable') %}
                                  background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                {% endif %}
                               background-size: contain;

                                border-radius: var(--control-border-radius);
                               {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                {% if media_type == 'tvshow' %}
                                  aspect-ratio: 16 / 9;
                                  margin: 0px 0px 0px -45px;
                                  margin-top: 1px;
                                {% elif media_type == 'movie' %}
                                  aspect-ratio: 2 / 3;
                                {% else %}
                                  aspect-ratio: 1 / 1;
                                  width: 99%;
                                {% endif %}
                              }
                              ha-card {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                border-radius: 30px;
                                overflow: visible !important;
                                box-shadow: none !important;
                                background-color: transparent;
                                border: none !important;
                              }
                        - type: conditional
                          conditions:
                            - entity: binary_sensor.plex_xiaomi_tvshow_content_type
                              state: 'on'
                          card:
                            type: custom:mushroom-chips-card
                            chips:
                              - type: template
                                content: >
                                  {{ state_attr('media_player.plex_xiaomi',
                                  'media_library_title') }}
                                entity: media_player.plex_xiaomi
                                tap_action:
                                  action: none
                            alignment: center
                            card_mod:
                              style:
                                style: |
                                  ha-card {
                                    margin: 0px 40px 10px 0px;
                                    --chip-background: rgba(var(--rgb-disabled), 0.15);
                                    --ha-card-box-shadow: none;
                                    --chip-border-radius: 12px;
                                    --chip-height: 35px;
                                    --chip-padding: 60px;
                                  }
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.plex_xiaomi_music_content_type
                        state: 'on'
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:mushroom-media-player-card
                          entity: media_player.plex_xiaomi
                          primary_info: none
                          secondary_info: none
                          icon_type: none
                          use_media_info: false
                          use_media_artwork: false
                          show_volume_level: false
                          fill_container: false
                          card_mod:
                            style: |
                              ha-card:before {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                content: "";
                                
                               background: url('/local/mushroom/idle_art.png') center no-repeat;
                                {% if not is_state(config.entity, 'unavailable') %}
                                  background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                {% endif %}
                               background-size: contain;

                                border-radius: var(--control-border-radius);
                               {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                {% if media_type == 'tvshow' %}
                                  aspect-ratio: 16 / 9;
                                  margin: 0px -5px -20px -20px;
                                  margin-top: 20px;
                                {% elif media_type == 'movie' %}
                                  aspect-ratio: 2 / 3;
                                {% else %}
                                  aspect-ratio: 1 / 1;
                                  width: 99%;
                                {% endif %}
                              ha-card {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                border-radius: 30px;
                                overflow: visible !important;
                                box-shadow: none !important;
                                background-color: transparent;
                                border: none !important;
                              }
                        - type: conditional
                          conditions:
                            - entity: binary_sensor.plex_xiaomi_music_content_type
                              state: 'on'
                          card:
                            type: custom:mushroom-chips-card
                            chips:
                              - type: template
                                content: >
                                  {{ state_attr('media_player.plex_xiaomi',
                                  'media_library_title') }}
                                entity: media_player.plex_xiaomi
                                tap_action:
                                  action: none
                            alignment: center
                            card_mod:
                              style:
                                style: |
                                  ha-card {
                                    margin: -10px 0px 10px 0;
                                    --chip-background: rgba(var(--rgb-disabled), 0.15);
                                    --ha-card-box-shadow: none !important;
                                    --chip-border-radius: 12px;
                                    --chip-height: 35px;
                                    --chip-padding: 60px;
                                  }
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.plex_xiaomi_movie_content_type
                        state: 'on'
                    card:
                      type: vertical-stack
                      cards:
                        - type: custom:mushroom-media-player-card
                          entity: media_player.plex_xiaomi
                          primary_info: none
                          secondary_info: none
                          icon_type: none
                          use_media_info: false
                          use_media_artwork: false
                          show_volume_level: false
                          fill_container: false
                          card_mod:
                            style: |
                              ha-card:before {
                                transform: translate3d(0,0,0);
                                -webkit-transform: translate3d(0,0,0);
                                content: "";
                                
                               background: url('/local/mushroom/idle_art.png') center no-repeat;
                                {% if not is_state(config.entity, 'unavailable') %}
                                  background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                {% endif %}
                               background-size: contain;

                                border-radius: var(--control-border-radius);
                               {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                {% if media_type == 'tvshow' %}
                                  aspect-ratio: 16 / 9;
                                  margin: 0px -5px -20px -20px;
                                  margin-top: 20px;
                                {% elif media_type == 'movie' %}
                                  aspect-ratio: 2 / 3;
                                {% else %}
                                  aspect-ratio: 1 / 1;
                                  width: 99%;
                                {% endif %}
                              }
                    card_mod:
                      style: |
                        ha-card:before {
                          transform: translate3d(0,0,0);
                          -webkit-transform: translate3d(0,0,0);
                          content: "";
                          position: absolute;
                          height: 100%;
                          width: 100%;

                        ha-card {
                          transform: translate3d(0,0,0);
                          -webkit-transform: translate3d(0,0,0);
                          border-radius: 30px;
                          overflow: visible !important;
                          box-shadow: none;
                          background-color: transparent;
                          border: none !important;
                        }
                        @media (min-width: 1200px) {
                          ha-card {
                            margin-top: 30px;
                          }
                        }
                        :host {
                          margin-top: 50px !important;
                          --album-art-color:      
                          {% if not is_state('media_player.plex_xiaomi', 'idle') and not is_state('media_player.plex_xiaomi', 'off') %}
                            {{ states('sensor.plex_recently_all_poster_1') }}
                          {% else %}
                            var(--rgb-indigo-color)
                          {% endif %};
                        }
            card_mod:
              style: |
                ha-card:before {
                  transform: translate3d(0,0,0);
                  -webkit-transform: translate3d(0,0,0);
                  content: "";
                  position: absolute;
                  height: 100%;
                  width: 100%;

                  background: url('{{ state_attr('media_player.plex_xiaomi', "entity_picture") }}') center no-repeat;


                  filter: blur(150px) saturate(200%);
                  background-size: 100% 100%;
                }
                ha-card {
                  transform: translate3d(0,0,0);
                  -webkit-transform: translate3d(0,0,0);
                }
      - type: custom:local-conditional-card
        default: hide
        id: monitoring
        card:
          type: horizontal-stack
          title: Carburant
          cards:
            - type: custom:vertical-stack-in-card
              cards:
                - type: custom:mushroom-template-card
                  primary: DIESEL
                  secondary: '{{ states(''sensor.gazole_best_price2'')}}'
                  icon: mdi:gas-station
                  entity: input_select.carburant
                  layout: vertical
                  icon_color: orange
                  badge_color: |-
                    {% if is_state('input_select.carburant', 'Diesel') %}
                      green
                    {% else %}
                      red
                    {% endif %}
                  tap_action:
                    action: fire-dom-event
                    haptic: heavy
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        style: |-
                          --popup-header-background-color: black;
                          --popup-background-color: transperant;
                          --popup-border-radius: 15px;
                          --popup-border-color: transparent;
                          --popup-padding-x: 5px;
                        size: normal
                        content:
                          type: custom:button-card
                          show_entity_picture: false
                          entity: template
                          name: Diesel (B7)
                          show_icon: false
                          show_name: true
                          tap_action:
                            action: navigate
                            navigation_path: '#empty'
                          styles:
                            card:
                              - height: 320px
                              - top: 0px
                              - border-radius: 10px
                              - background-color: transparent
                              - '--mdc-ripple-press-opacity': 0
                            name:
                              - z-index: 2
                              - position: absolute
                              - font-size: 45px
                              - font-weight: lighter
                              - justify-self: start
                              - color: white
                              - left: 25px
                              - top: 20px
                            icon:
                              - width: 50%
                            img_cell:
                              - z-index: 2
                            custom_fields:
                              blur:
                                - z-index: 1
                                - top: 0%
                                - left: 0%
                                - width: 100%
                                - height: 100%
                                - border-radius: 10px
                                - position: absolute
                                - background-color: rgba(0, 0, 0, 0.1)
                                - backdrop-filter: blur(10px)
                                - '-webkit-backdrop-filter': blur(20px)
                              temp:
                                - z-index: 2
                                - position: absolute
                                - top: 30%
                                - left: 5%
                                - height: 100%
                                - width: 90%
                          custom_fields:
                            blur: |
                              <div></div>
                            temp:
                              card:
                                type: vertical-stack
                                cards:
                                  - color_type: icon
                                    custom_fields:
                                      price: |
                                        [[[
                                         return `
                                           <span style="color: var(--text-color-sensor);">${states['sensor.carbu_com_diesel_01190_price'].state} €/L</span>`
                                        ]]]
                                      date: |
                                        [[[
                                          const date = new Date(states['sensor.carbu_com_diesel_01190_price'].last_updated);
                                          const day = date.getDate().toString().padStart(2, '0');
                                          const month = (date.getMonth() + 1).toString().padStart(2, '0');
                                          const year = date.getFullYear().toString();
                                          const formattedDate = `${day}/${month}/${year}`;
                                          return `
                                            <span style="color: var(--text-color-sensor);">${formattedDate}</span>
                                          `;
                                        ]]]
                                    name: Bien
                                    show_icon: false
                                    show_last_changed: false
                                    show_name: true
                                    styles:
                                      card:
                                        - border: 2px solid var(--primary-color)
                                        - border-radius: 5px
                                        - height: 2em
                                      custom_fields:
                                        price:
                                          - background-color: rgba(0, 0, 0, 0)
                                          - position: absolute
                                          - bottom: '-10px'
                                          - right: 5px
                                          - font-size: 15px
                                          - line-height: 20px
                                          - '--text-color-sensor': |
                                              [[[
                                                if ( (states['sensor.gazole_best_price2'].state == 'Bien') ) return 'green';
                                                else return 'var(--primary-color)';
                                              ]]]
                                        date:
                                          - background-color: rgba(0, 0, 0, 0)
                                          - position: relative
                                          - right: 10em
                                          - bottom: '-1px'
                                          - font-size: 12px
                                          - line-height: 20px
                                      grid:
                                        - position: relative
                                      name:
                                        - font-variant: small-caps
                                        - justify-self: start
                                        - padding: 0 15px
                                        - color: |
                                            [[[
                                              if ( (states['sensor.gazole_best_price2'].state == 'Bien') ) return 'green';
                                              else return 'var(--primary-color)';
                                            ]]]
                                    type: custom:button-card
                                  - color_type: icon
                                    custom_fields:
                                      price: |
                                        [[[
                                         return `
                                           <span style="color: var(--text-color-sensor);">${states['sensor.carbu_com_diesel_01570_price'].state} €/L</span>`
                                        ]]]
                                      date: |
                                        [[[
                                          const date = new Date(states['sensor.carbu_com_diesel_01570_price'].last_updated);
                                          const day = date.getDate().toString().padStart(2, '0');
                                          const month = (date.getMonth() + 1).toString().padStart(2, '0');
                                          const year = date.getFullYear().toString();
                                          const formattedDate = `${day}/${month}/${year}`;
                                          return `
                                            <span style="color: var(--text-color-sensor);">${formattedDate}</span>
                                          `;
                                        ]]]
                                    name: Feillens
                                    show_icon: false
                                    show_last_changed: false
                                    show_name: true
                                    styles:
                                      card:
                                        - border: 2px solid var(--primary-color)
                                        - border-radius: 5px
                                        - height: 2em
                                      custom_fields:
                                        price:
                                          - background-color: rgba(0, 0, 0, 0)
                                          - position: absolute
                                          - bottom: '-10px'
                                          - right: 5px
                                          - font-size: 15px
                                          - line-height: 20px
                                          - '--text-color-sensor': |
                                              [[[
                                                if ( (states['sensor.gazole_best_price2'].state == 'Feillens') ) return 'green';
                                                else return 'var(--primary-color)';
                                              ]]]
                                        date:
                                          - background-color: rgba(0, 0, 0, 0)
                                          - position: relative
                                          - right: 10em
                                          - bottom: '-1px'
                                          - font-size: 12px
                                          - line-height: 20px
                                      grid:
                                        - position: relative
                                      name:
                                        - font-variant: small-caps
                                        - justify-self: start
                                        - padding: 0 15px
                                        - color: |
                                            [[[
                                              if ( (states['sensor.gazole_best_price2'].state == 'Feillens') ) return 'green';
                                              else return 'var(--primary-color)';
                                            ]]]
                                    type: custom:button-card
                                  - color_type: icon
                                    custom_fields:
                                      price: |
                                        [[[
                                         return `
                                           <span style="color: var(--text-color-sensor);">${states['sensor.carbu_com_diesel_71260_price'].state} €/L</span>`
                                        ]]]
                                      date: |
                                        [[[
                                          const date = new Date(states['sensor.carbu_com_diesel_71260_price'].last_updated);
                                          const day = date.getDate().toString().padStart(2, '0');
                                          const month = (date.getMonth() + 1).toString().padStart(2, '0');
                                          const year = date.getFullYear().toString();
                                          const formattedDate = `${day}/${month}/${year}`;
                                          return `
                                            <span style="color: var(--text-color-sensor);">${formattedDate}</span>
                                          `;
                                        ]]]
                                    name: Fleureville
                                    show_icon: false
                                    show_last_changed: false
                                    show_name: true
                                    styles:
                                      card:
                                        - border: 2px solid var(--primary-color)
                                        - border-radius: 5px
                                        - height: 2em
                                      custom_fields:
                                        price:
                                          - background-color: rgba(0, 0, 0, 0)
                                          - position: absolute
                                          - bottom: '-10px'
                                          - right: 5px
                                          - font-size: 15px
                                          - line-height: 20px
                                          - '--text-color-sensor': |
                                              [[[
                                                if ( (states['sensor.gazole_best_price'].state == 'Fleureville') ) return 'green';
                                                else return 'var(--primary-color)';
                                              ]]]
                                        date:
                                          - background-color: rgba(0, 0, 0, 0)
                                          - position: relative
                                          - right: 10em
                                          - bottom: '-1px'
                                          - font-size: 12px
                                          - line-height: 20px
                                      grid:
                                        - position: relative
                                      name:
                                        - font-variant: small-caps
                                        - justify-self: start
                                        - padding: 0 15px
                                        - color: |
                                            [[[
                                              if ( (states['sensor.gazole_best_price2'].state == 'Fleureville') ) return 'green';
                                              else return 'var(--primary-color)';
                                            ]]]
                                    type: custom:button-card
                                  - color_type: icon
                                    custom_fields:
                                      price: |
                                        [[[
                                         return `
                                           <span style="color: var(--text-color-sensor);">${states['sensor.carbu_com_diesel_01750_price'].state} €/L</span>`
                                        ]]]
                                      date: |
                                        [[[
                                          const date = new Date(states['sensor.carbu_com_diesel_01750_price'].last_updated);
                                          const day = date.getDate().toString().padStart(2, '0');
                                          const month = (date.getMonth() + 1).toString().padStart(2, '0');
                                          const year = date.getFullYear().toString();
                                          const formattedDate = `${day}/${month}/${year}`;
                                          return `
                                            <span style="color: var(--text-color-sensor);">${formattedDate}</span>
                                          `;
                                        ]]]
                                    name: Replonges
                                    show_icon: false
                                    show_last_changed: false
                                    show_name: true
                                    styles:
                                      card:
                                        - border: 2px solid var(--primary-color)
                                        - border-radius: 5px
                                        - height: 2em
                                      custom_fields:
                                        price:
                                          - background-color: rgba(0, 0, 0, 0)
                                          - position: absolute
                                          - bottom: '-10px'
                                          - right: 5px
                                          - font-size: 15px
                                          - line-height: 20px
                                          - '--text-color-sensor': |
                                              [[[
                                                if ( (states['sensor.gazole_best_price'].state == 'Replonges') ) return 'green';
                                                else return 'var(--primary-color)';
                                              ]]]
                                        date:
                                          - background-color: rgba(0, 0, 0, 0)
                                          - position: relative
                                          - right: 10em
                                          - bottom: '-1px'
                                          - font-size: 12px
                                          - line-height: 20px
                                      grid:
                                        - position: relative
                                      name:
                                        - font-variant: small-caps
                                        - justify-self: start
                                        - padding: 0 15px
                                        - color: |
                                            [[[
                                              if ( (states['sensor.gazole_best_price2'].state == 'Replonges') ) return 'green';
                                              else return 'var(--primary-color)';
                                            ]]]
                                    type: custom:button-card
                - type: custom:mushroom-chips-card
                  chips:
                    - type: template
                      entity: none
                      icon: ''
                      icon_color: orange
                      content: '{{ states(''sensor.gazole_price2'')}} €/L'
                      tap_action:
                        action: none
                      card_mod:
                        style: |
                          ha-card {
                            --chip-border-width: 0;
                  alignment: center
                  card_mod:
                    style:
                      style: |
                        ha-card {
                          margin: -2px 0px 12px;
                          --chip-background: rgba(var(--rgb-disabled), 0.15);
                          --ha-card-box-shadow: none;
                          --chip-border-radius: 12px;
                          --chip-height: 40px;
                          --chip-padding: 12px;
                          --chip-spacing: 0px;
                        }
            - type: custom:vertical-stack-in-card
              cards:
                - type: custom:mushroom-template-card
                  primary: SP95
                  secondary: '{{ states(''sensor.sp95_best_price2'')}}'
                  icon: mdi:gas-station
                  layout: vertical
                  badge_color: ''
                  icon_color: green
                  tap_action:
                    action: fire-dom-event
                    haptic: heavy
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        style: |-
                          --popup-header-background-color: black;
                          --popup-background-color: transperant;
                          --popup-border-radius: 15px;
                          --popup-border-color: transparent;
                          --popup-padding-x: 5px;
                        size: normal
                        content:
                          type: custom:button-card
                          show_entity_picture: false
                          entity: template
                          name: SP95 (E10)
                          show_icon: false
                          show_name: true
                          tap_action:
                            action: navigate
                            navigation_path: '#empty'
                          styles:
                            card:
                              - height: 320px
                              - top: 0px
                              - border-radius: 10px
                              - background-color: transparent
                              - '--mdc-ripple-press-opacity': 0
                            name:
                              - z-index: 2
                              - position: absolute
                              - font-size: 45px
                              - font-weight: lighter
                              - justify-self: start
                              - color: white
                              - left: 25px
                              - top: 20px
                            icon:
                              - width: 50%
                            img_cell:
                              - z-index: 2
                            custom_fields:
                              blur:
                                - z-index: 1
                                - top: 0%
                                - left: 0%
                                - width: 100%
                                - height: 100%
                                - border-radius: 10px
                                - position: absolute
                                - background-color: rgba(0, 0, 0, 0.1)
                                - backdrop-filter: blur(10px)
                                - '-webkit-backdrop-filter': blur(20px)
                              temp:
                                - z-index: 2
                                - position: absolute
                                - top: 30%
                                - left: 5%
                                - height: 100%
                                - width: 90%
                          custom_fields:
                            blur: |
                              <div></div>
                            temp:
                              card:
                                type: vertical-stack
                                cards:
                                  - color_type: icon
                                    custom_fields:
                                      price: |
                                        [[[
                                         return `
                                           <span style="color: var(--text-color-sensor);">${states['sensor.carbu_com_super95_01190_price'].state} €/L</span>`
                                        ]]]
                                      date: |
                                        [[[
                                          const date = new Date(states['sensor.carbu_com_super95_01190_price'].last_updated);
                                          const day = date.getDate().toString().padStart(2, '0');
                                          const month = (date.getMonth() + 1).toString().padStart(2, '0');
                                          const year = date.getFullYear().toString();
                                          const formattedDate = `${day}/${month}/${year}`;
                                          return `
                                            <span style="color: var(--text-color-sensor);">${formattedDate}</span>
                                          `;
                                        ]]]
                                    name: Bien
                                    show_icon: false
                                    show_last_changed: false
                                    show_name: true
                                    styles:
                                      card:
                                        - border: 2px solid var(--primary-color)
                                        - border-radius: 5px
                                        - height: 2em
                                      custom_fields:
                                        price:
                                          - background-color: rgba(0, 0, 0, 0)
                                          - position: absolute
                                          - bottom: '-10px'
                                          - right: 5px
                                          - font-size: 15px
                                          - line-height: 20px
                                          - '--text-color-sensor': |
                                              [[[
                                                if ( (states['sensor.sp95_best_price2'].state == 'Bien') ) return 'green';
                                                else return 'var(--primary-color)';
                                              ]]]
                                        date:
                                          - background-color: rgba(0, 0, 0, 0)
                                          - position: relative
                                          - right: 10em
                                          - bottom: '-1px'
                                          - font-size: 12px
                                          - line-height: 20px
                                      grid:
                                        - position: relative
                                      name:
                                        - font-variant: small-caps
                                        - justify-self: start
                                        - padding: 0 15px
                                        - color: |
                                            [[[
                                              if ( (states['sensor.sp95_best_price2'].state == 'Bien') ) return 'green';
                                              else return 'var(--primary-color)';
                                            ]]]
                                    type: custom:button-card
                                  - color_type: icon
                                    custom_fields:
                                      price: |
                                        [[[
                                         return `
                                           <span style="color: var(--text-color-sensor);">${states['sensor.carbu_com_super95_01570_price'].state} €/L</span>`
                                        ]]]
                                      date: |
                                        [[[
                                          const date = new Date(states['sensor.carbu_com_super95_01570_price'].last_updated);
                                          const day = date.getDate().toString().padStart(2, '0');
                                          const month = (date.getMonth() + 1).toString().padStart(2, '0');
                                          const year = date.getFullYear().toString();
                                          const formattedDate = `${day}/${month}/${year}`;
                                          return `
                                            <span style="color: var(--text-color-sensor);">${formattedDate}</span>
                                          `;
                                        ]]]
                                    name: Feillens
                                    show_icon: false
                                    show_last_changed: false
                                    show_name: true
                                    styles:
                                      card:
                                        - border: 2px solid var(--primary-color)
                                        - border-radius: 5px
                                        - height: 2em
                                      custom_fields:
                                        price:
                                          - background-color: rgba(0, 0, 0, 0)
                                          - position: absolute
                                          - bottom: '-10px'
                                          - right: 5px
                                          - font-size: 15px
                                          - line-height: 20px
                                          - '--text-color-sensor': |
                                              [[[
                                                if ( (states['sensor.sp95_best_price2'].state == 'Feillens') ) return 'green';
                                                else return 'var(--primary-color)';
                                              ]]]
                                        date:
                                          - background-color: rgba(0, 0, 0, 0)
                                          - position: relative
                                          - right: 10em
                                          - bottom: '-1px'
                                          - font-size: 12px
                                          - line-height: 20px
                                      grid:
                                        - position: relative
                                      name:
                                        - font-variant: small-caps
                                        - justify-self: start
                                        - padding: 0 15px
                                        - color: |
                                            [[[
                                              if ( (states['sensor.sp95_best_price2'].state == 'Feillens') ) return 'green';
                                              else return 'var(--primary-color)';
                                            ]]]
                                    type: custom:button-card
                                  - color_type: icon
                                    custom_fields:
                                      price: |
                                        [[[
                                         return `
                                           <span style="color: var(--text-color-sensor);">${states['sensor.carbu_com_super95_71260_price'].state} €/L</span>`
                                        ]]]
                                      date: |
                                        [[[
                                          const date = new Date(states['sensor.carbu_com_super95_71260_price'].last_updated);
                                          const day = date.getDate().toString().padStart(2, '0');
                                          const month = (date.getMonth() + 1).toString().padStart(2, '0');
                                          const year = date.getFullYear().toString();
                                          const formattedDate = `${day}/${month}/${year}`;
                                          return `
                                            <span style="color: var(--text-color-sensor);">${formattedDate}</span>
                                          `;
                                        ]]]
                                    name: Fleureville
                                    show_icon: false
                                    show_last_changed: false
                                    show_name: true
                                    styles:
                                      card:
                                        - border: 2px solid var(--primary-color)
                                        - border-radius: 5px
                                        - height: 2em
                                      custom_fields:
                                        price:
                                          - background-color: rgba(0, 0, 0, 0)
                                          - position: absolute
                                          - bottom: '-10px'
                                          - right: 5px
                                          - font-size: 15px
                                          - line-height: 20px
                                          - '--text-color-sensor': |
                                              [[[
                                                if ( (states['sensor.sp95_best_price2'].state == 'Fleureville') ) return 'green';
                                                else return 'var(--primary-color)';
                                              ]]]
                                        date:
                                          - background-color: rgba(0, 0, 0, 0)
                                          - position: relative
                                          - right: 10em
                                          - bottom: '-1px'
                                          - font-size: 12px
                                          - line-height: 20px
                                      grid:
                                        - position: relative
                                      name:
                                        - font-variant: small-caps
                                        - justify-self: start
                                        - padding: 0 15px
                                        - color: |
                                            [[[
                                              if ( (states['sensor.sp95_best_price2'].state == 'Fleureville') ) return 'green';
                                              else return 'var(--primary-color)';
                                            ]]]
                                    type: custom:button-card
                                  - color_type: icon
                                    custom_fields:
                                      price: |
                                        [[[
                                         return `
                                           <span style="color: var(--text-color-sensor);">${states['sensor.carbu_com_super95_01750_price'].state} €/L</span>`
                                        ]]]
                                      date: |
                                        [[[
                                          const date = new Date(states['sensor.carbu_com_super95_01750_price'].last_updated);
                                          const day = date.getDate().toString().padStart(2, '0');
                                          const month = (date.getMonth() + 1).toString().padStart(2, '0');
                                          const year = date.getFullYear().toString();
                                          const formattedDate = `${day}/${month}/${year}`;
                                          return `
                                            <span style="color: var(--text-color-sensor);">${formattedDate}</span>
                                          `;
                                        ]]]
                                    name: Replonges
                                    show_icon: false
                                    show_last_changed: false
                                    show_name: true
                                    styles:
                                      card:
                                        - border: 2px solid var(--primary-color)
                                        - border-radius: 5px
                                        - height: 2em
                                      custom_fields:
                                        price:
                                          - background-color: rgba(0, 0, 0, 0)
                                          - position: absolute
                                          - bottom: '-10px'
                                          - right: 5px
                                          - font-size: 15px
                                          - line-height: 20px
                                          - '--text-color-sensor': |
                                              [[[
                                                if ( (states['sensor.sp95_best_price2'].state == 'Replonges') ) return 'green';
                                                else return 'var(--primary-color)';
                                              ]]]
                                        date:
                                          - background-color: rgba(0, 0, 0, 0)
                                          - position: relative
                                          - right: 10em
                                          - bottom: '-1px'
                                          - font-size: 12px
                                          - line-height: 20px
                                      grid:
                                        - position: relative
                                      name:
                                        - font-variant: small-caps
                                        - justify-self: start
                                        - padding: 0 15px
                                        - color: |
                                            [[[
                                              if ( (states['sensor.sp95_best_price2'].state == 'Replonges') ) return 'green';
                                              else return 'var(--primary-color)';
                                            ]]]
                                    type: custom:button-card
                - type: custom:mushroom-chips-card
                  chips:
                    - type: template
                      entity: none
                      icon: ''
                      icon_color: orange
                      content: '{{ states(''sensor.sp95_price2'')}} €/L'
                      tap_action:
                        action: none
                      card_mod:
                        style: |
                          ha-card {
                            --chip-border-width: 0;
                  alignment: center
                  card_mod:
                    style:
                      style: |
                        ha-card {
                          margin: -2px 0px 12px;
                          --chip-background: rgba(var(--rgb-disabled), 0.15);
                          --ha-card-box-shadow: none;
                          --chip-border-radius: 12px;
                          --chip-height: 40px;
                          --chip-padding: 12px;
                          --chip-spacing: 0px;
                        }
            - type: custom:vertical-stack-in-card
              cards:
                - type: custom:mushroom-template-card
                  primary: SP98
                  secondary: '{{ states(''sensor.sp98_best_price2'')}}'
                  icon: mdi:gas-station
                  layout: vertical
                  entity: input_select.carburant
                  icon_color: green
                  badge_color: ''
                  tap_action:
                    action: fire-dom-event
                    haptic: heavy
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        style: |-
                          --popup-header-background-color: black;
                          --popup-background-color: transperant;
                          --popup-border-radius: 15px;
                          --popup-border-color: transparent;
                          --popup-padding-x: 5px;
                        size: normal
                        content:
                          type: custom:button-card
                          show_entity_picture: false
                          entity: template
                          name: SP98 (E10)
                          show_icon: false
                          show_name: true
                          tap_action:
                            action: navigate
                            navigation_path: '#empty'
                          styles:
                            card:
                              - height: 320px
                              - top: 0px
                              - border-radius: 10px
                              - background-color: transparent
                              - '--mdc-ripple-press-opacity': 0
                            name:
                              - z-index: 2
                              - position: absolute
                              - font-size: 45px
                              - font-weight: lighter
                              - justify-self: start
                              - color: white
                              - left: 25px
                              - top: 20px
                            icon:
                              - width: 50%
                            img_cell:
                              - z-index: 2
                            custom_fields:
                              blur:
                                - z-index: 1
                                - top: 0%
                                - left: 0%
                                - width: 100%
                                - height: 100%
                                - border-radius: 10px
                                - position: absolute
                                - background-color: rgba(0, 0, 0, 0.1)
                                - backdrop-filter: blur(10px)
                                - '-webkit-backdrop-filter': blur(20px)
                              temp:
                                - z-index: 2
                                - position: absolute
                                - top: 30%
                                - left: 5%
                                - height: 100%
                                - width: 90%
                          custom_fields:
                            blur: |
                              <div></div>
                            temp:
                              card:
                                type: vertical-stack
                                cards:
                                  - color_type: icon
                                    custom_fields:
                                      price: |
                                        [[[
                                         return `
                                           <span style="color: var(--text-color-sensor);">${states['sensor.carbu_com_super98_01190_price'].state} €/L</span>`
                                        ]]]
                                      date: |
                                        [[[
                                          const date = new Date(states['sensor.carbu_com_super98_01190_price'].last_updated);
                                          const day = date.getDate().toString().padStart(2, '0');
                                          const month = (date.getMonth() + 1).toString().padStart(2, '0');
                                          const year = date.getFullYear().toString();
                                          const formattedDate = `${day}/${month}/${year}`;
                                          return `
                                            <span style="color: var(--text-color-sensor);">${formattedDate}</span>
                                          `;
                                        ]]]
                                    name: Bien
                                    show_icon: false
                                    show_last_changed: false
                                    show_name: true
                                    styles:
                                      card:
                                        - border: 2px solid var(--primary-color)
                                        - border-radius: 5px
                                        - height: 2em
                                      custom_fields:
                                        price:
                                          - background-color: rgba(0, 0, 0, 0)
                                          - position: absolute
                                          - bottom: '-10px'
                                          - right: 5px
                                          - font-size: 15px
                                          - line-height: 20px
                                          - '--text-color-sensor': |
                                              [[[
                                                if ( (states['sensor.sp98_best_price2'].state == 'Bien') ) return 'green';
                                                else return 'var(--primary-color)';
                                              ]]]
                                        date:
                                          - background-color: rgba(0, 0, 0, 0)
                                          - position: relative
                                          - right: 10em
                                          - bottom: '-1px'
                                          - font-size: 12px
                                          - line-height: 20px
                                      grid:
                                        - position: relative
                                      name:
                                        - font-variant: small-caps
                                        - justify-self: start
                                        - padding: 0 15px
                                        - color: |
                                            [[[
                                              if ( (states['sensor.sp98_best_price2'].state == 'Bien') ) return 'green';
                                              else return 'var(--primary-color)';
                                            ]]]
                                    type: custom:button-card
                                  - color_type: icon
                                    custom_fields:
                                      price: |
                                        [[[
                                         return `
                                           <span style="color: var(--text-color-sensor);">${states['sensor.carbu_com_super98_01570_price'].state} €/L</span>`
                                        ]]]
                                      date: |
                                        [[[
                                          const date = new Date(states['sensor.carbu_com_super98_01570_price'].last_updated);
                                          const day = date.getDate().toString().padStart(2, '0');
                                          const month = (date.getMonth() + 1).toString().padStart(2, '0');
                                          const year = date.getFullYear().toString();
                                          const formattedDate = `${day}/${month}/${year}`;
                                          return `
                                            <span style="color: var(--text-color-sensor);">${formattedDate}</span>
                                          `;
                                        ]]]
                                    name: Feillens
                                    show_icon: false
                                    show_last_changed: false
                                    show_name: true
                                    styles:
                                      card:
                                        - border: 2px solid var(--primary-color)
                                        - border-radius: 5px
                                        - height: 2em
                                      custom_fields:
                                        price:
                                          - background-color: rgba(0, 0, 0, 0)
                                          - position: absolute
                                          - bottom: '-10px'
                                          - right: 5px
                                          - font-size: 15px
                                          - line-height: 20px
                                          - '--text-color-sensor': |
                                              [[[
                                                if ( (states['sensor.sp98_best_price2'].state == 'Feillens') ) return 'green';
                                                else return 'var(--primary-color)';
                                              ]]]
                                        date:
                                          - background-color: rgba(0, 0, 0, 0)
                                          - position: relative
                                          - right: 10em
                                          - bottom: '-1px'
                                          - font-size: 12px
                                          - line-height: 20px
                                      grid:
                                        - position: relative
                                      name:
                                        - font-variant: small-caps
                                        - justify-self: start
                                        - padding: 0 15px
                                        - color: |
                                            [[[
                                              if ( (states['sensor.sp98_best_price2'].state == 'Feillens') ) return 'green';
                                              else return 'var(--primary-color)';
                                            ]]]
                                    type: custom:button-card
                                  - color_type: icon
                                    custom_fields:
                                      price: |
                                        [[[
                                         return `
                                           <span style="color: var(--text-color-sensor);">${states['sensor.carbu_com_super98_71260_price'].state} €/L</span>`
                                        ]]]
                                      date: |
                                        [[[
                                          const date = new Date(states['sensor.carbu_com_super98_71260_price'].last_updated);
                                          const day = date.getDate().toString().padStart(2, '0');
                                          const month = (date.getMonth() + 1).toString().padStart(2, '0');
                                          const year = date.getFullYear().toString();
                                          const formattedDate = `${day}/${month}/${year}`;
                                          return `
                                            <span style="color: var(--text-color-sensor);">${formattedDate}</span>
                                          `;
                                        ]]]
                                    name: Fleureville
                                    show_icon: false
                                    show_last_changed: false
                                    show_name: true
                                    styles:
                                      card:
                                        - border: 2px solid var(--primary-color)
                                        - border-radius: 5px
                                        - height: 2em
                                      custom_fields:
                                        price:
                                          - background-color: rgba(0, 0, 0, 0)
                                          - position: absolute
                                          - bottom: '-10px'
                                          - right: 5px
                                          - font-size: 15px
                                          - line-height: 20px
                                          - '--text-color-sensor': |
                                              [[[
                                                if ( (states['sensor.sp98_best_price2'].state == 'Fleureville') ) return 'green';
                                                else return 'var(--primary-color)';
                                              ]]]
                                        date:
                                          - background-color: rgba(0, 0, 0, 0)
                                          - position: relative
                                          - right: 10em
                                          - bottom: '-1px'
                                          - font-size: 12px
                                          - line-height: 20px
                                      grid:
                                        - position: relative
                                      name:
                                        - font-variant: small-caps
                                        - justify-self: start
                                        - padding: 0 15px
                                        - color: |
                                            [[[
                                              if ( (states['sensor.sp98_best_price2'].state == 'Fleureville') ) return 'green';
                                              else return 'var(--primary-color)';
                                            ]]]
                                    type: custom:button-card
                                  - color_type: icon
                                    custom_fields:
                                      price: |
                                        [[[
                                         return `
                                           <span style="color: var(--text-color-sensor);">${states['sensor.carbu_com_super98_01750_price'].state} €/L</span>`
                                        ]]]
                                      date: |
                                        [[[
                                          const date = new Date(states['sensor.carbu_com_super98_01750_price'].last_updated);
                                          const day = date.getDate().toString().padStart(2, '0');
                                          const month = (date.getMonth() + 1).toString().padStart(2, '0');
                                          const year = date.getFullYear().toString();
                                          const formattedDate = `${day}/${month}/${year}`;
                                          return `
                                            <span style="color: var(--text-color-sensor);">${formattedDate}</span>
                                          `;
                                        ]]]
                                    name: Replonges
                                    show_icon: false
                                    show_last_changed: false
                                    show_name: true
                                    styles:
                                      card:
                                        - border: 2px solid var(--primary-color)
                                        - border-radius: 5px
                                        - height: 2em
                                      custom_fields:
                                        price:
                                          - background-color: rgba(0, 0, 0, 0)
                                          - position: absolute
                                          - bottom: '-10px'
                                          - right: 5px
                                          - font-size: 15px
                                          - line-height: 20px
                                          - '--text-color-sensor': |
                                              [[[
                                                if ( (states['sensor.sp98_best_price2'].state == 'Replonges') ) return 'green';
                                                else return 'var(--primary-color)';
                                              ]]]
                                        date:
                                          - background-color: rgba(0, 0, 0, 0)
                                          - position: relative
                                          - right: 10em
                                          - bottom: '-1px'
                                          - font-size: 12px
                                          - line-height: 20px
                                      grid:
                                        - position: relative
                                      name:
                                        - font-variant: small-caps
                                        - justify-self: start
                                        - padding: 0 15px
                                        - color: |
                                            [[[
                                              if ( (states['sensor.sp98_best_price2'].state == 'Replonges') ) return 'green';
                                              else return 'var(--primary-color)';
                                            ]]]
                                    type: custom:button-card
                - type: custom:mushroom-chips-card
                  chips:
                    - type: template
                      entity: none
                      icon: ''
                      icon_color: orange
                      content: '{{ states(''sensor.sp98_price2'')}} €/L'
                      tap_action:
                        action: none
                      card_mod:
                        style: |
                          ha-card {
                            --chip-border-width: 0;
                  alignment: center
                  card_mod:
                    style:
                      style: |
                        ha-card {
                          margin: -2px 0px 12px;
                          --chip-background: rgba(var(--rgb-disabled), 0.15);
                          --ha-card-box-shadow: none;
                          --chip-border-radius: 12px;
                          --chip-height: 40px;
                          --chip-padding: 12px;
                          --chip-spacing: 0px;
                        }
      - type: custom:local-conditional-card
        default: hide
        id: monitoring
        card:
          type: vertical-stack
          cards:
            - type: custom:mushroom-title-card
              title: Electricité
              subtitle: ''
            - type: vertical-stack
              cards:
                - type: custom:mushroom-chips-card
                  chips:
                    - type: template
                      entity: sensor.myelectricaldata_current_month
                      icon: mdi:chart-line-variant
                      content: >-
                        {% if
                        'states.sensor.myelectricaldata_consumption_19936902958667.attributes.current_month_evolution'
                        == '0' %}
                          Mois: Pas de données
                        {% else %}
                          Mois: {{ state_attr('sensor.myelectricaldata_consumption_19936902958667', 'current_month_evolution') }} %
                        {% endif %}
                      icon_color: green
                      tap_action:
                        action: none
                    - type: template
                      entity: sensor.myelectricaldata_current_week
                      tap_action:
                        action: none
                      icon: mdi:chart-line-variant
                      content: >-
                        {% if
                        'states.sensor.myelectricaldata_consumption_19936902958667.attributes.current_week_evolution'
                        == '0' %}
                          Semaine: Pas de données
                        {% else %}
                          Semaine: {{ state_attr('sensor.myelectricaldata_consumption_19936902958667', 'current_week_evolution') }} %
                        {% endif %}
                      icon_color: green
                    - type: template
                      content: Détails
                      icon: mdi:poll
                      tap_action:
                        action: fire-dom-event
                        haptic: heavy
                        browser_mod:
                          service: browser_mod.popup
                          data:
                            style: |-
                              --popup-background-color: transperant;
                              --popup-border-radius: 15px;
                              --popup-border-color: transparent;
                              --popup-padding-x: 5px;
                            size: normal
                            content:
                              type: custom:apexcharts-card
                              graph_span: 7d
                              span:
                                start: day
                                offset: '-7d'
                              header:
                                show: true
                                title: Détails
                                show_states: false
                              series:
                                - entity: >-
                                    sensor.myelectricaldata_consumption_19936902958667
                                  name: Conso
                                  type: column
                                  color: deepskyblue
                                  group_by:
                                    duration: 1d
                                    func: max
                                  opacity: 0.7
                                  stroke_width: 2
                                  show:
                                    datalabels: true
                                  data_generator: >
                                    return
                                    entity.attributes.dailyweek.map((dailyweek,
                                    index) => {     
                                      return [new Date(dailyweek).getTime(), entity.attributes.daily[index]];
                                    });
                                - entity: >-
                                    sensor.myelectricaldata_consumption_19936902958667
                                  name: Coût
                                  unit: €
                                  color: orange
                                  type: column
                                  group_by:
                                    duration: 1d
                                    func: max
                                  opacity: 0.7
                                  stroke_width: 2
                                  show:
                                    datalabels: true
                                  data_generator: >
                                    return
                                    entity.attributes.dailyweek.map((dailyweek,
                                    index) => {     
                                       return [new Date(dailyweek).getTime(), entity.attributes.dailyweek_cost[index]];
                                     });
                              apex_config:
                                xaxis:
                                  labels:
                                    show: true
                                yaxis:
                                  labels:
                                    show: true
                                legend:
                                  show: true
                  alignment: center
            - type: horizontal-stack
              cards:
                - type: custom:vertical-stack-in-card
                  cards:
                    - type: custom:mushroom-template-card
                      primary: Conso
                      secondary: ''
                      icon: mdi:flash
                      entity: input_select.carburant
                      layout: vertical
                      icon_color: blue
                      badge_color: ''
                      tap_action:
                        action: fire-dom-event
                        browser_mod:
                          service: browser_mod.popup
                          data:
                            content:
                              type: custom:vertical-stack-in-card
                              card_mod:
                                style: |
                                  ha-card {
                                    margin-top: 0em;
                                      }         
                              mode: vertical
                              cards:
                                - type: custom:content-card-linky
                                  entity: >-
                                    sensor.myelectricaldata_consumption_19936902958667
                                  nbJoursAffichage: '7'
                                  showPeakOffPeak: false
                                - type: divider
                                  style:
                                    height: 10px
                                    width: 100%
                                    margin-left: auto
                                    margin-right: auto
                                    background: var(--card-background-color)
                                - type: custom:apexcharts-card
                                  color_list:
                                    - deepskyblue
                                  graph_span: 7d
                                  span:
                                    start: day
                                    offset: '-7d'
                                  header:
                                    show: true
                                    title: Suivi Consommation
                                    show_states: false
                                  series:
                                    - entity: >-
                                        sensor.myelectricaldata_consumption_19936902958667
                                      type: column
                                      group_by:
                                        duration: 1d
                                        func: max
                                      opacity: 0.7
                                      stroke_width: 2
                                      show:
                                        datalabels: true
                                      data_generator: >
                                        return
                                        entity.attributes.dailyweek.map((dailyweek,
                                        index) => {     
                                                  return [new Date(dailyweek).getTime(), entity.attributes.daily[index]];
                                                });
                                  apex_config:
                                    xaxis:
                                      labels:
                                        show: true
                                    yaxis:
                                      labels:
                                        show: true
                    - type: custom:mushroom-chips-card
                      chips:
                        - type: template
                          entity: none
                          icon: ''
                          icon_color: orange
                          content: >-
                            {{
                            states('sensor.myelectricaldata_consumption_19936902958667')}}
                            KWh
                          tap_action:
                            action: none
                          card_mod:
                            style: |
                              ha-card {
                                --chip-border-width: 0;
                      alignment: center
                      card_mod:
                        style:
                          style: |
                            ha-card {
                              margin: -2px 0px 12px;
                              --chip-background: rgba(var(--rgb-disabled), 0.15);
                              --ha-card-box-shadow: none;
                              --chip-border-radius: 12px;
                              --chip-height: 40px;
                              --chip-padding: 12px;
                              --chip-spacing: 0px;
                            }
                    - type: custom:apexcharts-card
                      color_list:
                        - deepskyblue
                      graph_span: 4d
                      span:
                        start: day
                        offset: '-4d'
                      header:
                        show: true
                        show_states: false
                      series:
                        - entity: sensor.myelectricaldata_consumption_19936902958667
                          type: column
                          group_by:
                            duration: 1d
                            func: max
                          opacity: 0.7
                          stroke_width: 2
                          show:
                            datalabels: true
                          data_generator: >
                            return entity.attributes.dailyweek.map((dailyweek,
                            index) => {     
                                      return [new Date(dailyweek).getTime(), entity.attributes.daily[index]];
                                    });
                      apex_config:
                        xaxis:
                          labels:
                            show: false
                        yaxis:
                          labels:
                            show: false
                      card_mod:
                        style: |
                          ha-card { 
                            box-shadow: none !important;
                            margin: 0px -10px;
                            padding: 0px 20px 0px 0px;
                          }
                - type: custom:vertical-stack-in-card
                  card_mod:
                    style: |
                      ha-card { 
                        margin-bottom: 80px !important;
                      }
                  cards:
                    - type: custom:mushroom-template-card
                      primary: Coût
                      secondary: ''
                      icon: mdi:currency-eur
                      layout: vertical
                      badge_color: ''
                      icon_color: orange
                      tap_action:
                        action: fire-dom-event
                        haptic: heavy
                        browser_mod:
                          service: browser_mod.popup
                          data:
                            size: large
                            content:
                              type: custom:vertical-stack-in-card
                              card_mod:
                                style: |
                                  ha-card {
                                    margin-top: 0em;
                                      }         
                              mode: vertical
                              cards:
                                - type: entities
                                  title: Coûts
                                  entities:
                                    - entity: >-
                                        sensor.myelectricaldata_consumption_19936902958667
                                      type: custom:multiple-entity-row
                                      name: Semaine
                                      show_state: false
                                      secondary_info: null
                                      entities:
                                        - entity: sensor.myelectricaldata_current_week
                                          name: En cours
                                        - entity: sensor.myelectricaldata_last_week
                                          name: Dernière
                                        - entity: sensor.myelectricaldata_last_week_cost
                                          name: Coût
                                    - entity: >-
                                        sensor.myelectricaldata_consumption_19936902958667
                                      type: custom:multiple-entity-row
                                      name: Mois
                                      show_state: false
                                      secondary_info: null
                                      entities:
                                        - entity: sensor.myelectricaldata_current_month
                                          name: En cours
                                        - entity: sensor.myelectricaldata_last_month
                                          name: Dernière
                                        - entity: sensor.myelectricaldata_last_month_cost
                                          name: Coût
                                    - entity: >-
                                        sensor.myelectricaldata_consumption_19936902958667
                                      type: custom:multiple-entity-row
                                      name: Année
                                      show_state: false
                                      secondary_info: null
                                      entities:
                                        - entity: sensor.myelectricaldata_current_year
                                          name: En cours
                                        - entity: sensor.myelectricaldata_last_year
                                          name: Dernière
                                        - entity: sensor.myelectricaldata_last_year_cost
                                          name: Coût
                                    - entity: sensor.myelectricaldata_last_update
                                      type: custom:multiple-entity-row
                                      name: Mise à jour
                                      icon: mdi:update
                                - type: custom:apexcharts-card
                                  color_list:
                                    - orange
                                  graph_span: 7d
                                  span:
                                    start: day
                                    offset: '-7d'
                                  header:
                                    show: true
                                    title: Journalier
                                    show_states: false
                                  series:
                                    - entity: >-
                                        sensor.myelectricaldata_consumption_19936902958667
                                      name: Coût
                                      type: column
                                      unit: €
                                      group_by:
                                        duration: 1d
                                        func: max
                                      opacity: 0.7
                                      stroke_width: 2
                                      show:
                                        datalabels: true
                                      data_generator: >
                                        return
                                        entity.attributes.dailyweek.map((dailyweek,
                                        index) => {     
                                                  return [new Date(dailyweek).getTime(), entity.attributes.dailyweek_cost[index]];
                                                });
                                  apex_config:
                                    xaxis:
                                      labels:
                                        show: true
                                    yaxis:
                                      labels:
                                        show: true
                    - type: custom:mushroom-chips-card
                      chips:
                        - type: template
                          entity: none
                          icon: ''
                          icon_color: orange
                          content: >-
                            {{ states("sensor.myelectricaldata_yesterday_cost")
                            }} €
                          tap_action:
                            action: none
                          card_mod:
                            style: |
                              ha-card {
                                --chip-border-width: 0;
                      alignment: center
                      card_mod:
                        style:
                          style: |
                            ha-card {
                              margin: -2px 0px 12px;
                              --chip-background: rgba(var(--rgb-disabled), 0.15);
                              --ha-card-box-shadow: none;
                              --chip-border-radius: 12px;
                              --chip-height: 40px;
                              --chip-padding: 12px;
                              --chip-spacing: 0px;
                            }
                    - type: custom:apexcharts-card
                      color_list:
                        - orange
                      graph_span: 4d
                      span:
                        start: day
                        offset: '-4d'
                      header:
                        show: true
                        show_states: false
                      series:
                        - entity: sensor.myelectricaldata_consumption_19936902958667
                          name: Coût
                          type: column
                          unit: €
                          group_by:
                            duration: 1d
                            func: max
                          opacity: 0.7
                          stroke_width: 2
                          show:
                            datalabels: true
                          data_generator: >
                            return entity.attributes.dailyweek.map((dailyweek,
                            index) => {     
                                      return [new Date(dailyweek).getTime(), entity.attributes.dailyweek_cost[index]];
                                    });
                      apex_config:
                        xaxis:
                          labels:
                            show: false
                        yaxis:
                          labels:
                            show: false
                      card_mod:
                        style: |
                          ha-card { 
                            box-shadow: none !important;
                            margin: 0px -10px;
                            padding: 0px 20px 0px 0px;
                          }
      - type: custom:local-conditional-card
        id: device
        default: hide
        card:
          type: vertical-stack
          title: Machines
          cards:
            - type: horizontal-stack
              cards:
                - type: custom:stack-in-card
                  cards:
                    - type: custom:mushroom-template-card
                      primary: HP M255
                      secondary: >-
                        {% if not is_state('sensor.hp_laserjet_pro',
                        'unavailable') %}
                          En Ligne
                        {% else %}
                          Hors Ligne
                        {% endif %}
                      icon: mdi:printer
                      entity: sensor.hp_laserjet_pro
                      layout: vertical
                      icon_color: >-
                        {% if not is_state('sensor.hp_laserjet_pro',
                        'unavailable') %}
                          blue-grey
                        {% else %}
                          red
                        {% endif %}
                      badge_color: >-
                        {% if not is_state('sensor.hp_laserjet_pro',
                        'unavailable') %}
                          green
                        {% else %}
                          red
                        {% endif %}
                      badge_icon: none
                      tap_action:
                        action: fire-dom-event
                        browser_mod:
                          service: browser_mod.popup
                          data:
                            title: Imprimante HP
                            content:
                              type: custom:vertical-stack-in-card
                              cards:
                                - type: entities
                                  entities:
                                    - entity: sensor.hp_laserjet_pro
                                      name: HP LaserJet M255
                                - type: horizontal-stack
                                  cards:
                                    - type: custom:bar-card
                                      entities:
                                        - entity: >-
                                            sensor.hp_colorlaserjet_m255_m256_cyan_cartridge_hp_w2211a
                                          name: Cyan
                                          color: cyan
                                        - entity: >-
                                            sensor.hp_colorlaserjet_m255_m256_magenta_cartridge_hp_w2213a
                                          name: Magenta
                                          color: magenta
                                        - entity: >-
                                            sensor.hp_colorlaserjet_m255_m256_yellow_cartridge_hp_w2212a
                                          name: Jaune
                                          color: yellow
                                        - entity: >-
                                            sensor.hp_colorlaserjet_m255_m256_black_cartridge_hp_w2210x
                                          name: Noir
                                          color: black
                                      stack: horizontal
                                      direction: up
                                      height: 200px
                    - type: custom:uptime-card
                      entity: sensor.hp_laserjet_pro
                      ok: 'on'
                      ko: 'off'
                      hours_to_show: 12
                      alignment:
                        tooltip_first: true
                      show:
                        footer: false
                        header: false
                        status: false
                      bar:
                        height: 40
                        round: 10
                        spacing: 10
                        amount: 6
                  card_mod:
                    style: |
                      ha-card {
                        {% if is_state('sensor.hp_laserjet_pro','unavailable') %}
                            background: rgba(226,84,66,0.2);
                        {% else %}
                            background: rgba(101,170,91,0.2);
                        {% endif %}
                      }
                - type: custom:stack-in-card
                  cards:
                    - type: custom:mushroom-template-card
                      primary: Serveur
                      secondary: |2-
                          {% if is_state('device_tracker.dalg_hassio', 'home') %}
                            En ligne
                          {% else %}
                            Hors ligne
                          {% endif %}
                      icon: mdi:server
                      layout: vertical
                      badge_color: |2-
                          {% if is_state('device_tracker.dalg_hassio', 'home') %}
                            green
                          {% else %}
                            red
                          {% endif %}
                      icon_color: |2-
                          {% if is_state('device_tracker.dalg_hassio', 'home') %}
                            blue-grey
                          {% else %}
                            red
                          {% endif %}
                      tap_action:
                        action: fire-dom-event
                        browser_mod:
                          service: browser_mod.popup
                          data:
                            title: Serveur HA
                            content:
                              type: custom:vertical-stack-in-card
                              card_mod:
                                style: |
                                  ha-card {
                                    margin-top: 0em;
                                      }         
                              mode: vertical
                              cards:
                                - type: entities
                                  entities:
                                    - entity: device_tracker.dalg_hassio
                                      icon: mdi:power
                                      name: Etat
                                    - entity: sensor.last_boot
                                      name: Dernier démarrage
                                    - type: divider
                                      style:
                                        height: 1px
                                        width: 100%
                                        margin-left: auto
                                        margin-right: auto
                                        background: '#62717b'
                                    - entity: sensor.disk_use_percent_config
                                      name: Etat Disque
                                    - entity: sensor.memory_free
                                      name: Etat Mémoire
                                    - type: divider
                                      style:
                                        height: 1px
                                        width: 100%
                                        margin-left: auto
                                        margin-right: auto
                                        background: '#62717b'
                                    - entity: sensor.cert_expiry_timestamp_dalg_ovh
                                      name: Certificat
                                      card_mod:
                                        style:
                                          hui-generic-entity-row:
                                            $: |
                                              /* Couleur de l'icône */ state-badge{
                                                color: deepskyblue;
                                              }
                                              /* Couleur de l'état */ .info {
                                                color: deepskyblue;
                                                text-transform: uppercase;
                                              }
                                          .: |
                                            /* Couleur de l'état */ .text-content {
                                              color: deepskyblue;
                                            }
                                    - entity: >-
                                        sensor.cert_expiry_timestamp_10_1_1_79_8123
                                      name: Certificat local
                                      card_mod:
                                        style:
                                          hui-generic-entity-row:
                                            $: |
                                              /* Couleur de l'icône */ state-badge{
                                                color: deepskyblue;
                                              }
                                              /* Couleur de l'état */ .info {
                                                color: deepskyblue;
                                                text-transform: uppercase;
                                              }
                                          .: |
                                            /* Couleur de l'état */ .text-content {
                                              color: deepskyblue;
                                            }
                                - type: divider
                                  style:
                                    height: 1px
                                    width: 100%
                                    margin-left: auto
                                    margin-right: auto
                                    background: '#62717b'
                                - type: horizontal-stack
                                  cards:
                                    - type: horizontal-stack
                                      cards:
                                        - type: custom:mini-graph-card
                                          card_mod:
                                            style: |
                                              ha-card {
                                                --ha-card-border-radius: 0px
                                              }
                                              ha-card {
                                                font-family: var(--primary-font-family);
                                              }

                                              .graph {
                                                padding-top: 0px;
                                                padding-bottom: 0px;
                                              }
                                              .info {
                                                padding-bottom: 0px;
                                              }
                                              .flex {
                                                padding-bottom: 10px;
                                              }
                                          entities:
                                            - sensor.processor_use_percent
                                          name: CPU
                                          align_state: center
                                          align_icon: right
                                          font_size: 100
                                          font_size_header: 11
                                          hours_to_show: 24
                                          color_thresholds:
                                            - color: '#ef1d0f'
                                              value: 100
                                            - color: '#ef5a0f'
                                              value: 75
                                            - color: '#f0da11'
                                              value: 50
                                            - color: '#11f13a'
                                              value: 20
                                            - color: '#1da4f2'
                                              value: 0
                                          line_color: var(--accent-color)
                                          line_width: 3
                                          animate: true
                                          points_per_hour: 5
                                          show:
                                            fill: false
                                            graph: line
                                            extrema: true
                                            icon: true
                                            name: true
                                    - type: custom:mini-graph-card
                                      card_mod:
                                        style: |
                                          ha-card {
                                            --ha-card-border-radius: 0px
                                          ha-card {
                                            font-family: var(--primary-font-family);
                                          }
                                          .graph {
                                            padding-top: 0px;
                                            padding-bottom: 0px;
                                          }
                                          .info {
                                            padding-bottom: 0px;
                                          }
                                          .flex {
                                            padding-bottom: 10px;
                                          }
                                      entities:
                                        - sensor.db_size
                                      name: Database
                                      align_state: center
                                      align_icon: right
                                      font_size: 100
                                      font_size_header: 11
                                      hours_to_show: 24
                                      line_color: var(--accent-color)
                                      line_width: 20
                                      animate: true
                                      points_per_hour: 1
                                      show:
                                        fill: false
                                        graph: bar
                                        extrema: true
                                        icon: true
                                        name: true
                      entity: device_tracker.dalg_hassio
                      badge_icon: none
                    - type: custom:uptime-card
                      entity: device_tracker.dalg_hassio
                      ok: home
                      ko: not_home
                      hours_to_show: 12
                      alignment:
                        tooltip_first: true
                      show:
                        footer: false
                        header: false
                        status: false
                      bar:
                        height: 40
                        round: 10
                        spacing: 10
                        amount: 6
                  card_mod:
                    style: |
                      ha-card {
                        {% if is_state('device_tracker.dalg_hassio','not_home') %}
                            background: rgba(226,84,66,0.2);

                        {% else %}
                            background: rgba(101,170,91,0.2);
                        {% endif %}
                      }
            - type: vertical-stack
              cards:
                - type: horizontal-stack
                  cards:
                    - type: custom:stack-in-card
                      cards:
                        - type: custom:mushroom-template-card
                          primary: Dream Machine
                          secondary: |-
                            {% if is_state('device_tracker.dalg_udm', 'home') %}
                              En Ligne
                            {% else %}
                              Hors Ligne
                            {% endif %}
                          icon: phu:unifi
                          entity: device_tracker.dalg_udm
                          layout: vertical
                          icon_color: |-
                            {% if is_state('device_tracker.dalg_udm', 'home') %}
                              blue-grey
                            {% else %}
                              red
                            {% endif %}
                          badge_color: |-
                            {% if is_state('device_tracker.dalg_udm', 'home') %}
                              green
                            {% else %}
                              red
                            {% endif %}
                          badge_icon: none
                          tap_action:
                            action: fire-dom-event
                            browser_mod:
                              service: browser_mod.popup
                              data:
                                title: UDM-Pro
                                content:
                                  type: custom:vertical-stack-in-card
                                  card_mod:
                                    style: |
                                      ha-card {
                                        margin-top: 0em;
                                          }         
                                  mode: vertical
                                  cards:
                                    - type: entities
                                      entities:
                                        - entity: device_tracker.dalg_udm
                                          icon: mdi:power
                                          name: Etat
                                        - entity: sensor.unifi_gateway_wan_uptime
                                          name: Dernier démarrage
                                        - type: divider
                                          style:
                                            height: 1px
                                            width: 100%
                                            margin-left: auto
                                            margin-right: auto
                                            background: '#62717b'
                                        - entity: sensor.unifi_gateway_wlan_num_user
                                          name: Nombre Client
                                        - entity: sensor.unifi_gateway_www
                                          name: Etat Internet
                                        - type: divider
                                          style:
                                            height: 1px
                                            width: 100%
                                            margin-left: auto
                                            margin-right: auto
                                            background: '#62717b'
                                        - entity: sensor.unifi_gateway_firmware_version
                                          name: Firmware Version
                                          card_mod:
                                            style:
                                              hui-generic-entity-row:
                                                $: |
                                                  /* Couleur de l'icône */ state-badge{
                                                    color: deepskyblue;
                                                  }
                                                  /* Couleur de l'état */ .info {
                                                    color: deepskyblue;
                                                    text-transform: uppercase;
                                                  }
                                              .: |
                                                /* Couleur de l'état */ .text-content {
                                                  color: deepskyblue;
                                                }
                                        - entity: sensor.unifi_gateway_firmware_upgradable
                                          name: Nombre Mise à Jour
                                          card_mod:
                                            style:
                                              hui-generic-entity-row:
                                                $: |
                                                  /* Couleur de l'icône */ state-badge{
                                                    color: deepskyblue;
                                                  }
                                                  /* Couleur de l'état */ .info {
                                                    color: deepskyblue;
                                                    text-transform: uppercase;
                                                  }
                                              .: |
                                                /* Couleur de l'état */ .text-content {
                                                  color: deepskyblue;
                                                }
                                    - type: divider
                                      style:
                                        height: 1px
                                        width: 100%
                                        margin-left: auto
                                        margin-right: auto
                                        background: '#62717b'
                                    - type: horizontal-stack
                                      cards:
                                        - type: horizontal-stack
                                          cards:
                                            - type: custom:mini-graph-card
                                              card_mod:
                                                style: |
                                                  ha-card {
                                                    --ha-card-border-radius: 0px
                                                  }
                                                  ha-card {
                                                    font-family: var(--primary-font-family);
                                                  }

                                                  .graph {
                                                    padding-top: 0px;
                                                    padding-bottom: 0px;
                                                  }
                                                  .info {
                                                    padding-bottom: 0px;
                                                  }
                                                  .flex {
                                                    padding-bottom: 10px;
                                                  }
                                              entities:
                                                - sensor.unifi_gateway_wan_cpu
                                              name: CPU
                                              align_state: center
                                              align_icon: right
                                              font_size: 100
                                              font_size_header: 11
                                              hours_to_show: 24
                                              color_thresholds:
                                                - color: '#ef1d0f'
                                                  value: 100
                                                - color: '#ef5a0f'
                                                  value: 75
                                                - color: '#f0da11'
                                                  value: 50
                                                - color: '#11f13a'
                                                  value: 20
                                                - color: '#1da4f2'
                                                  value: 0
                                              line_color: var(--accent-color)
                                              line_width: 3
                                              animate: true
                                              points_per_hour: 5
                                              show:
                                                fill: false
                                                graph: line
                                                extrema: true
                                                icon: true
                                                name: true
                                        - type: custom:mini-graph-card
                                          card_mod:
                                            style: |
                                              ha-card {
                                                --ha-card-border-radius: 0px
                                              ha-card {
                                                font-family: var(--primary-font-family);
                                              }
                                              .graph {
                                                padding-top: 0px;
                                                padding-bottom: 0px;
                                              }
                                              .info {
                                                padding-bottom: 0px;
                                              }
                                              .flex {
                                                padding-bottom: 10px;
                                              }
                                          entities:
                                            - sensor.unifi_gateway_wan_mem
                                          name: RAM
                                          align_state: center
                                          align_icon: right
                                          font_size: 100
                                          font_size_header: 11
                                          hours_to_show: 24
                                          line_color: var(--accent-color)
                                          line_width: 20
                                          animate: true
                                          points_per_hour: 1
                                          show:
                                            fill: false
                                            graph: bar
                                            extrema: true
                                            icon: true
                                            name: true
                        - type: custom:uptime-card
                          entity: device_tracker.dalg_udm
                          ok: home
                          ko: not_home
                          hours_to_show: 12
                          alignment:
                            tooltip_first: true
                          show:
                            footer: false
                            header: false
                            status: false
                          bar:
                            height: 40
                            round: 10
                            spacing: 10
                            amount: 6
                      card_mod:
                        style: |
                          ha-card {
                            {% if is_state('device_tracker.dalg_udm','not_home') %}
                                background: rgba(226,84,66,0.2);
                            {% else %}
                                background: rgba(101,170,91,0.2);
                            {% endif %}
                          }
                    - type: custom:stack-in-card
                      cards:
                        - type: custom:mushroom-template-card
                          primary: LTE
                          secondary: |2-
                              {% if is_state('device_tracker.dalg_lte', 'home') %}
                                En ligne
                              {% else %}
                                Hors ligne
                              {% endif %}
                          icon: phu:unifi
                          layout: vertical
                          badge_color: |2-
                              {% if is_state('device_tracker.dalg_lte', 'home') %}
                                green
                              {% else %}
                                red
                              {% endif %}
                          icon_color: |2-
                              {% if is_state('device_tracker.dalg_lte', 'home') %}
                                blue-grey
                              {% else %}
                                red
                              {% endif %}
                          tap_action:
                            action: fire-dom-event
                            browser_mod:
                              service: browser_mod.popup
                              data:
                                title: Serveur HA
                                content:
                                  type: custom:vertical-stack-in-card
                                  card_mod:
                                    style: |
                                      ha-card {
                                        margin-top: 0em;
                                          }         
                                  mode: vertical
                                  cards:
                                    - type: entities
                                      entities:
                                        - entity: device_tracker.dalg_lte
                                          icon: mdi:power
                                          name: Etat
                                        - entity: sensor.last_boot
                                          name: Dernier démarrage
                                        - type: divider
                                          style:
                                            height: 1px
                                            width: 100%
                                            margin-left: auto
                                            margin-right: auto
                                            background: '#62717b'
                                        - entity: sensor.disk_use_percent_config
                                          name: Etat Disque
                                        - entity: sensor.memory_free
                                          name: Etat Mémoire
                                        - type: divider
                                          style:
                                            height: 1px
                                            width: 100%
                                            margin-left: auto
                                            margin-right: auto
                                            background: '#62717b'
                                        - entity: sensor.cert_expiry_timestamp_dalg_ovh
                                          name: Certificat
                                          card_mod:
                                            style:
                                              hui-generic-entity-row:
                                                $: |
                                                  /* Couleur de l'icône */ state-badge{
                                                    color: deepskyblue;
                                                  }
                                                  /* Couleur de l'état */ .info {
                                                    color: deepskyblue;
                                                    text-transform: uppercase;
                                                  }
                                              .: |
                                                /* Couleur de l'état */ .text-content {
                                                  color: deepskyblue;
                                                }
                                        - entity: >-
                                            sensor.cert_expiry_timestamp_10_1_1_79_8123
                                          name: Certificat local
                                          card_mod:
                                            style:
                                              hui-generic-entity-row:
                                                $: |
                                                  /* Couleur de l'icône */ state-badge{
                                                    color: deepskyblue;
                                                  }
                                                  /* Couleur de l'état */ .info {
                                                    color: deepskyblue;
                                                    text-transform: uppercase;
                                                  }
                                              .: |
                                                /* Couleur de l'état */ .text-content {
                                                  color: deepskyblue;
                                                }
                                    - type: divider
                                      style:
                                        height: 1px
                                        width: 100%
                                        margin-left: auto
                                        margin-right: auto
                                        background: '#62717b'
                                    - type: horizontal-stack
                                      cards:
                                        - type: horizontal-stack
                                          cards:
                                            - type: custom:mini-graph-card
                                              card_mod:
                                                style: |
                                                  ha-card {
                                                    --ha-card-border-radius: 0px
                                                  }
                                                  ha-card {
                                                    font-family: var(--primary-font-family);
                                                  }

                                                  .graph {
                                                    padding-top: 0px;
                                                    padding-bottom: 0px;
                                                  }
                                                  .info {
                                                    padding-bottom: 0px;
                                                  }
                                                  .flex {
                                                    padding-bottom: 10px;
                                                  }
                                              entities:
                                                - sensor.processor_use_percent
                                              name: CPU
                                              align_state: center
                                              align_icon: right
                                              font_size: 100
                                              font_size_header: 11
                                              hours_to_show: 24
                                              color_thresholds:
                                                - color: '#ef1d0f'
                                                  value: 100
                                                - color: '#ef5a0f'
                                                  value: 75
                                                - color: '#f0da11'
                                                  value: 50
                                                - color: '#11f13a'
                                                  value: 20
                                                - color: '#1da4f2'
                                                  value: 0
                                              line_color: var(--accent-color)
                                              line_width: 3
                                              animate: true
                                              points_per_hour: 5
                                              show:
                                                fill: false
                                                graph: line
                                                extrema: true
                                                icon: true
                                                name: true
                                        - type: custom:mini-graph-card
                                          card_mod:
                                            style: |
                                              ha-card {
                                                --ha-card-border-radius: 0px
                                              ha-card {
                                                font-family: var(--primary-font-family);
                                              }
                                              .graph {
                                                padding-top: 0px;
                                                padding-bottom: 0px;
                                              }
                                              .info {
                                                padding-bottom: 0px;
                                              }
                                              .flex {
                                                padding-bottom: 10px;
                                              }
                                          entities:
                                            - sensor.db_size
                                          name: Database
                                          align_state: center
                                          align_icon: right
                                          font_size: 100
                                          font_size_header: 11
                                          hours_to_show: 24
                                          line_color: var(--accent-color)
                                          line_width: 20
                                          animate: true
                                          points_per_hour: 1
                                          show:
                                            fill: false
                                            graph: bar
                                            extrema: true
                                            icon: true
                                            name: true
                          entity: device_tracker.dalg_lte
                          badge_icon: none
                        - type: custom:uptime-card
                          entity: device_tracker.dalg_lte
                          ok: home
                          ko: not_home
                          hours_to_show: 12
                          alignment:
                            tooltip_first: true
                          show:
                            footer: false
                            header: false
                            status: false
                          bar:
                            height: 40
                            round: 10
                            spacing: 10
                            amount: 6
                      card_mod:
                        style: |
                          ha-card {
                            {% if is_state('device_tracker.dalg_lte','not_home') %}
                                background: rgba(226,84,66,0.2);
                            {% else %}
                                background: rgba(101,170,91,0.2);
                            {% endif %}
                          }
            - type: vertical-stack
              cards:
                - type: horizontal-stack
                  cards:
                    - type: custom:stack-in-card
                      cards:
                        - type: custom:mushroom-template-card
                          primary: NAS
                          secondary: |2-
                              {% if is_state('device_tracker.dalg_nas', 'home') %}
                                En ligne
                              {% else %}
                                Hors ligne
                              {% endif %}
                          icon: mdi:nas
                          layout: vertical
                          badge_color: |-
                            {% if is_state('device_tracker.dalg_nas', 'home') %}
                              green
                            {% else %}
                              red
                            {% endif %}
                          icon_color: |2-
                              {% if is_state('device_tracker.dalg_nas', 'home') %}
                                blue-grey
                              {% else %}
                                red
                              {% endif %}
                          entity: device_tracker.dalg_nas
                          tap_action:
                            action: fire-dom-event
                            browser_mod:
                              service: browser_mod.popup
                              data:
                                title: NAS
                                content:
                                  type: custom:vertical-stack-in-card
                                  card_mod:
                                    style: |
                                      ha-card {
                                        margin-top: 0em;
                                          }
                                  mode: vertical
                                  cards:
                                    - type: custom:mini-graph-card
                                      card_mod:
                                        style: |
                                          ha-card {
                                            --ha-card-border-radius: 20px
                                          ha-card {
                                            font-family: var(--primary-font-family);
                                            margin-bottom: -10px;
                                          }
                                          .graph {
                                            padding-top: 0px;
                                            padding-bottom: 0px;
                                          }
                                          .info {
                                            padding-bottom: 0px;
                                          }
                                          .flex {
                                            padding-bottom: 6px;
                                          }
                                      entities:
                                        - entity: sensor.dalg_nas_download_throughput
                                          name: Downloads
                                        - entity: sensor.dalg_nas_upload_throughput
                                          name: Upload
                                      name: Charge Réseau
                                      align_state: center
                                      align_icon: right
                                      color_thresholds:
                                        - color: '#ef1d0f'
                                          value: 1000000
                                        - color: '#ef5a0f'
                                          value: 500000
                                        - color: '#f0da11'
                                          value: 250000
                                        - color: '#11f13a'
                                          value: 100000
                                        - color: '#1da4f2'
                                          value: 0
                                      font_size: 100
                                      font_size_header: 11
                                      hours_to_show: 24
                                      line_color: var(--accent-color)
                                      line_width: 2
                                      animate: true
                                      points_per_hour: 2
                                      show:
                                        fill: false
                                        graph: line
                                        extrema: true
                                        icon: true
                                        name: true
                                    - type: divider
                                      style:
                                        height: 1px
                                        width: 100%
                                        margin-left: auto
                                        margin-right: auto
                                        background: '#62717b'
                                    - type: entities
                                      card_mod:
                                        style: |
                                          ha-card {
                                            font-family: var(--primary-font-family);
                                            --my-font01-color: {% if states('sensor.dalg_nas_volume_1_volume_used')|int < 70 %} green {% else %} orangered {% endif %};
                                            --my-font02-color: {% if states('sensor.dalg_nas_volume_1_average_disk_temp')|int < 50 %} green {% else %} orangered {% endif %};
                                            --my-font03-color: {% if states('sensor.dalg_nas_volume_1_status')== 'normal' %} green {% else %} red {% endif %}
                                          } 
                                          .card-content {
                                            padding-top: 0px;
                                            padding-bottom: 0px;
                                          }              
                                      entities:
                                        - type: custom:fold-entity-row
                                          head:
                                            entity: sensor.dalg_nas_volume_1_status
                                            name: Volume
                                            type: custom:multiple-entity-row
                                            show_state: false
                                            entities:
                                              - entity: sensor.dalg_nas_volume_1_volume_used
                                                name: Utilisé
                                                format: precision2
                                                styles:
                                                  color: var(--my-font01-color)
                                              - entity: >-
                                                  sensor.dalg_nas_volume_1_average_disk_temp
                                                name: Température
                                                format: precision2
                                                styles:
                                                  color: var(--my-font02-color)
                                              - entity: sensor.dalg_nas_volume_1_status
                                                name: Etat
                                                format: precision2
                                                styles:
                                                  color: var(--my-font03-color)
                                          group_config: null
                                          secondary_info: last-changed
                                          padding: 5
                                          entities:
                                            - entity: sensor.dalg_nas_disque_1_status
                                              type: custom:multiple-entity-row
                                              entities:
                                                - entity: sensor.dalg_nas_disque_1_temperature
                                                  name: false
                                            - entity: sensor.dalg_nas_disque_2_status
                                              type: custom:multiple-entity-row
                                              entities:
                                                - entity: sensor.dalg_nas_disque_2_temperature
                                                  name: false
                                            - entity: sensor.dalg_nas_disque_4_status
                                              type: custom:multiple-entity-row
                                              entities:
                                                - entity: sensor.dalg_nas_disque_4_temperature
                                                  name: false
                                            - entity: sensor.dalg_nas_disque_8_status
                                              type: custom:multiple-entity-row
                                              entities:
                                                - entity: sensor.dalg_nas_disque_8_temperature
                                                  name: false
                                            - entity: sensor.dalg_nas_disque_5_status
                                              type: custom:multiple-entity-row
                                              entities:
                                                - entity: sensor.dalg_nas_disque_5_temperature
                                                  name: false
                                            - entity: sensor.dalg_nas_disque_6_status
                                              type: custom:multiple-entity-row
                                              entities:
                                                - entity: sensor.dalg_nas_disque_6_temperature
                                                  name: false
                                            - entity: sensor.dalg_nas_disque_3_status
                                              type: custom:multiple-entity-row
                                              entities:
                                                - entity: sensor.dalg_nas_disque_3_temperature
                                                  name: false
                                            - entity: sensor.dalg_nas_disque_7_status
                                              type: custom:multiple-entity-row
                                              entities:
                                                - entity: sensor.dalg_nas_disque_7_temperature
                                                  name: false
                                        - entity: update.dalg_nas_dsm_update
                                          name: Mise à jour
                                          icon: mdi:update
                                    - type: divider
                                      style:
                                        height: 1px
                                        width: 100%
                                        margin-left: auto
                                        margin-right: auto
                                        background: '#62717b'
                                    - type: horizontal-stack
                                      cards:
                                        - type: horizontal-stack
                                          cards:
                                            - type: custom:mini-graph-card
                                              card_mod:
                                                style: |
                                                  ha-card {
                                                    --ha-card-border-radius: 0px
                                                    font-family: var(--primary-font-family);
                                                  }
                                                  .graph {
                                                    padding-top: 0px;
                                                    padding-bottom: 0px;
                                                  }
                                                  .info {
                                                    padding-bottom: 0px;
                                                  }
                                                  .flex {
                                                    padding-bottom: 10px;
                                                  }
                                              entities:
                                                - sensor.dalg_nas_cpu_utilization_total
                                              name: CPU
                                              align_state: center
                                              align_icon: right
                                              font_size: 100
                                              font_size_header: 11
                                              hours_to_show: 24
                                              line_color: var(--accent-color)
                                              line_width: 4
                                              animate: true
                                              points_per_hour: 2
                                              show:
                                                fill: false
                                                graph: line
                                                extrema: true
                                                icon: true
                                                name: true
                                        - type: custom:mini-graph-card
                                          card_mod:
                                            style: |
                                              ha-card {
                                                --ha-card-border-radius: 0px
                                                font-family: var(--primary-font-family);
                                              }
                                              .graph {
                                                padding-top: 0px;
                                                padding-bottom: 0px;
                                              }
                                              .info {
                                                padding-bottom: 0px;
                                              }
                                              .flex {
                                                padding-bottom: 10px;
                                              }
                                          entities:
                                            - sensor.dalg_nas_memory_usage_real
                                          name: RAM
                                          align_state: center
                                          align_icon: right
                                          font_size: 100
                                          font_size_header: 11
                                          hours_to_show: 24
                                          line_color: var(--accent-color)
                                          line_width: 4
                                          animate: true
                                          points_per_hour: 2
                                          show:
                                            fill: false
                                            graph: line
                                            extrema: true
                                            icon: true
                                            name: true
                                    - type: divider
                                      style:
                                        height: 1px
                                        width: 90%
                                        margin-left: auto
                                        margin-right: auto
                                        background: '#62717b'
                                    - type: custom:mini-graph-card
                                      card_mod:
                                        style: |
                                          ha-card {
                                            font-family: var(--primary-font-family);
                                            margin-bottom: -10px;
                                          }
                                          .graph {
                                            padding-top: 0px;
                                            padding-bottom: 0px;
                                          }
                                          .info {
                                            padding-bottom: 0px;
                                          }
                                          .flex {
                                            padding-bottom: 6px;
                                          }
                                      entities:
                                        - entity: sensor.dalg_nas_temperature
                                          name: CPU
                                        - entity: sensor.dalg_nas_disque_1_temperature
                                          name: HDD1
                                        - entity: sensor.dalg_nas_disque_2_temperature
                                          name: HDD2
                                        - entity: sensor.dalg_nas_disque_3_temperature
                                          name: HDD3
                                        - entity: sensor.dalg_nas_disque_4_temperature
                                          name: HDD4
                                      name: Température CPU
                                      align_state: center
                                      align_icon: right
                                      color_thresholds:
                                        - color: '#ef1d0f'
                                          value: 35
                                        - color: '#ef5a0f'
                                          value: 30
                                        - color: '#f0da11'
                                          value: 25
                                        - color: '#11f13a'
                                          value: 20
                                        - color: '#1da4f2'
                                          value: 15
                                      font_size: 100
                                      font_size_header: 11
                                      hours_to_show: 24
                                      line_color: var(--accent-color)
                                      line_width: 2
                                      animate: true
                                      points_per_hour: 2
                                      show:
                                        fill: false
                                        graph: graph
                                        extrema: true
                                        icon: true
                                        name: true
                          badge_icon: none
                        - type: custom:mushroom-chips-card
                          chips:
                            - type: template
                              entity: sensor.dalg_nas_volume_1_volume_used
                              content: '{{ states(entity) }} %'
                              icon: mdi:harddisk
                              icon_color: >
                                {% if
                                states('sensor.dalg_nas_volume_1_volume_used') |
                                int > 90 %}
                                  red
                                {% elif
                                states('sensor.dalg_nas_volume_1_volume_used') |
                                int > 60 %}
                                  orange
                                {% elif
                                states('sensor.dalg_nas_volume_1_volume_used') |
                                int > 40 %}
                                  yellow
                                {% elif
                                states('sensor.dalg_nas_volume_1_volume_used') |
                                int > 0 %}
                                  green
                                {% else %}
                                  red
                                {% endif %}
                              tap_action: none
                          alignment: center
                          card_mod:
                            style:
                              style: |
                                ha-card {
                                  margin: 10px 0px 10px;
                                  --chip-background: rgba(var(--rgb-disabled), 0.15);
                                  --ha-card-box-shadow: none;
                                  --chip-border-radius: 12px;
                                  --chip-height: 40px;
                                  --chip-padding: 8px;
                                  --chip-spacing: 3px;
                                }
                        - type: custom:uptime-card
                          entity: device_tracker.dalg_nas
                          ok: home
                          ko: not_home
                          hours_to_show: 12
                          alignment:
                            tooltip_first: true
                          show:
                            footer: false
                            header: false
                            status: false
                          bar:
                            height: 40
                            round: 10
                            spacing: 10
                            amount: 6
                      card_mod:
                        style: |
                          ha-card {
                            {% if is_state('device_tracker.dalg_nas','not_home') %}
                                background: rgba(226,84,66,0.2);
                            {% else %}
                                background: rgba(101,170,91,0.2);
                            {% endif %}
                          }
                    - type: custom:stack-in-card
                      cards:
                        - type: custom:mushroom-template-card
                          primary: UPS
                          secondary: |2-
                              {% if is_state('device_tracker.dalg_ups', 'home') %}
                                En ligne
                              {% else %}
                                Hors ligne
                              {% endif %}
                          icon: mdi:car-battery
                          layout: vertical
                          badge_color: |-
                            {% if is_state('device_tracker.dalg_ups', 'home') %}
                              green
                            {% else %}
                              red
                            {% endif %}
                          icon_color: |2-
                              {% if is_state('device_tracker.dalg_ups', 'home') %}
                                blue-grey
                              {% else %}
                                red
                              {% endif %}
                          entity: device_tracker.dalg_ups
                          tap_action:
                            action: fire-dom-event
                            browser_mod:
                              service: browser_mod.popup
                              data:
                                title: UPS
                                content:
                                  type: custom:vertical-stack-in-card
                                  card_mod:
                                    style: |
                                      ha-card {
                                        margin-top: 0em;
                                          }         
                                  mode: vertical
                                  cards:
                                    - type: custom:mini-graph-card
                                      card_mod:
                                        style: |
                                          ha-card {
                                            --ha-card-border-radius: 20px
                                          ha-card {
                                            font-family: var(--primary-font-family);
                                            margin-bottom: -10px;
                                          }
                                          .graph {
                                            padding-top: 0px;
                                            padding-bottom: 0px;
                                          }
                                          .info {
                                            padding-bottom: 0px;
                                          }
                                          .flex {
                                            padding-bottom: 6px;
                                          }
                                      entities:
                                        - sensor.ups_load
                                      name: Utilisation
                                      align_state: center
                                      align_icon: right
                                      font_size: 100
                                      font_size_header: 11
                                      hours_to_show: 24
                                      line_color: var(--accent-color)
                                      line_width: 2
                                      animate: true
                                      points_per_hour: 2
                                      show:
                                        fill: false
                                        graph: bar
                                        upper_bound: 100
                                        extrema: true
                                        icon: true
                                        name: true
                                    - type: divider
                                      style:
                                        height: 1px
                                        width: 100%
                                        margin-left: auto
                                        margin-right: auto
                                        background: '#62717b'
                                    - type: horizontal-stack
                                      cards:
                                        - type: horizontal-stack
                                          cards:
                                            - type: custom:mini-graph-card
                                              card_mod:
                                                style: |
                                                  ha-card {
                                                    --ha-card-border-radius: 0px
                                                  ha-card {
                                                    font-family: var(--primary-font-family);
                                                  }
                                                  .graph {
                                                    padding-top: 0px;
                                                    padding-bottom: 0px;
                                                  }
                                                  .info {
                                                    padding-bottom: 0px;
                                                  }
                                                  .flex {
                                                    padding-bottom: 10px;
                                                  }
                                              entities:
                                                - sensor.ups_input_voltage
                                              name: Volt
                                              align_state: center
                                              align_icon: right
                                              font_size: 100
                                              font_size_header: 11
                                              hours_to_show: 24
                                              line_color: var(--accent-color)
                                              line_width: 4
                                              animate: true
                                              points_per_hour: 2
                                              show:
                                                fill: false
                                                graph: line
                                                extrema: true
                                                icon: true
                                                name: true
                                        - type: custom:mini-graph-card
                                          entities:
                                            - sensor.ups_battery_charge
                                          name: Batterie
                                          align_state: center
                                          align_icon: right
                                          font_size: 100
                                          font_size_header: 11
                                          hours_to_show: 24
                                          line_color: var(--accent-color)
                                          line_width: 20
                                          animate: true
                                          points_per_hour: 1
                                          show:
                                            fill: false
                                            graph: bar
                                            extrema: true
                                            icon: true
                                            name: true
                                          card_mod:
                                            style: ''
                                          style: |
                                            ha-card {
                                              --ha-card-border-radius: 0px
                                            ha-card {
                                              font-family: var(--primary-font-family);
                                            }
                                            .graph {
                                              padding-top: 0px;
                                              padding-bottom: 0px;
                                            }
                                            .info {
                                              padding-bottom: 0px;
                                            }
                                            .flex {
                                              padding-bottom: 10px;
                                            }
                          badge_icon: none
                        - type: custom:mushroom-chips-card
                          chips:
                            - type: template
                              entity: sensor.ups_load
                              content: 'Load: {{ states(entity) }} %'
                              icon: mdi:weight-lifter
                              icon_color: |
                                {% if states('sensor.ups_load') | int > 80 %}
                                  red
                                {% elif states('sensor.ups_load') | int > 70 %}
                                  orange
                                {% elif states('sensor.ups_load') | int > 60 %}
                                  yellow
                                {% else %}
                                  green
                                {% endif %}
                              tap_action: none
                            - type: template
                              entity: sensor.ups_battery_charge
                              content: '{{ states(entity) }} %'
                              icon: |
                                {% if states(entity) | int < 30 %}
                                  mdi:battery-30
                                {% elif states(entity) | int < 50 %}
                                  mdi:battery-50
                                {% elif states(entity) | int < 70 %}
                                  mdi:battery-70
                                {% elif states(entity) | int > 70 %}
                                  mdi:battery
                                {% else %}
                                  mdi:battery-alert
                                {% endif %}
                              icon_color: >
                                {% if states('sensor.ups_battery_charge') | int
                                < 30 %}
                                  red
                                {% elif states('sensor.ups_battery_charge') |
                                int < 50 %}
                                  orange
                                {% elif states('sensor.ups_battery_charge') |
                                int < 70 %}
                                  yellow
                                {% elif states('sensor.ups_battery_charge') |
                                int > 70 %}
                                  green
                                {% else %}
                                  red
                                {% endif %}
                              tap_action: none
                          alignment: center
                          card_mod:
                            style:
                              style: |
                                ha-card {
                                  margin: 10px 0px 10px;
                                  --chip-background: rgba(var(--rgb-disabled), 0.15);
                                  --ha-card-box-shadow: none;
                                  --chip-border-radius: 12px;
                                  --chip-height: 40px;
                                  --chip-padding: 8px;
                                  --chip-spacing: 3px;
                                }
                        - type: custom:uptime-card
                          entity: device_tracker.dalg_ups
                          ok: home
                          ko: not_home
                          hours_to_show: 1
                          alignment:
                            tooltip_first: true
                          show:
                            footer: false
                            header: false
                            status: false
                          bar:
                            height: 40
                            round: 10
                            spacing: 10
                            amount: 6
                      card_mod:
                        style: |
                          ha-card {
                            {% if is_state('device_tracker.dalg_ups','not_home') %}
                                background: rgba(226,84,66,0.2);
                            {% else %}
                                background: rgba(101,170,91,0.2);
                            {% endif %}
                            margin-bottom: 80px !important;
                          }
      - type: custom:local-conditional-card
        id: divers
        default: hide
        card:
          type: custom:tabbed-card
          tabs:
            - card:
                type: vertical-stack
                cards:
                  - type: custom:teamtracker-card
                    entity: sensor.teamtracker_ol
                  - type: custom:teamtracker-card
                    entity: sensor.team_tracker_rma
                  - type: custom:teamtracker-card
                    entity: sensor.team_tracker_fra
              attributes:
                label: Foot
            - card:
                type: vertical-stack
                cards:
                  - type: custom:formulaone-card
                    card_type: countdown
                    title: null
                  - type: custom:formulaone-card
                    card_type: results
                    title: Results
                    standings:
                      show_flag: false
                      show_team: false
                      show_teamlogo: false
                  - type: custom:formulaone-card
                    card_type: driver_standings
                    title: Classement des Pilotes
                    standings:
                      show_flag: true
                      show_team: false
                      show_teamlogo: false
                  - type: custom:formulaone-card
                    card_type: constructor_standings
                    title: Classement Constructeur
                    standings:
                      show_teamlogo: true
              attributes:
                label: F1
            - card:
                chart_type: line
                period: day
                type: statistics-graph
                title: Bitcoin
                entities:
                  - entity: sensor.xbt_eur_bid
                  - entity: sensor.xbt_eur_ask
                stat_types:
                  - mean
                  - min
                  - max
                hide_legend: true
                card_mod:
                  style:
                    .: |
                      h1 {
                        padding-bottom: 0;
                      }
                    statistics-chart$ha-chart-base$: |
                      .chartLegend { 
                        display: none;
                      }
              attributes:
                label: Bitcoin
      - type: custom:local-conditional-card
        id: meteo
        default: hide
        card:
          type: custom:tabbed-card
          styles:
            '--mdc-tab-text-label-color-default': grey
            '--mdc-typography-button-font-size': 14px
            '--mdc-tab-height': 60px
          tabs:
            - card:
                type: custom:local-conditional-card
                default: show
                id: prevision
                card:
                  type: custom:meteofrance-weather-card
                  entity: weather.ozan
                  number_of_forecasts: '5'
                  name: Ozan
                  alert_forecast: true
                  alertEntity: sensor.01_weather_alert
                  current: true
                  one_hour_forecast: false
                  forecast: true
                  details: true
              attributes:
                label: Météo
            - card:
                type: iframe
                url: >-
                  https://embed.windy.com/embed2.html?lat=46.394&lon=4.917&detailLat=46.394&detailLon=4.917&width=650&height=450&zoom=5&level=surface&overlay=wind&product=ecmwf&menu=&message=&marker=&calendar=now&pressure=&type=map&location=coordinates&detail=&metricWind=km%2Fh&metricTemp=%C2%B0C&radarRange=-1"
                  frameborder="0"
                aspect_ratio: 100%
              attributes:
                label: Carte
            - card:
                type: custom:auto-entities
                card:
                  type: grid
                  columns: 1
                  square: false
                card_param: cards
                filter:
                  include:
                    - entity_id: sensor.pollens_01_*
                      options:
                        type: custom:mushroom-entity-card
                  exclude:
                    - entity_id: sensor.pollens_01_*
                      state: nul
                    - entity_id: sensor.pollens_01
                    - entity_id: sensor.pollens_01_risklevel
                sort:
                  method: state
                  reverse: false
                  numeric: true
              attributes:
                label: Pollens
      - type: custom:local-conditional-card
        id: menu
        default: hide
        card:
          type: custom:stack-in-card
          cards:
            - type: custom:swipe-card
              cards:
                - type: horizontal-stack
                  cards:
                    - type: custom:mushroom-template-card
                      primary: Search...
                      secondary: ''
                      icon: mdi:search-web
                      entity: input_select.plex_recently
                      tap_action:
                        action: fire-dom-event
                        browser_mod:
                          service: browser_mod.popup
                          data:
                            title: ChatGPT
                            content:
                              type: custom:stack-in-card
                              cards:
                                - type: entities
                                  entities:
                                    - entity: input_text.gpt_prompt
                                - type: markdown
                                  content: >-
                                    {{
                                    state_attr('sensor.hassio_mindsdb_response',
                                    'response_text') }}
                                  title: Réponse
                      card_mod:
                        style: |
                          ha-card {
                            {% if is_state('media_player.currently_playing', ['idle','off']) %}
                              background: var(--card-background-color) !important;
                              box-shadow: var(--ha-card-box-shadow) !important;
                              width: 100%;
                              --spacing: 5px;
                              margin-bottom: 2px;
                              margin-top: 2px;
                              border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                              margin-left: 0px;
                              margin-right: auto;
                            {% else %}
                              width: 50px;
                              --spacing: 5px;
                              background: var(--card-background-color) !important;
                              box-shadow: var(--ha-card-box-shadow) !important;
                              border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                              margin-top: 2px;
                              margin-bottom: 2px;
                              margin-left: 1%;
                              transition: all 0.5s;
                            {% endif %} 
                          }
                          ha-card:hover {
                            background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                            transition: all 0.1s;
                          }
                    - type: conditional
                      conditions:
                        - entity: media_player.currently_playing
                          state_not: 'off'
                        - entity: media_player.currently_playing
                          state_not: idle
                      card:
                        type: custom:stack-in-card
                        mode: horizontal
                        cards:
                          - type: custom:mushroom-media-player-card
                            entity: media_player.currently_playing
                            layout: horizontal
                            show_volume_level: true
                            use_media_info: true
                            tap_action:
                              action: fire-dom-event
                              browser_mod:
                                service: browser_mod.popup
                                data:
                                  title: En cours
                                  content:
                                    type: custom:stack-in-card
                                    cards:
                                      - type: custom:mushroom-media-player-card
                                        entity: media_player.currently_playing
                                        icon_type: none
                                        layout: vertical
                                        media_controls:
                                          - previous
                                          - play_pause_stop
                                          - next
                                        volume_controls:
                                          - volume_set
                                          - volume_buttons
                                        show_volume_level: false
                                        use_media_info: true
                                        collapsible_controls: false
                                        card_mod:
                                          style:
                                            mushroom-state-info$: >
                                              /* CSS for Mushroom Popup Media Player
                                              */

                                              .secondary:before {

                                                /* Add album name between song title and artist name */
                                                {% if state_attr(config.entity, 'media_album_name') != none %}
                                                  content: "{{ state_attr(config.entity, 'media_album_name')}}\A";
                                                {% endif %}

                                                /* Format title to fit on seperate line */
                                                white-space: pre;
                                                text-overflow: ellipsis;
                                              }
                                            .: |
                                              ha-card {

                                                /* Remove border from media player */
                                                --ha-card-border-width: 0;

                                                /* Apply album art color to media player icon & volume bar */
                                                --rgb-state-media-player: var(--album-art-color);

                                                /* Disable transitions */
                                                transition: all 0.5s;
                                              }
                                              .actions {

                                                /* Apply album art color to media player controls */
                                                --rgb-primary-text-color: var(--album-art-color);
                                                --primary-text-color: rgb(var(--album-art-color));

                                                /* Move volume button to seperate row */
                                                display: block !important;
                                              }
                                              ha-card:before {
                                                content: "";

                                                /* Show album art above media player when active and default image when idle */
                                                {% if is_state(config.entity, ['playing', 'paused']) %}
                                                  background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                                {% else %}
                                                  background: url('/local/idle_art.png') center no-repeat;
                                                {% endif %}

                                                /* Add padding around album art */
                                                margin: 0px 4px 16px;

                                                /* Add drop shadow to album art */
                                                filter: drop-shadow(4px 4px 6px rgba(var(--album-art-color), 0.3));

                                                /* Round borders of album art */
                                                border-radius: var(--control-border-radius);

                                                /* Adjust the album art aspect ratio based on media type */
                                                {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                                {% if media_type == 'tvshow' %}
                                                  aspect-ratio: 16 / 9;
                                                {% elif media_type == 'movie' %}
                                                  aspect-ratio: 2 / 3;
                                                {% else %}
                                                  aspect-ratio: 1 / 1;
                                                {% endif %}

                                                /* Stretch album art to fit box. Fix for if album art is not sized correctly */
                                                background-size: 100% 100%;
                                              }
                                              mushroom-button {

                                                /* Size volume button to match other controls and center */
                                                display: flex;
                                                width: calc((100% / 3) - (var(--spacing) / 3) * 2);
                                                margin: auto;
                                              }
                                              mushroom-media-player-media-control,
                                              mushroom-media-player-volume-control {

                                                /* Correct margins for volume button on second row */
                                                display: flex;
                                                margin-right: 0px !important;
                                                
                                                /* Check if PLAY|STOP are supported and adjust margin accordingly */
                                                {% if state_attr(config.entity, 'supported_features') | int | bitwise_and(20480) > 0 %}
                                                  margin-bottom: var(--spacing) !important;
                                                {% endif %}
                                              }
                                      - entity: media_player.currently_playing
                                        hide:
                                          icon: true
                                          name: true
                                          runtime: true
                                          source: true
                                          power: true
                                          state_label: true
                                          volume: true
                                          info: true
                                          progress: false
                                          controls: true
                                        more_info: false
                                        type: custom:mini-media-player
                                        toggle_power: false
                                        group: true
                                        card_mod:
                                          style:
                                            mmp-progress$: |
                                              paper-progress {

                                                /* Apply album art color to progress bar when paused */
                                                --paper-progress-container-color: rgba(var(--album-art-color), 0.2) !important;
                                                
                                                /* Apply album art color to progress bar when playing */
                                                --paper-progress-active-color: rgb(var(--album-art-color)) !important;
                                              }
                                            .: |
                                              ha-card {

                                                /* Move progress bar up into gap. Check if PLAY|STOP are supported */
                                                --base-offset: calc(4 * var(--mush-spacing, 12px)
                                                                    + 1.33 * var(--mush-spacing, 12px)
                                                                    + var(--mush-card-primary-line-height, 1.5) * var(--mush-card-primary-font-size, 14px)
                                                                    + var(--mush-card-secondary-line-height, 1.5) * var(--mush-card-secondary-font-size, 12px)
                                                                    + var(--mush-control-height, 42px));

                                                /* Check if Play (16385) or Stop (4096) are supported and add control button height if they are */
                                                {% if state_attr(config.entity, 'supported_features') | int | bitwise_and(20480) > 0 %}
                                                  --control-offset: calc(var(--mush-spacing, 12px) + var(--mush-control-height, 42px));
                                                {% else %}
                                                  --control-offset: 0px;
                                                {% endif %}

                                                /* Check if album name is present and add to height if it is */
                                                {% set album_name = state_attr(config.entity, 'media_album_name') %}
                                                {% if album_name == None or album_name == "" %}
                                                  --album-offset: 0px;
                                                {% else %}
                                                  --album-offset: calc(var(--mush-card-secondary-line-height, 1.5) * var(--mush-card-secondary-font-size, 12px));
                                                {% endif %}

                                                bottom: calc(var(--base-offset) + var(--control-offset) + var(--album-offset));

                                                /* Correct margins for progress bar */
                                                margin: 0px 28px -12px;

                                                /* Set height of card to match pregress bar height */
                                                height: var(--mmp-progress-height);

                                                /* Remove border outline */
                                                --ha-card-border-width: 0;

                                                /* Round corners of progress bar */
                                                --mmp-border-radius: var(--control-border-radius, 12px) !important;

                                                /* Set height of progress bar */
                                                --mmp-progress-height: 12px !important;

                                                /* Remove transitions to prevent progress bar floating in */
                                                transition: all 0.5s;
                                              }
                                    card_mod:
                                      style: |
                                        :host {

                                          /* Assign album art color to variable used in popup */
                                          --album-art-color:      
                                          {% if is_state('media_player.currently_playing', ['playing', 'paused']) %}
                                            {{ states('sensor.muted_color') }}
                                          {% else %}
                                            141, 117, 238
                                          {% endif %};

                                          /* Remove background because it is applied to popup */
                                          --ha-card-background: none;

                                          
                                        }
                                  card_mod:
                                    style:
                                      ha-dialog$: |
                                        .mdc-dialog__surface {

                                          /* Apply gradient background to popup using album art colors. Set to default colors when idle */
                                          {% if is_state('media_player.currently_playing', ['playing', 'paused']) %}
                                            background: linear-gradient(305deg, transparent 50%, rgba({{ states('sensor.dark_vibrant_color') }}, 0.4)), 
                                                        linear-gradient(55deg, transparent 50%, rgba({{ states('sensor.vibrant_color') }}, 0.2)),  
                                                        linear-gradient(180deg, transparent 40%, rgba({{ states('sensor.dark_muted_color') }}, 0.3));
                                          {% else %}
                                            background: linear-gradient(0deg, transparent 40%, rgba(192, 127, 190, 0.3)), 
                                                        linear-gradient(240deg, transparent 40%, rgba(143, 119, 237, 0.3)),  
                                                        linear-gradient(120deg, transparent 40%, rgba(122, 181, 239, 0.3));
                                          {% endif %}
                                        }
                                      ha-header-bar$: |
                                        .mdc-top-app-bar {

                                          /* Remove header background so that popup background is visible */
                                          --mdc-theme-primary: none;

                                          /* Reduced the gap between header and album art */
                                          margin-bottom: -16px;
                                        }
                                      .: |
                                        :host {

                                          /* Set width of popup */
                                          --popup-min-width: 450px;
                                        }
                            card_mod:
                              style: |
                                mushroom-shape-icon {
                                  display: flex;
                                  {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                  {% if media_type == 'tvshow' %}
                                    --card-mod-icon: mdi:television-classic;
                                    animation: flicker 1s linear infinite alternate;
                                  {% elif media_type == 'movie' %}
                                    --card-mod-icon: mdi:movie-roll;
                                    --icon-animation: spin 2s linear infinite reverse;
                                  {% elif media_type == 'music' %}
                                    --card-mod-icon: mdi:music;
                                    animation: beat 1.3s ease-out infinite both;
                                  {% elif media_type == 'playlist' %}
                                    --card-mod-icon: mdi:music;
                                    animation: beat 1.3s ease-out infinite both;
                                  {% else %}
                                    --card-mod-icon: mdi:play;
                                  {% endif %}
                                }
                                @keyframes flicker {
                                  0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--rgb-indigo), 1); }
                                  32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--rgb-indigo), 0.6); }
                                }
                                @keyframes beat {
                                  0%, 60% { --icon-symbol-size: 21px; }
                                  5%, 17%, 57% { --icon-symbol-size: 22px; }
                                  10%, 20%, 51% { --icon-symbol-size: 23px; }
                                  25%, 45% { --icon-symbol-size: 24px; }
                                  30%, 39% { --icon-symbol-size: 25px; }
                                  33% { --icon-symbol-size: 26px; }
                                }
                                ha-card {
                                  {% if not is_state(config.entity, 'off') %}
                                    background: rgba(var(--rgb-card-background-color), 0.6) url( '{{ state_attr(config.entity, "entity_picture") }}' ) center no-repeat;
                                    background-size: cover;
                                    background-blend-mode: overlay;
                                  {% endif %} 
                                  border-radius: 35px 35px 35px 35px !important;
                                  height: 55px !important;
                                  margin-left: -8px;
                                }
                        card_mod:
                          style: |
                            ha-card {
                              {% if is_state('media_player.currently_playing', ['playing','paused']) %}
                                background-image: url( '{{ state_attr( "media_player.currently_playing", "entity_picture" ) }}' );
                                background-position: center;
                                background-repeat: no-repeat;
                                background-size: cover;
                                background-color: rgba(var(--rgb-card-background-color), 0.8);
                                background-blend-mode: overlay;
                                position: relative;
                                margin-left: -72%;
                                width: 170%;
                                border-radius: 35px 35px 35px 35px !important;
                                transition: all 0.5s;
                              {% else %}
                                width: 50px;
                                --spacing: 5px;
                                background: var(--card-background-color) !important;
                                box-shadow: var(--ha-card-box-shadow) !important;
                                border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                                margin-top: 2px;
                                margin-left: auto;
                                margin-right: -64%;
                                transition: all 0.5s;
                              {% endif %} 
                            }
                - type: horizontal-stack
                  cards:
                    - type: custom:mushroom-template-card
                      secondary: ''
                      icon: mdi:lightbulb-group
                      icon_color: |-
                        {% if is_state('group.lumiere_2', 'on') %}
                          yellow
                        {% else %}
                          grey
                        {% endif %}
                      entity: group.lumiere_2
                      badge_icon: none
                      badge_color: disable
                      layout: vertical
                      tap_action:
                        action: toggle
                      card_mod:
                        style: |
                          ha-card {
                            width: 50px;
                            --spacing: 5px;
                            background: var(--card-background-color) !important;
                            box-shadow: var(--ha-card-box-shadow) !important;
                            border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                            margin-top: 2px;
                            margin-bottom: 2px;
                            margin-left: auto;
                            margin-right: auto;
                            transition: all 0.5s;
                          }
                          ha-card:hover {
                            background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                            z-index: 1;
                            transform: scale(1.0);
                            transition: all 0.1s;
                            box-shadow: 0 0 5px !important;
                          }
                          mushroom-badge-icon:after {
                            {% if is_state('group.lumiere_2', 'on') %}
                              content: "{{ expand(states.group.lumiere_2) | selectattr( 'state', 'eq', 'on') | list | count }}";
                              position: absolute;
                              display: flex;
                              justify-content: center;
                              align-items: center;
                              background: rgb(var(--rgb-amber));
                              color: var(--card-background-color);
                              font-weight: bolder;
                              border-radius: 50%;
                              top: 0;
                              width: 100%;
                              height: 100%;
                              font-size: 0.7em;
                            {% else %}
                            {% endif %}
                          }
                    - type: custom:mushroom-template-card
                      secondary: ''
                      icon: mdi:lightbulb-group
                      layout: vertical
                      icon_color: |-
                        {% if is_state('group.lumiere_exterieur', 'on') %}
                          yellow
                        {% else %}
                          grey
                        {% endif %}
                      entity: group.lumiere_exterieur
                      badge_icon: none
                      badge_color: disable
                      tap_action:
                        action: toggle
                      card_mod:
                        style:
                          style: |
                            ha-card {
                              width: 50px;
                              --spacing: 5px;
                              background: var(--card-background-color) !important;
                              box-shadow: var(--ha-card-box-shadow) !important;
                              border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                              margin-top: 2px;
                              margin-left: auto;
                              margin-right: auto;
                              transition: all 0.5s;
                            }
                            ha-card:hover {
                              background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                              z-index: 1;
                              transform: scale(1.0);
                              box-shadow: 0 0 5px !important;
                              transition: all 0.1s;
                            }
                            mushroom-badge-icon:after {
                              {% if is_state('group.lumiere_exterieur', 'on') %}
                                content: "{{ expand(states.group.lumiere_exterieur) | selectattr( 'state', 'eq', 'on') | list | count }}";
                                position: absolute;
                                display: flex;
                                justify-content: center;
                                align-items: center;
                                background: rgb(var(--rgb-amber));
                                color: var(--card-background-color);
                                font-weight: bolder;
                                border-radius: 50%;
                                top: 0;
                                width: 100%;
                                height: 100%;
                                font-size: 0.7em;
                              {% else %}
                              {% endif %}
                            }
                    - type: custom:mushroom-template-card
                      primary: ''
                      secondary: ''
                      icon: mdi:lightbulb-group
                      icon_color: |2-
                          {% if is_state('group.lumiere_salon', 'on') %}
                            yellow
                          {% else %}
                            grey
                          {% endif %}
                      layout: vertical
                      badge_icon: none
                      badge_color: disable
                      entity: group.lumiere_salon
                      tap_action:
                        action: toggle
                      card_mod:
                        style:
                          style: |
                            ha-card {
                              width: 50px;
                              --spacing: 5px;
                              background: var(--card-background-color) !important;
                              box-shadow: var(--ha-card-box-shadow) !important;
                              border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                              margin-top: 2px;
                              margin-left: auto;
                              margin-right: auto;
                              transition: all 0.5s;
                            }
                            ha-card:hover {
                              background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                              z-index: 1;
                              transform: scale(1.0);
                              transition: all 0.1s;
                              box-shadow: 0 0 5px !important;
                            }
                            mushroom-badge-icon:after {
                              {% if is_state('group.lumiere_salon', 'on') %}
                                content: "{{ expand(states.group.lumiere_salon) | selectattr( 'state', 'eq', 'on') | list | count }}";
                                position: absolute;
                                display: flex;
                                justify-content: center;
                                align-items: center;
                                background: rgb(var(--rgb-amber));
                                color: var(--card-background-color);
                                font-weight: bolder;
                                border-radius: 50%;
                                top: 0;
                                width: 100%;
                                height: 100%;
                                font-size: 0.7em;
                              {% else %}
                              {% endif %}
                            }
                    - type: custom:mushroom-template-card
                      primary: ''
                      secondary: ''
                      icon: mdi:lightbulb-group
                      layout: vertical
                      icon_color: |-
                        {% if is_state('group.lumiere_soiree', 'on') %}
                          yellow
                        {% else %}
                          grey
                        {% endif %}
                      entity: group.lumiere_soiree
                      badge_icon: none
                      badge_color: disable
                      tap_action:
                        action: toggle
                      card_mod:
                        style:
                          style: |
                            ha-card {
                              width: 50px;
                              --spacing: 5px;
                              background: var(--card-background-color) !important;
                              box-shadow: var(--ha-card-box-shadow) !important;
                              border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                              margin-top: 2px;
                              margin-left: auto;
                              margin-right: auto;
                              transition: all 0.5s;
                            }
                            ha-card:hover {
                              background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                              z-index: 1;
                              transform: scale(1.0);
                              transition: all 0.1s;
                              box-shadow: 0 0 5px !important;
                            }
                            mushroom-badge-icon:after {
                              {% if is_state('group.lumiere_soiree', 'on') %}
                                content: "{{ expand(states.group.lumiere_soiree) | selectattr( 'state', 'eq', 'on') | list | count }}";
                                position: absolute;
                                display: flex;
                                justify-content: center;
                                align-items: center;
                                background: rgb(var(--rgb-amber));
                                color: var(--card-background-color);
                                font-weight: bolder;
                                border-radius: 50%;
                                top: 0;
                                width: 100%;
                                height: 100%;
                                font-size: 0.7em;
                              {% else %}
                              {% endif %}
                            }
                    - type: custom:mushroom-template-card
                      primary: ''
                      secondary: ''
                      icon: mdi:lightbulb-group
                      layout: vertical
                      icon_color: |-
                        {% if is_state('group.lumiere_tv', 'on') %}
                          yellow
                        {% else %}
                          grey
                        {% endif %}
                      entity: group.lumiere_tv
                      badge_icon: none
                      badge_color: disable
                      tap_action:
                        action: toggle
                      card_mod:
                        style:
                          style: |
                            ha-card {
                              width: 50px;
                              --spacing: 5px;
                              background: var(--card-background-color) !important;
                              box-shadow: var(--ha-card-box-shadow) !important;
                              border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                              margin-top: 2px;
                              margin-left: auto;
                              margin-right: auto;
                              transition: all 0.5s;
                            }
                            ha-card:hover {
                              background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                              z-index: 1;
                              transform: scale(1.0);
                              transition: all 0.1s;
                              box-shadow: 0 0 5px !important;
                            }
                            mushroom-badge-icon:after {
                              {% if is_state('group.lumiere_tv', 'on') %}
                                content: "{{ expand(states.group.lumiere_tv) | selectattr( 'state', 'eq', 'on') | list | count }}";
                                position: absolute;
                                display: flex;
                                justify-content: center;
                                align-items: center;
                                background: rgb(var(--rgb-amber));
                                color: var(--card-background-color);
                                font-weight: bolder;
                                border-radius: 50%;
                                top: 0;
                                width: 100%;
                                height: 100%;
                                font-size: 0.7em;
                              {% else %}
                              {% endif %}
                            }
                - type: horizontal-stack
                  cards:
                    - type: custom:mushroom-template-card
                      secondary: ''
                      icon: mdi:dots-hexagon
                      layout: vertical
                      icon_color: blue
                      tap_action:
                        action: fire-dom-event
                        local_conditional_card:
                          action: set
                          ids:
                            - home: hide
                            - light: hide
                            - portail: hide
                            - camera: hide
                            - media: hide
                            - divers: toggle
                            - monitoring: hide
                            - device: hide
                            - serveur: hide
                            - net: hide
                            - meteo: hide
                            - plan: hide
                            - search: hide
                      card_mod:
                        style: |
                          ha-card {
                            width: 50px;
                            --spacing: 5px;
                            background: var(--card-background-color) !important;
                            box-shadow: var(--ha-card-box-shadow) !important;
                            border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                            margin-top: 2px;
                            margin-left: auto;
                            margin-right: auto;
                            transition: all 0.5s;
                          }
                          ha-card:hover {
                            background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                            z-index: 1;
                            transform: scale(1.0);
                            transition: all 0.1s;
                            box-shadow: 0 0 5px !important;
                          }
                    - type: custom:mushroom-template-card
                      secondary: ''
                      icon: mdi:chart-bar
                      layout: vertical
                      icon_color: yellow
                      tap_action:
                        action: fire-dom-event
                        local_conditional_card:
                          action: set
                          ids:
                            - home: hide
                            - light: hide
                            - portail: hide
                            - camera: hide
                            - media: hide
                            - divers: hide
                            - monitoring: toggle
                            - device: hide
                            - serveur: hide
                            - net: hide
                            - meteo: hide
                            - plan: hide
                            - search: hide
                      card_mod:
                        style: |
                          ha-card {
                            width: 50px;
                            --spacing: 5px;
                            background: var(--card-background-color) !important;
                            box-shadow: var(--ha-card-box-shadow) !important;
                            border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                            margin-top: 2px;
                            margin-left: auto;
                            margin-right: auto;
                            transition: all 0.5s;
                          }
                          ha-card:hover {
                            background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                            z-index: 1;
                            transform: scale(1.0);
                            transition: all 0.1s;
                            box-shadow: 0 0 5px !important;
                          }
                    - type: custom:mushroom-template-card
                      secondary: ''
                      icon: mdi:devices
                      layout: vertical
                      icon_color: cyan
                      tap_action:
                        action: fire-dom-event
                        local_conditional_card:
                          action: set
                          ids:
                            - home: hide
                            - light: hide
                            - portail: hide
                            - camera: hide
                            - media: hide
                            - divers: hide
                            - monitoring: hide
                            - device: toggle
                            - serveur: hide
                            - net: hide
                            - meteo: hide
                            - plan: hide
                            - search: hide
                      card_mod:
                        style: |
                          ha-card {
                            width: 50px;
                            --spacing: 5px;
                            background: var(--card-background-color) !important;
                            box-shadow: var(--ha-card-box-shadow) !important;
                            border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                            margin-top: 2px;
                            margin-left: auto;
                            margin-right: auto;
                            transition: all 0.5s;
                          }
                          ha-card:hover {
                            background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                            z-index: 1;
                            transform: scale(1.0);
                            transition: all 0.1s;
                            box-shadow: 0 0 5px !important;
                          }
                    - type: custom:mushroom-template-card
                      primary: ''
                      secondary: ''
                      icon: mdi:server-network
                      layout: vertical
                      icon_color: |2-
                          {% if is_state('device_tracker.dalg_udm', 'home') %}
                            green
                          {% else %}
                            red
                          {% endif %}
                      tap_action:
                        action: fire-dom-event
                        local_conditional_card:
                          action: set
                          ids:
                            - home: hide
                            - light: hide
                            - portail: hide
                            - camera: hide
                            - media: hide
                            - divers: hide
                            - monitoring: hide
                            - device: hide
                            - serveur: toggle
                            - net: hide
                            - meteo: hide
                            - plan: hide
                            - search: hide
                      card_mod:
                        style:
                          mushroom-shape-icon$: |
                            .shape {
                              {% set net = states('device_tracker.dalg_udm') %}
                              {% if net == 'not_home' %}
                                --shape-animation: ping 2s infinite;
                              {% endif %}
                              {{ 'animation: none;' if not is_state('device_tracker.dalg_udm', 'home') }}
                            }
                            @keyframes ping {
                              0% { box-shadow: 0 0 1px 1px rgba(var(--rgb-red), 0.7); }
                              100% { box-shadow: 0 0 5px 15px transparent; }
                            }
                          style: |
                            ha-card {
                              width: 50px;
                              --spacing: 5px;
                              background: var(--card-background-color) !important;
                              box-shadow: var(--ha-card-box-shadow) !important;
                              border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                              margin-top: 2px;
                              margin-left: auto;
                              margin-right: auto;
                              transition: all 0.5s;
                            }
                            ha-card:hover {
                              background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                              z-index: 1;
                              transform: scale(1.0);
                              transition: all 0.1s;
                              box-shadow: 0 0 5px !important;
                            }
                    - type: custom:mushroom-template-card
                      secondary: ''
                      icon: mdi:update
                      layout: vertical
                      icon_color: |-
                        {% if is_state('group.grp_update_all', 'on') %}
                          red
                        {% elif not is_state('sensor.hacs', '0') %}
                          red
                        {% else %}
                          green
                        {% endif %}
                      badge_icon: none
                      badge_color: |-
                        {% if is_state('group.grp_update_all', 'on') %}
                          red
                        {% elif not is_state('sensor.hacs', '0') %}
                          red
                        {% else %}
                          disable
                        {% endif %}
                      tap_action:
                        action: fire-dom-event
                        haptic: heavy
                        browser_mod:
                          service: browser_mod.popup
                          data:
                            style: '--popup-background-color: transparent;'
                            size: normal
                            content:
                              type: custom:stack-in-card
                              cards:
                                - type: custom:auto-entities
                                  card:
                                    square: false
                                    type: grid
                                    columns: 1
                                  card_param: cards
                                  filter:
                                    include:
                                      - entity_id: update.home*
                                        options:
                                          type: custom:mushroom-entity-card
                                    exclude:
                                      - entity_id: update.*
                                        state: 'off'
                                  sort:
                                    method: friendly_name
                                    reverse: false
                                    numeric: false
                                    ignore_case: true
                                - type: custom:auto-entities
                                  card:
                                    square: false
                                    type: grid
                                    columns: 1
                                  card_param: cards
                                  filter:
                                    include:
                                      - entity_id: update.*
                                        options:
                                          type: custom:mushroom-entity-card
                                    exclude:
                                      - entity_id: update.*
                                        state: 'off'
                                      - entity_id: update.dalg*
                                      - entity_id: update.home*
                                  sort:
                                    method: friendly_name
                                    reverse: false
                                    numeric: false
                                    ignore_case: true
                                - type: custom:auto-entities
                                  card:
                                    square: false
                                    type: grid
                                    columns: 1
                                  card_param: cards
                                  filter:
                                    include:
                                      - entity_id: update.*
                                        options:
                                          type: custom:mushroom-entity-card
                                    exclude:
                                      - entity_id: update.*
                                        state: 'off'
                                      - entity_id: update.dalg_ap*
                                      - entity_id: update.dalg_lte
                                      - entity_id: update.dalg_switch*
                                      - entity_id: update.dalg_udm
                                      - entity_id: update.home*
                                      - entity_id: update.file_editor_update
                                      - entity_id: update.influxdb_update
                                      - entity_id: update.let_s_encrypt_update
                                      - entity_id: update.mosquitto_broker_update
                                      - entity_id: update.myelectricaldata_update
                                      - entity_id: update.node_red_update
                                      - entity_id: update.samba_share_update
                                      - entity_id: update.sqlite_web_update
                                      - entity_id: update.terminal_ssh_update
                                      - entity_id: update.z_wave_js_update
                                      - entity_id: update.zigbee2mqtt_edge_update
                                  sort:
                                    method: friendly_name
                                    reverse: false
                                    numeric: false
                                    ignore_case: true
                                - type: custom:auto-entities
                                  card:
                                    square: false
                                    type: grid
                                    columns: 1
                                  card_param: cards
                                  filter:
                                    include:
                                      - entity_id: update.*
                                        options:
                                          type: custom:mushroom-entity-card
                                    exclude:
                                      - entity_id: update.*
                                        state: 'off'
                                      - entity_id: update.dalg_nas_dsm_update
                                      - entity_id: update.dalg_ups
                                      - entity_id: update.home*
                                      - entity_id: update.file_editor_update
                                      - entity_id: update.influxdb_update
                                      - entity_id: update.let_s_encrypt_update
                                      - entity_id: update.mosquitto_broker_update
                                      - entity_id: update.myelectricaldata_update
                                      - entity_id: update.node_red_update
                                      - entity_id: update.samba_share_update
                                      - entity_id: update.sqlite_web_update
                                      - entity_id: update.terminal_ssh_update
                                      - entity_id: update.z_wave_js_update
                                      - entity_id: update.zigbee2mqtt_edge_update
                                  sort:
                                    method: friendly_name
                                    reverse: false
                                    numeric: false
                                    ignore_case: true
                                - type: custom:auto-entities
                                  card:
                                    square: false
                                    type: grid
                                    columns: 1
                                  card_param: cards
                                  filter:
                                    include:
                                      - entity_id: sensor.hacs
                                        options:
                                          type: custom:mushroom-entity-card
                                    exclude:
                                      - entity_id: sensor.hacs
                                        state: '0'
                                  sort:
                                    method: friendly_name
                                    reverse: false
                                    numeric: false
                                    ignore_case: true
                      card_mod:
                        mushroom-shape-icon$: |
                          ha-icon {
                            {% set state = states(config.entity) %}
                            {% if state == 'on' %}
                              --icon-animation: fade-out 1.5s infinite;
                            {% endif %}
                          }
                          @keyframes fade-out {
                            0% { opacity:1; }
                            50% { opacity:0; }
                            100% { opacity:1; }
                          }
                        style: |
                          ha-card {
                            width: 50px;
                            --spacing: 5px;
                            background: var(--card-background-color) !important;
                            box-shadow: var(--ha-card-box-shadow) !important;
                            border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                            margin-top: 2px;
                            margin-left: auto;
                            margin-right: auto;
                            transition: all 0.5s;
                          }
                          /* Add subtle color on hover */
                          ha-card:hover {
                            transform: scale(1.0);
                            transition: all 0.1s;
                            box-shadow: 0 0 5px !important;
                            background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                          }
                          mushroom-badge-icon:after {
                            {% if is_state('group.grp_update_all', 'on') %}
                              content: "{{ expand(states.group.grp_update_all) | selectattr( 'state', 'eq', 'on') | list | count + states('sensor.hacs') |float |int }}";
                              position: absolute;
                              display: flex;
                              justify-content: center;
                              align-items: center;
                              background: rgb(var(--rgb-red));
                              color: var(--card-background-color);
                              font-weight: bolder;
                              border-radius: 50%;
                              top: 0;
                              width: 100%;
                              height: 100%;
                              font-size: 0.7em;
                            {% elif not is_state('sensor.hacs', '0') %}
                              content: "{{ expand(states.group.grp_update_all) | selectattr( 'state', 'eq', 'on') | list | count + states('sensor.hacs') |float |int }}";
                              position: absolute;
                              display: flex;
                              justify-content: center;
                              align-items: center;
                              background: rgb(var(--rgb-red));
                              color: var(--card-background-color);
                              font-weight: bolder;
                              border-radius: 50%;
                              top: 0;
                              width: 100%;
                              height: 100%;
                              font-size: 0.7em;
                            {% endif %}
                          }
          card_mod:
            style: |
              ha-card:before {
                content: "";
                position: absolute;
                top: 0px;
                left: 0px;
                height: 100%;
                width: calc(100% - 2 * var(--ha-card-border-width, 1px));
                z-index: -1;
                backdrop-filter: blur(12px);
                -webkit-backdrop-filter: blur(12px);
                border-radius: none;
                box-shadow: var(--ha-card-box-shadow);
                border: var(--ha-card-border-width, 1px) solid var(--ha-card-border-color, var(--divider-color, #e0e0e0));
                background: rgba(var(--rgb-card-background-color), 0.20);
               }
              ha-card {
                max-height: calc(100vh - var(--header-height)) !important;
                overflow-y: auto !important;
                max-width: var(--masonry-column-width, 492px) !important;
                transform: translate3d(0,0,0);
                -webkit-transform: translate3d(0,0,0);
                border-radius: 0px 0px 0px 0px;
                background: none;
                padding: var(--mush-chip-spacing, 8px);
                transition: all 0.5s;
                {% if is_state('binary_sensor.ping_dalg_pc', 'on') %}
                {% elif is_state('binary_sensor.ping_dalg_dell', 'on') %}
                {% elif is_state('input_boolean.notifications', 'on') %}
                {% elif not is_state('sensor.devices_with_low_battery', '0') %}
                {% elif is_state('input_boolean.bal', 'on') %}
                {% elif is_state('calendar.anniversaire', 'on') %}
                {% elif is_state('group.grp_update_all', 'on') %}
                  margin-bottom: 0px !important;
                {% else %}
                  margin-bottom: 0px !important;
                {% endif %}
              }
              :host {
                position: fixed !important;
                z-index: 0 !important;
                bottom: 10px !important;
                width: 100% !important;
              }
