type: custom:stack-in-card
cards:
  - type: custom:swipe-card
    cards:
      - type: horizontal-stack
        cards:
          - type: custom:mushroom-template-card
            secondary: ''
            icon: mdi:home
            layout: vertical
            icon_color: green
            tap_action:
              action: fire-dom-event
              local_conditional_card:
                action: set
                ids:
                  - home: toggle
                  - light: hide
                  - portail: hide
                  - camera: hide
                  - media: hide
                  - divers: hide
                  - monitoring: hide
                  - device: hide
                  - serveur: hide
                  - net: hide
                  - meteo: hide
                  - plan: hide
                  - search: hide
            card_mod:
              style: |
                ha-card {
                  width: 50px;
                  --spacing: 5px;
                  background: var(--card-background-color) !important;
                  box-shadow: var(--ha-card-box-shadow) !important;
                  border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                  margin-top: 2px;
                  margin-bottom: 2px;
                  margin-left: auto;
                  margin-right: auto;
                  transition: all 0.5s;
                }
                ha-card:hover {
                  background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                  z-index: 1;
                  transform: scale(1.0);
                  transition: all 0.1s;
                  box-shadow: 0 0 5px !important;
                }
          - type: custom:mushroom-template-card
            secondary: ''
            icon: mdi:lightbulb
            layout: vertical
            icon_color: |-
              {% if is_state('group.lumiere_2', 'on') %}
                yellow
              {% else %}
                grey
              {% endif %}
            badge_icon: none
            badge_color: disable
            entity: group.lumiere_2
            tap_action:
              action: fire-dom-event
              local_conditional_card:
                action: set
                ids:
                  - home: hide
                  - light: toggle
                  - portail: hide
                  - camera: hide
                  - media: hide
                  - divers: hide
                  - monitoring: hide
                  - device: hide
                  - serveur: hide
                  - net: hide
                  - meteo: hide
                  - plan: hide
                  - search: hide
            card_mod:
              style:
                mushroom-shape-icon$: |
                  ha-icon {
                    {% set media_type = states(config.entity) %}
                    {% if media_type == 'off' %}
                      --card-mod-icon: mdi:lightbulb;
                    {% else %}
                      --card-mod-icon: mdi:lightbulb;
                      --icon-animation: boing 4s infinite;
                      transform-origin: 50% 90%;
                    {% endif %}
                    {{ 'animation: none;' if not is_state('group.lumiere_2', 'on') }}
                  }
                  @keyframes boing {
                    0% { transform: scale3d(1, 1, 1); }
                    7% { transform: scale3d(1.25, 0.75, 1); }
                    10% { transform: scale3d(0.75, 1.25, 1); }
                    12% { transform: scale3d(1.15, 0.85, 1); }
                    16% { transform: scale3d(0.95, 1.05, 1); }
                    19% { transform: scale3d(1.05, 0.95, 1); }
                    25% { transform: scale3d(1, 1, 1); }
                  }
                style: |
                  ha-card {
                    width: 50px;
                    --spacing: 5px;
                    background: var(--card-background-color) !important;
                    box-shadow: var(--ha-card-box-shadow) !important;
                    border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                    margin-top: 2px;
                    margin-left: auto;
                    margin-right: auto;
                    transition: all 0.5s;
                  }
                  ha-card:hover {
                    background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                    z-index: 1;
                    transform: scale(1.0);
                    box-shadow: 0 0 5px !important;
                    transition: all 0.1s;
                  }
                  mushroom-badge-icon:after {
                    {% if is_state('group.lumiere_2', 'on') %}
                      content: "{{ expand(states.group.lumiere_2) | selectattr( 'state', 'eq', 'on') | list | count }}";
                      position: absolute;
                      display: flex;
                      justify-content: center;
                      align-items: center;
                      background: rgb(var(--rgb-amber));
                      color: var(--card-background-color);
                      font-weight: bolder;
                      border-radius: 50%;
                      top: 0;
                      width: 100%;
                      height: 100%;
                      font-size: 0.7em;
                    {% else %}
                    {% endif %}
                  }
          - type: custom:mushroom-template-card
            primary: ''
            secondary: ''
            icon: mdi:gate
            icon_color: |2-
                {% if is_state('binary_sensor.portail', 'on') %}
                  red
                {% else %}
                  green
                {% endif %}
            layout: vertical
            entity: binary_sensor.portail
            tap_action:
              action: fire-dom-event
              local_conditional_card:
                action: set
                ids:
                  - home: hide
                  - light: hide
                  - portail: toggle
                  - camera: hide
                  - media: hide
                  - divers: hide
                  - monitoring: hide
                  - device: hide
                  - serveur: hide
                  - net: hide
                  - meteo: hide
                  - meteo_menu: hide
                  - plan: hide
                  - search: hide
            card_mod:
              style:
                mushroom-shape-icon$: |
                  .shape {
                    {% set gate = states(config.entity) %}
                    {% if gate == 'on' %}
                      --shape-animation: ping 1s infinite;
                    {% endif %}
                    {{ 'animation: none;' if not is_state('binary_sensor.portail', 'off') }}
                  }
                  @keyframes ping {
                    0% { box-shadow: 0 0 1px 1px rgba(var(--rgb-red), 0.9); }
                    100% { box-shadow: 0 0 5px 10px transparent; }
                  }
                style: |
                  ha-card {
                    width: 50px;
                    --spacing: 5px;
                    background: var(--card-background-color) !important;
                    box-shadow: var(--ha-card-box-shadow) !important;
                    border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                    margin-top: 2px;
                    margin-left: auto;
                    margin-right: auto;
                    transition: all 0.5s;
                  }
                  ha-card:hover {
                    background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                    z-index: 1;
                    transform: scale(1.0);
                    transition: all 0.1s;
                    box-shadow: 0 0 5px !important;
                  }
          - type: custom:mushroom-template-card
            primary: ''
            secondary: ''
            icon: none
            entity: group.grp_motion
            layout: vertical
            icon_color: |-
              {% if is_state('group.grp_motion', 'on') %}
                red
              {% else %}
                blue
              {% endif %}
            tap_action:
              action: fire-dom-event
              local_conditional_card:
                action: set
                ids:
                  - home: hide
                  - light: hide
                  - portail: hide
                  - camera: toggle
                  - media: hide
                  - divers: hide
                  - monitoring: hide
                  - device: hide
                  - serveur: hide
                  - net: hide
                  - meteo: hide
                  - plan: hide
                  - search: hide
            card_mod:
              style:
                mushroom-shape-icon$: |
                  ha-icon {
                    {% set detection = states('group.grp_motion') %}
                    {% if detection == 'on' %}
                      --icon-animation: clip 2s linear infinite;
                      --shape-animation: motion 2s linear infinite;
                      --card-mod-icon: mdi:motion-sensor;
                      transform-origin: 90% 80%
                    {% else %}
                      --card-mod-icon: mdi:cctv-off;
                    {% endif %}
                    {{ 'animation: none;' if not is_state('group.grp_motion', 'on') }}
                  }
                  .shape {
                    {% set detection = states('group.grp_motion') %}
                    {% if detection == 'on' %}
                      --shape-animation: motion 2s linear infinite;
                    {% endif %}
                    {{ 'animation: none;' if not is_state('group.grp_motion', 'on') }}
                  }
                  @keyframes clip {
                    50% { clip-path: polygon(0 0, 55% 0, 100% 100%, 0 100%); }
                  }
                  @keyframes motion {
                    0%, 100% { --shape-color: rgba(var(--rgb-red), 0.4); }
                    50% { --shape-color: rgba(var(--rgb-red), 0.25); }
                  }
                style: |
                  ha-card {
                    width: 50px;
                    --spacing: 5px;
                    background: var(--card-background-color) !important;
                    box-shadow: var(--ha-card-box-shadow) !important;
                    border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                    margin-top: 2px;
                    margin-left: auto;
                    margin-right: auto;
                    transition: all 0.5s;
                  }
                  ha-card:hover {
                    background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                    z-index: 1;
                    transform: scale(1.0);
                    transition: all 0.1s;
                    box-shadow: 0 0 5px !important;
                  }
          - type: custom:mushroom-template-card
            secondary: ''
            entity: media_player.currently_playing
            layout: vertical
            icon: none
            icon_color: |2-
                {% if is_state('media_player.currently_playing', 'playing') %}
                  cyan
                {% elif is_state('media_player.currently_playing', 'paused') %}
                  orange
                {% else %}
                  green
                {% endif %}
            tap_action:
              action: fire-dom-event
              local_conditional_card:
                action: set
                ids:
                  - home: hide
                  - light: hide
                  - portail: hide
                  - camera: hide
                  - media: toggle
                  - divers: hide
                  - monitoring: hide
                  - device: hide
                  - serveur: hide
                  - net: hide
                  - meteo: hide
                  - plan: hide
                  - search: hide
            card_mod:
              style: |
                ha-card {
                  width: 50px;
                  --spacing: 5px;
                  background: var(--card-background-color) !important;
                  box-shadow: var(--ha-card-box-shadow) !important;
                  border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                  margin-top: 2px;
                  margin-left: auto;
                  margin-right: auto;
                  transition: all 0.5s;
                }
                ha-card:hover {
                  background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                  z-index: 1;
                  transform: scale(1.0);
                  transition: all 0.1s;
                  box-shadow: 0 0 5px !important;
                }
                mushroom-shape-icon {
                  display: flex;
                  {% set media_type = state_attr(config.entity, 'media_content_type') %}
                  {% if media_type == 'tvshow' %}
                    --card-mod-icon: mdi:television-classic;
                    animation: flicker 1s linear infinite alternate;
                  {% elif media_type == 'movie' %}
                    --card-mod-icon: mdi:movie-roll;
                    --icon-animation: spin 1.5s linear infinite;
                  {% elif media_type == 'music' %}
                    --card-mod-icon: mdi:music;
                    animation: beat 1.3s ease-out infinite both;
                  {% elif media_type == 'playlist' %}
                    --card-mod-icon: mdi:music;
                    animation: beat 1.3s ease-out infinite both;
                  {% else %}
                    --card-mod-icon: mdi:multimedia;
                  {% endif %}
                  {{ 'animation: none;' if not is_state(config.entity, 'playing') }}
                }
                @keyframes flicker {
                  0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--rgb-cyan), 1); }
                  32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--rgb-cyan), 0.3); }
                }
                @keyframes beat {
                  0%, 60% { --icon-symbol-size: 21px; }
                  5%, 17%, 57% { --icon-symbol-size: 22px; }
                  10%, 20%, 51% { --icon-symbol-size: 23px; }
                  25%, 45% { --icon-symbol-size: 24px; }
                  30%, 39% { --icon-symbol-size: 25px; }
                  33% { --icon-symbol-size: 26px; }
                }
      - type: horizontal-stack
        cards:
          - type: custom:mushroom-template-card
            secondary: ''
            icon: mdi:dots-hexagon
            layout: vertical
            icon_color: blue
            tap_action:
              action: fire-dom-event
              local_conditional_card:
                action: set
                ids:
                  - home: hide
                  - light: hide
                  - portail: hide
                  - camera: hide
                  - media: hide
                  - divers: toggle
                  - monitoring: hide
                  - device: hide
                  - serveur: hide
                  - net: hide
                  - meteo: hide
                  - plan: hide
                  - search: hide
            card_mod:
              style: |
                ha-card {
                  width: 50px;
                  --spacing: 5px;
                  background: var(--card-background-color) !important;
                  box-shadow: var(--ha-card-box-shadow) !important;
                  border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                  margin-top: 2px;
                  margin-left: auto;
                  margin-right: auto;
                  transition: all 0.5s;
                }
                ha-card:hover {
                  background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                  z-index: 1;
                  transform: scale(1.0);
                  transition: all 0.1s;
                  box-shadow: 0 0 5px !important;
                }
          - type: custom:mushroom-template-card
            secondary: ''
            icon: mdi:chart-bar
            layout: vertical
            icon_color: yellow
            tap_action:
              action: fire-dom-event
              local_conditional_card:
                action: set
                ids:
                  - home: hide
                  - light: hide
                  - portail: hide
                  - camera: hide
                  - media: hide
                  - divers: hide
                  - monitoring: toggle
                  - device: hide
                  - serveur: hide
                  - net: hide
                  - meteo: hide
                  - plan: hide
                  - search: hide
            card_mod:
              style: |
                ha-card {
                  width: 50px;
                  --spacing: 5px;
                  background: var(--card-background-color) !important;
                  box-shadow: var(--ha-card-box-shadow) !important;
                  border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                  margin-top: 2px;
                  margin-left: auto;
                  margin-right: auto;
                  transition: all 0.5s;
                }
                ha-card:hover {
                  background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                  z-index: 1;
                  transform: scale(1.0);
                  transition: all 0.1s;
                  box-shadow: 0 0 5px !important;
                }
          - type: custom:mushroom-template-card
            secondary: ''
            icon: mdi:devices
            layout: vertical
            icon_color: cyan
            tap_action:
              action: fire-dom-event
              local_conditional_card:
                action: set
                ids:
                  - home: hide
                  - light: hide
                  - portail: hide
                  - camera: hide
                  - media: hide
                  - divers: hide
                  - monitoring: hide
                  - device: toggle
                  - serveur: hide
                  - net: hide
                  - meteo: hide
                  - plan: hide
                  - search: hide
            card_mod:
              style: |
                ha-card {
                  width: 50px;
                  --spacing: 5px;
                  background: var(--card-background-color) !important;
                  box-shadow: var(--ha-card-box-shadow) !important;
                  border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                  margin-top: 2px;
                  margin-left: auto;
                  margin-right: auto;
                  transition: all 0.5s;
                }
                ha-card:hover {
                  background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                  z-index: 1;
                  transform: scale(1.0);
                  transition: all 0.1s;
                  box-shadow: 0 0 5px !important;
                }
          - type: custom:mushroom-template-card
            primary: ''
            secondary: ''
            icon: mdi:server-network
            layout: vertical
            icon_color: |2-
                {% if is_state('device_tracker.dalg_udm', 'home') %}
                  green
                {% else %}
                  red
                {% endif %}
            tap_action:
              action: fire-dom-event
              local_conditional_card:
                action: set
                ids:
                  - home: hide
                  - light: hide
                  - portail: hide
                  - camera: hide
                  - media: hide
                  - divers: hide
                  - monitoring: hide
                  - device: hide
                  - serveur: toggle
                  - net: hide
                  - meteo: hide
                  - plan: hide
                  - search: hide
            card_mod:
              style:
                mushroom-shape-icon$: |
                  .shape {
                    {% set net = states('device_tracker.dalg_udm') %}
                    {% if net == 'not_home' %}
                      --shape-animation: ping 2s infinite;
                    {% endif %}
                    {{ 'animation: none;' if not is_state('device_tracker.dalg_udm', 'home') }}
                  }
                  @keyframes ping {
                    0% { box-shadow: 0 0 1px 1px rgba(var(--rgb-red), 0.7); }
                    100% { box-shadow: 0 0 5px 15px transparent; }
                  }
                style: |
                  ha-card {
                    width: 50px;
                    --spacing: 5px;
                    background: var(--card-background-color) !important;
                    box-shadow: var(--ha-card-box-shadow) !important;
                    border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                    margin-top: 2px;
                    margin-left: auto;
                    margin-right: auto;
                    transition: all 0.5s;
                  }
                  ha-card:hover {
                    background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                    z-index: 1;
                    transform: scale(1.0);
                    transition: all 0.1s;
                    box-shadow: 0 0 5px !important;
                  }
          - type: custom:mushroom-template-card
            secondary: ''
            icon: mdi:update
            layout: vertical
            icon_color: |-
              {% if is_state('group.grp_update_all', 'on') %}
                red
              {% elif not is_state('sensor.hacs', '0') %}
                red
              {% else %}
                green
              {% endif %}
            badge_icon: none
            badge_color: |-
              {% if is_state('group.grp_update_all', 'on') %}
                red
              {% elif not is_state('sensor.hacs', '0') %}
                red
              {% else %}
                disable
              {% endif %}
            tap_action:
              action: fire-dom-event
              haptic: heavy
              browser_mod:
                service: browser_mod.popup
                data:
                  style: '--popup-background-color: transparent;'
                  size: normal
                  content:
                    type: custom:stack-in-card
                    cards:
                      - type: custom:auto-entities
                        card:
                          square: false
                          type: grid
                          columns: 1
                        card_param: cards
                        filter:
                          include:
                            - entity_id: update.home*
                              options:
                                type: custom:mushroom-entity-card
                          exclude:
                            - entity_id: update.*
                              state: 'off'
                        sort:
                          method: friendly_name
                          reverse: false
                          numeric: false
                          ignore_case: true
                      - type: custom:auto-entities
                        card:
                          square: false
                          type: grid
                          columns: 1
                        card_param: cards
                        filter:
                          include:
                            - entity_id: update.*
                              options:
                                type: custom:mushroom-entity-card
                          exclude:
                            - entity_id: update.*
                              state: 'off'
                            - entity_id: update.dalg*
                            - entity_id: update.home*
                        sort:
                          method: friendly_name
                          reverse: false
                          numeric: false
                          ignore_case: true
                      - type: custom:auto-entities
                        card:
                          square: false
                          type: grid
                          columns: 1
                        card_param: cards
                        filter:
                          include:
                            - entity_id: update.*
                              options:
                                type: custom:mushroom-entity-card
                          exclude:
                            - entity_id: update.*
                              state: 'off'
                            - entity_id: update.dalg_ap*
                            - entity_id: update.dalg_lte
                            - entity_id: update.dalg_switch*
                            - entity_id: update.dalg_udm
                            - entity_id: update.home*
                            - entity_id: update.file_editor_update
                            - entity_id: update.influxdb_update
                            - entity_id: update.let_s_encrypt_update
                            - entity_id: update.mosquitto_broker_update
                            - entity_id: update.myelectricaldata_update
                            - entity_id: update.node_red_update
                            - entity_id: update.samba_share_update
                            - entity_id: update.sqlite_web_update
                            - entity_id: update.terminal_ssh_update
                            - entity_id: update.z_wave_js_update
                            - entity_id: update.zigbee2mqtt_edge_update
                        sort:
                          method: friendly_name
                          reverse: false
                          numeric: false
                          ignore_case: true
                      - type: custom:auto-entities
                        card:
                          square: false
                          type: grid
                          columns: 1
                        card_param: cards
                        filter:
                          include:
                            - entity_id: update.*
                              options:
                                type: custom:mushroom-entity-card
                          exclude:
                            - entity_id: update.*
                              state: 'off'
                            - entity_id: update.dalg_nas_dsm_update
                            - entity_id: update.dalg_ups
                            - entity_id: update.home*
                            - entity_id: update.file_editor_update
                            - entity_id: update.influxdb_update
                            - entity_id: update.let_s_encrypt_update
                            - entity_id: update.mosquitto_broker_update
                            - entity_id: update.myelectricaldata_update
                            - entity_id: update.node_red_update
                            - entity_id: update.samba_share_update
                            - entity_id: update.sqlite_web_update
                            - entity_id: update.terminal_ssh_update
                            - entity_id: update.z_wave_js_update
                            - entity_id: update.zigbee2mqtt_edge_update
                        sort:
                          method: friendly_name
                          reverse: false
                          numeric: false
                          ignore_case: true
                      - type: custom:auto-entities
                        card:
                          square: false
                          type: grid
                          columns: 1
                        card_param: cards
                        filter:
                          include:
                            - entity_id: sensor.hacs
                              options:
                                type: custom:mushroom-entity-card
                          exclude:
                            - entity_id: sensor.hacs
                              state: '0'
                        sort:
                          method: friendly_name
                          reverse: false
                          numeric: false
                          ignore_case: true
            card_mod:
              mushroom-shape-icon$: |
                ha-icon {
                  {% set state = states(config.entity) %}
                  {% if state == 'on' %}
                    --icon-animation: fade-out 1.5s infinite;
                  {% endif %}
                }
                @keyframes fade-out {
                  0% { opacity:1; }
                  50% { opacity:0; }
                  100% { opacity:1; }
                }
              style: |
                ha-card {
                  width: 50px;
                  --spacing: 5px;
                  background: var(--card-background-color) !important;
                  box-shadow: var(--ha-card-box-shadow) !important;
                  border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                  margin-top: 2px;
                  margin-left: auto;
                  margin-right: auto;
                  transition: all 0.5s;
                }
                /* Add subtle color on hover */
                ha-card:hover {
                  transform: scale(1.0);
                  transition: all 0.1s;
                  box-shadow: 0 0 5px !important;
                  background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                }
                mushroom-badge-icon:after {
                  {% if is_state('group.grp_update_all', 'on') %}
                    content: "{{ expand(states.group.grp_update_all) | selectattr( 'state', 'eq', 'on') | list | count + states('sensor.hacs') |float |int }}";
                    position: absolute;
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    background: rgb(var(--rgb-red));
                    color: var(--card-background-color);
                    font-weight: bolder;
                    border-radius: 50%;
                    top: 0;
                    width: 100%;
                    height: 100%;
                    font-size: 0.7em;
                  {% elif not is_state('sensor.hacs', '0') %}
                    content: "{{ expand(states.group.grp_update_all) | selectattr( 'state', 'eq', 'on') | list | count + states('sensor.hacs') |float |int }}";
                    position: absolute;
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    background: rgb(var(--rgb-red));
                    color: var(--card-background-color);
                    font-weight: bolder;
                    border-radius: 50%;
                    top: 0;
                    width: 100%;
                    height: 100%;
                    font-size: 0.7em;
                  {% endif %}
                }
      - type: horizontal-stack
        cards:
          - type: custom:mushroom-template-card
            primary: Search...
            secondary: ''
            icon: mdi:search-web
            icon_color: white
            entity: input_select.plex_recently
            tap_action:
              action: fire-dom-event
              browser_mod:
                service: browser_mod.popup
                data:
                  title: ChatGPT
                  content:
                    type: custom:stack-in-card
                    cards:
                      - type: entities
                        entities:
                          - entity: input_text.gpt_prompt
                      - type: markdown
                        content: >-
                          {{ state_attr('sensor.hassio_mindsdb_response',
                          'response_text') }}
                        title: Réponse
            card_mod:
              style: |
                ha-card {
                  {% if is_state('media_player.currently_playing', ['idle','off']) %}
                    background: var(--card-background-color) !important;
                    box-shadow: var(--ha-card-box-shadow) !important;
                    width: 100%;
                    --spacing: 5px;
                    margin-bottom: 2px;
                    margin-top: 2px;
                    border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                    margin-left: 0px;
                    margin-right: auto;
                  {% else %}
                    width: 50px;
                    --spacing: 5px;
                    background: var(--card-background-color) !important;
                    box-shadow: var(--ha-card-box-shadow) !important;
                    border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                    margin-top: 2px;
                    margin-bottom: 2px;
                    margin-left: 1%;
                    transition: all 0.5s;
                  {% endif %} 
                }
                ha-card:hover {
                  background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                  transition: all 0.1s;
                }
          - type: conditional
            conditions:
              - entity: media_player.currently_playing
                state_not: 'off'
              - entity: media_player.currently_playing
                state_not: idle
            card:
              type: custom:stack-in-card
              mode: horizontal
              cards:
                - type: custom:mushroom-media-player-card
                  entity: media_player.currently_playing
                  layout: horizontal
                  show_volume_level: true
                  use_media_info: true
                  tap_action:
                    action: fire-dom-event
                    browser_mod:
                      service: browser_mod.popup
                      data:
                        title: En cours
                        content:
                          type: custom:stack-in-card
                          cards:
                            - type: custom:mushroom-media-player-card
                              entity: media_player.currently_playing
                              icon_type: none
                              layout: vertical
                              media_controls:
                                - previous
                                - play_pause_stop
                                - next
                              volume_controls:
                                - volume_set
                                - volume_buttons
                              show_volume_level: false
                              use_media_info: true
                              collapsible_controls: false
                              card_mod:
                                style:
                                  mushroom-state-info$: |
                                    /* CSS for Mushroom Popup Media Player */
                                    .secondary:before {

                                      /* Add album name between song title and artist name */
                                      {% if state_attr(config.entity, 'media_album_name') != none %}
                                        content: "{{ state_attr(config.entity, 'media_album_name')}}\A";
                                      {% endif %}

                                      /* Format title to fit on seperate line */
                                      white-space: pre;
                                      text-overflow: ellipsis;
                                    }
                                  .: |
                                    ha-card {

                                      /* Remove border from media player */
                                      --ha-card-border-width: 0;

                                      /* Apply album art color to media player icon & volume bar */
                                      --rgb-state-media-player: var(--album-art-color);

                                      /* Disable transitions */
                                      transition: all 0.5s;
                                    }
                                    .actions {

                                      /* Apply album art color to media player controls */
                                      --rgb-primary-text-color: var(--album-art-color);
                                      --primary-text-color: rgb(var(--album-art-color));

                                      /* Move volume button to seperate row */
                                      display: block !important;
                                    }
                                    ha-card:before {
                                      content: "";

                                      /* Show album art above media player when active and default image when idle */
                                      {% if is_state(config.entity, ['playing', 'paused']) %}
                                        background: url( '{{ state_attr(config.entity, "entity_picture") }}') center no-repeat;
                                      {% else %}
                                        background: url('/local/idle_art.png') center no-repeat;
                                      {% endif %}

                                      /* Add padding around album art */
                                      margin: 0px 4px 16px;

                                      /* Add drop shadow to album art */
                                      filter: drop-shadow(4px 4px 6px rgba(var(--album-art-color), 0.3));

                                      /* Round borders of album art */
                                      border-radius: var(--control-border-radius);

                                      /* Adjust the album art aspect ratio based on media type */
                                      {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                      {% if media_type == 'tvshow' %}
                                        aspect-ratio: 16 / 9;
                                      {% elif media_type == 'movie' %}
                                        aspect-ratio: 2 / 3;
                                      {% else %}
                                        aspect-ratio: 1 / 1;
                                      {% endif %}

                                      /* Stretch album art to fit box. Fix for if album art is not sized correctly */
                                      background-size: 100% 100%;
                                    }
                                    mushroom-button {

                                      /* Size volume button to match other controls and center */
                                      display: flex;
                                      width: calc((100% / 3) - (var(--spacing) / 3) * 2);
                                      margin: auto;
                                    }
                                    mushroom-media-player-media-control,
                                    mushroom-media-player-volume-control {

                                      /* Correct margins for volume button on second row */
                                      display: flex;
                                      margin-right: 0px !important;
                                      
                                      /* Check if PLAY|STOP are supported and adjust margin accordingly */
                                      {% if state_attr(config.entity, 'supported_features') | int | bitwise_and(20480) > 0 %}
                                        margin-bottom: var(--spacing) !important;
                                      {% endif %}
                                    }
                            - entity: media_player.currently_playing
                              hide:
                                icon: true
                                name: true
                                runtime: true
                                source: true
                                power: true
                                state_label: true
                                volume: true
                                info: true
                                progress: false
                                controls: true
                              more_info: false
                              type: custom:mini-media-player
                              toggle_power: false
                              group: true
                              card_mod:
                                style:
                                  mmp-progress$: |
                                    paper-progress {

                                      /* Apply album art color to progress bar when paused */
                                      --paper-progress-container-color: rgba(var(--album-art-color), 0.2) !important;
                                      
                                      /* Apply album art color to progress bar when playing */
                                      --paper-progress-active-color: rgb(var(--album-art-color)) !important;
                                    }
                                  .: |
                                    ha-card {

                                      /* Move progress bar up into gap. Check if PLAY|STOP are supported */
                                      --base-offset: calc(4 * var(--mush-spacing, 12px)
                                                          + 1.33 * var(--mush-spacing, 12px)
                                                          + var(--mush-card-primary-line-height, 1.5) * var(--mush-card-primary-font-size, 14px)
                                                          + var(--mush-card-secondary-line-height, 1.5) * var(--mush-card-secondary-font-size, 12px)
                                                          + var(--mush-control-height, 42px));

                                      /* Check if Play (16385) or Stop (4096) are supported and add control button height if they are */
                                      {% if state_attr(config.entity, 'supported_features') | int | bitwise_and(20480) > 0 %}
                                        --control-offset: calc(var(--mush-spacing, 12px) + var(--mush-control-height, 42px));
                                      {% else %}
                                        --control-offset: 0px;
                                      {% endif %}

                                      /* Check if album name is present and add to height if it is */
                                      {% set album_name = state_attr(config.entity, 'media_album_name') %}
                                      {% if album_name == None or album_name == "" %}
                                        --album-offset: 0px;
                                      {% else %}
                                        --album-offset: calc(var(--mush-card-secondary-line-height, 1.5) * var(--mush-card-secondary-font-size, 12px));
                                      {% endif %}

                                      bottom: calc(var(--base-offset) + var(--control-offset) + var(--album-offset));

                                      /* Correct margins for progress bar */
                                      margin: 0px 28px -12px;

                                      /* Set height of card to match pregress bar height */
                                      height: var(--mmp-progress-height);

                                      /* Remove border outline */
                                      --ha-card-border-width: 0;

                                      /* Round corners of progress bar */
                                      --mmp-border-radius: var(--control-border-radius, 12px) !important;

                                      /* Set height of progress bar */
                                      --mmp-progress-height: 12px !important;

                                      /* Remove transitions to prevent progress bar floating in */
                                      transition: all 0.5s;
                                    }
                          card_mod:
                            style: |
                              :host {

                                /* Assign album art color to variable used in popup */
                                --album-art-color:      
                                {% if is_state('media_player.currently_playing', ['playing', 'paused']) %}
                                  {{ states('sensor.muted_color') }}
                                {% else %}
                                  141, 117, 238
                                {% endif %};

                                /* Remove background because it is applied to popup */
                                --ha-card-background: none;

                                
                              }
                        card_mod:
                          style:
                            ha-dialog$: |
                              .mdc-dialog__surface {

                                /* Apply gradient background to popup using album art colors. Set to default colors when idle */
                                {% if is_state('media_player.currently_playing', ['playing', 'paused']) %}
                                  background: linear-gradient(305deg, transparent 50%, rgba({{ states('sensor.dark_vibrant_color') }}, 0.4)), 
                                              linear-gradient(55deg, transparent 50%, rgba({{ states('sensor.vibrant_color') }}, 0.2)),  
                                              linear-gradient(180deg, transparent 40%, rgba({{ states('sensor.dark_muted_color') }}, 0.3));
                                {% else %}
                                  background: linear-gradient(0deg, transparent 40%, rgba(192, 127, 190, 0.3)), 
                                              linear-gradient(240deg, transparent 40%, rgba(143, 119, 237, 0.3)),  
                                              linear-gradient(120deg, transparent 40%, rgba(122, 181, 239, 0.3));
                                {% endif %}
                              }
                            ha-header-bar$: |
                              .mdc-top-app-bar {

                                /* Remove header background so that popup background is visible */
                                --mdc-theme-primary: none;

                                /* Reduced the gap between header and album art */
                                margin-bottom: -16px;
                              }
                            .: |
                              :host {

                                /* Set width of popup */
                                --popup-min-width: 450px;
                              }
                  card_mod:
                    style: |
                      mushroom-shape-icon {
                        display: flex;
                        {% set media_type = state_attr(config.entity, 'media_content_type') %}
                        {% if media_type == 'tvshow' %}
                          --card-mod-icon: mdi:television-classic;
                          animation: flicker 1s linear infinite alternate;
                        {% elif media_type == 'movie' %}
                          --card-mod-icon: mdi:movie-roll;
                          --icon-animation: spin 2s linear infinite reverse;
                        {% elif media_type == 'music' %}
                          --card-mod-icon: mdi:music;
                          animation: beat 1.3s ease-out infinite both;
                        {% elif media_type == 'playlist' %}
                          --card-mod-icon: mdi:music;
                          animation: beat 1.3s ease-out infinite both;
                        {% else %}
                          --card-mod-icon: mdi:play;
                        {% endif %}
                      }
                      @keyframes flicker {
                        0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--rgb-indigo), 1); }
                        32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--rgb-indigo), 0.6); }
                      }
                      @keyframes beat {
                        0%, 60% { --icon-symbol-size: 21px; }
                        5%, 17%, 57% { --icon-symbol-size: 22px; }
                        10%, 20%, 51% { --icon-symbol-size: 23px; }
                        25%, 45% { --icon-symbol-size: 24px; }
                        30%, 39% { --icon-symbol-size: 25px; }
                        33% { --icon-symbol-size: 26px; }
                      }
                      ha-card {
                        {% if not is_state(config.entity, 'off') %}
                          background: rgba(var(--rgb-card-background-color), 0.6) url( '{{ state_attr(config.entity, "entity_picture") }}' ) center no-repeat;
                          background-size: cover;
                          background-blend-mode: overlay;
                        {% endif %} 
                        border-radius: 35px 35px 35px 35px !important;
                        height: 55px !important;
                        margin-left: -8px;
                      }
              card_mod:
                style: |
                  ha-card {
                    {% if is_state('media_player.currently_playing', ['playing','paused']) %}
                      background-image: url( '{{ state_attr( "media_player.currently_playing", "entity_picture" ) }}' );
                      background-position: center;
                      background-repeat: no-repeat;
                      background-size: cover;
                      background-color: rgba(var(--rgb-card-background-color), 0.8);
                      background-blend-mode: overlay;
                      position: relative;
                      margin-left: -72%;
                      width: 170%;
                      border-radius: 35px 35px 35px 35px !important;
                      transition: all 0.5s;
                    {% else %}
                      width: 50px;
                      --spacing: 5px;
                      background: var(--card-background-color) !important;
                      box-shadow: var(--ha-card-box-shadow) !important;
                      border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                      margin-top: 2px;
                      margin-left: auto;
                      margin-right: -64%;
                      transition: all 0.5s;
                    {% endif %} 
                  }
      - type: horizontal-stack
        cards:
          - type: custom:mushroom-template-card
            secondary: ''
            icon: mdi:plus
            layout: vertical
            icon_color: black
            tap_action:
              action: fire-dom-event
              local_conditional_card:
                action: set
                ids:
                  - menu: toggle
            card_mod:
              style: |
                ha-card {
                  width: 50px;
                  --spacing: 5px;
                  background: var(--card-background-color) !important;
                  box-shadow: var(--ha-card-box-shadow) !important;
                  border-radius: calc(var(--ha-card-border-radius, 12px) * 2) !important;
                  margin-top: 2px;
                  margin-bottom: 2px;
                  margin-left: auto;
                  margin-right: auto;
                  transition: all 0.5s;
                }
                ha-card:hover {
                  background: color-mix(in srgb, var(--{{ config.icon_color }}-color) 25%, var(--card-background-color)) !important;
                  z-index: 1;
                  transform: scale(1.0);
                  transition: all 0.1s;
                  box-shadow: 0 0 5px !important;
                }
card_mod:
  style: |
    ha-card {
      overflow: visible !important;
      margin-top: calc(-1 * var(--mush-chip-spacing, 8px));
      box-shadow: none;
      border: none;
      background: none;
      padding: var(--mush-chip-spacing, 8px);
      transition: all 0.5s;
      {% if is_state('binary_sensor.ping_dalg_pc', 'on') %}
      {% elif is_state('binary_sensor.ping_dalg_dell', 'on') %}
      {% elif is_state('input_boolean.notifications', 'on') %}
      {% elif not is_state('sensor.devices_with_low_battery', '0') %}
      {% elif is_state('input_boolean.bal', 'on') %}
      {% elif is_state('calendar.anniversaire', 'on') %}
      {% elif is_state('group.grp_update_all', 'on') %}
        margin-bottom: 0px !important;
      {% else %}
        margin-bottom: 30px !important;
      {% endif %}
    }
    :host {
      position: sticky !important;
      z-index: 4 !important;
      top: var(--header-height) !important;
    }
    ha-card:before {
      content: "";
      position: absolute;
      top: 0px;
      left: 0px;
      height: 100%;
      width: calc(100% - 2 * var(--ha-card-border-width, 1px));
      z-index: -1;
      backdrop-filter: blur(12px);
      -webkit-backdrop-filter: blur(12px);
      border-radius: 35px;
      box-shadow: var(--ha-card-box-shadow);
      border: var(--ha-card-border-width, 1px) solid var(--ha-card-border-color, var(--divider-color, #e0e0e0));
      {% if is_state('media_player.currently_playing', ['playing', 'paused']) %}
        background: linear-gradient(135deg, rgba({{ states('sensor.dark_vibrant_color') }}, 0.85), rgba({{ states('sensor.dark_muted_color') }}, 0.75));
      {% else %}
        background: rgba(var(--rgb-card-background-color), 0.20);
      {% endif %}
    }
